{"version":3,"sources":["Components/Login/logimg.jpg","Components/Login/logm.jpg","Utils/index.js","Assets/logo.svg","Assets/tronlink.png","Components/Wallets/ConnectWallet.js","Tools/WindowDimensions.js","Components/Redux/Reducer/AuthReducer.js","Utils/Converter.js","Components/Redux/Reducer/PreviewMode.js","Components/Redux/Reducer/UserId.js","Components/Login/Login.jsx","Components/Register/Register.jsx","Routes/Auth.js","Components/topbar/logo.png","Components/Redux/Reducer/MenuReducer.js","Assets/success.svg","Components/topbar/Topbar.jsx","webpack:///./src/Assets/logo.svg?7b74","Assets/wallet.svg","Assets/wallet-dark.svg","Assets/tree.svg","Assets/tree-dark.svg","Assets/upline.svg","Assets/upline-dark.svg","Assets/burn.svg","Assets/burn-dark.svg","Components/Sidenavbar/Sidenavbar.jsx","Components/Control_Panel/Chart.jsx","Assets/pocket1.svg","Assets/pocket2.svg","Assets/pocket3.svg","Assets/pocket4.svg","Components/Control_Panel/Controlpanel.jsx","Components/Message/message.jpg","Components/Message/Message.jsx","Components/Table/Table.jsx","Components/Tree/Tree.jsx","Components/Redux/Reducer/PartnersLevelJson.js","Components/Partners/Partners.jsx","Components/Uplines/Table.jsx","Components/Uplines/Uplines.jsx","Components/Lostprofits/Table.jsx","Components/Lostprofits/Lostprofits.jsx","Components/Sidenavbar/Sidenavbarmobile.js","Routes/Console.js","App.js","reportWebVitals.js","Components/Redux/Store.js","index.js"],"names":["contractAddress","utils","tronWeb","contract","setTronWeb","this","at","ConnectWallet","_ref","Connect","_jsxs","onClick","className","children","_jsx","width","src","logo","getWindowDimensions","innerWidth","innerHeight","height","window","useWindowDimensions","windowDimensions","setWindowDimensions","useState","useEffect","handleResize","addEventListener","removeEventListener","slice","createSlice","name","initialState","value","reducers","toogleAuth","state","action","payload","actions","getAuth","auth","Hex_to_base58","async","_window","_window$tronWeb","_window$tronWeb$addre","address","fromHex","string","tooglePreviewModeId","getPreviewModeId","previewModeId","toogleuserId","getuserId","userId","Login","_window$tronLink","_window$tronLink$tron","_window$tronLink$tron2","_window2","_window2$tronLink","_window2$tronLink$tro","_window2$tronLink$tro2","id","tronLink","defaultAddress","base58","useSelector","dispatch","useDispatch","loginId","setloginId","previewId","setpreviewId","Loader","setLoader","walletId","FOUNDATION_ADDRESS","setFOUNDATION_ADDRESS","settronWeb","installed","loggedIn","localStorage","getItem","document","title","checklogin","setInterval","_window3","_window3$tronLink","_window4","_window4$tronLink","_window4$tronLink$tro","_window4$tronLink$tro2","clearInterval","checkUser","FetchUserId","LoadUserId","Utils","users","userAddress","call","Promise","resolve","toNumber","CONNECT_WALLET","_window5","_window5$tronWeb","_window6","_window6$tronLink","_window7","ready","location","reload","tronWebState","tries","timer","TRONGRID_API","TronWeb","console","log","hex","toHex","on","e","then","checkUser2","LoadUserExist","isExist","href","Logo","Form","onSubmit","preventDefault","HandleSubmit","Group","controlId","Control","placeholder","onChange","target","autoComplete","autoCorrect","required","trim","length","toast","error","test","userexist","LoadUserAddress","userList","JSON","parse","disabled","style","opacity","Register","setRegister","FaBullseye","refId","setrefId","alertdata","setalertdata","_window$location","_window$location$path","_window$location2","_window$location2$pat","pathname","split","Buy","_window$tronWeb2","_window$tronWeb2$addr","toastId","loading","regUser","refID","send","feeLimit","callValue","shouldPollResponse","remove","success","res","catch","err","paddingInline","marginTop","CurrentIdLoad","currUserID","CurrentId","toString","Link","to","textDecoration","Auth","authStatus","Toaster","Route","component","exact","path","toogleMenu","getTooglemenu","menu","Topbar","_path","_g","_path2","opensidebar","opened","userID","marginLeft","marginRight","overflow","alt","successIcon","concat","_extends","Object","assign","bind","i","arguments","source","key","prototype","hasOwnProperty","apply","SvgLogo","svgRef","titleId","props","viewBox","fill","xmlns","ref","maskType","maskUnits","x","y","d","mask","ForwardRef","Sidenavbar","useLocation","VALIDROUTE","PATHNAME","_location$pathname","toLowerCase","color","display","flexDirection","alignItems","WalletIcon","class","WalletIconDark","TreeIcon","TreeIconDark","UplineIcon","UplineIconDark","BurnIcon","BurnIconDark","Logout","justifyContent","lineOptions","plugins","legend","gridLines","scales","grid","ticks","precision","tooltips","mode","intersect","hover","styles","fontFamily","textAlign","alignItem","Chart","data","chartData","labels","datasets","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","backgroundColor","newData","setnewData","Line","options","Controlpanel","directPartners","setdirectPartners","indirectPartners","setindirectPartners","coinsCount","setcoinsCount","coinPrice","setcoinPrice","setchartData","currentLevel","setcurrentLevel","expiredDate","setexpiredDate","LoadingLevels","setLoadingLevels","LEVEL_PRICE","FetchCoinCurrecy","fetch","json","_data$tron","tron","usd","FetchData","all","FetchLevel","_userData$directRefer","_userData$indirectRef","_userData$indirectRef2","userData","values","earning","directReferralCount","indirectReferralCount","indirectReferralLength","GetChartData","indirectCount","viewUserReferral","indirectPartnersFetch","items","newArray","item","push","graphData","Temp","joinedData","joined","moment","unix","format","undefined","SortedObject","fromEntries","entries","sort","a","b","aa","reverse","join","bb","resData","ProccessRefralGraphData","indirectPartnersList","TempindirectPartnersList","Array","from","_","index","partnerAddress","viewUserIndirectReferral","convert","canActivate","canExtend","active","expires","Math","round","Date","getTime","now","getUserCurrentLevel","getUserLevelsData","_ref2","levelsData","level1","level2","level3","canActivate2","canActivate3","canExtend3","setLevelsData","LevelsData","level","_LevelsData","_LevelsData2","_LevelsData3","isActive","isExtendable","position","checkCriteria","buytoast","buyLevel","Pocket1Icon","CountUp","duration","end","Pocket2Icon","decimals","Pocket3Icon","Pocket4Icon","Spinner","variant","size","animation","role","map","cursor","Message","AiFillBell","message","rel","Table","coinprice","tableData","settableData","minWidth","coins","toFixed","TreeLine","styled","button","_templateObject","_taggedTemplateLiteral","TreeItem","funcs","toggleOpen","makeParent","onDoubleClick","isOpen","TreeList","tree","_ref3","child","Tree","_ref4","setTree","newTree","addChild","parent","tooglePartnersLevelJson","Partners","searchId","setsearchId","LoadingStruct","setLoadingStruct","LoadingTable","setLoadingTable","searchLoader","setsearchLoader","searchPartnerData","setsearchPartnerData","treeData","settreeData","TableData","setTableData","ProccessTreeData","temp","id_to_num","resId","response","TREEDATA","FetchTree","ans","paymentsLength","payment","payments","obj","payerAddress","payerId","amount","FetchPayments","getcurrentLevel","checkLevel","viewUserLevelExpired","currentTimestamp","readOnly","origin","copyLink","copy","_Fragment","SearchAboutPartner","Uplines","setdata","checkLevelData","temp_address","TempArray","_data$referrerID","referrerID","refererAddressPromise","refererAddress","filter","Lostprofits","lostProfit","referralId","loss","Sidenavbarmobile","openMenu","setopenMenu","Offcanvas","show","onHide","Header","closeButton","Body","Console","DISCONNECT_EMIT","_window$tronLink2","ScrollMemory$1","App","BrowserRouter","basename","process","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","MenuReducer","AuthReducer","partnersLevelJson","PartnersLevelJson","PreviewMode","UserId","ReactDOM","React","StrictMode","Provider","store","Store","getElementById"],"mappings":"6kBAAe,ICAA,I,gBCAf,MAAMA,EAAkB,qCAmBTC,MAZD,CACVC,SAAS,EACTC,UAAU,EACVH,gBAAgBA,EAEhB,gBAAMI,CAAWF,GACbG,KAAKH,QAAUA,EACfG,KAAKF,eAAiBD,EAAQC,WAAWG,GAAGN,EAChD,GCfW,MAA0B,iC,SCA1B,MAA0B,qC,OCY1BO,MATOC,IAAkB,IAAjB,QAAEC,GAASD,EAChC,OACEE,eAAA,OAAKC,QAASA,IAAMF,IAAWG,UAAU,gBAAeC,SAAA,CACxDC,cAAA,OAAKC,MAAO,GAAIC,IAAKC,IACrBH,cAAA,QAAAD,SAAM,6BACF,ECNR,SAASK,IACP,MAAQC,WAAYJ,EAAOK,YAAaC,GAAWC,OACnD,MAAO,CACLP,QACAM,SAEJ,CAEe,SAASE,IACtB,MAAOC,EAAkBC,GAAuBC,mBAASR,KAWzD,OATAS,qBAAU,KACR,SAASC,IACPH,EAAoBP,IACtB,CAGA,OADAI,OAAOO,iBAAiB,SAAUD,GAC3B,IAAMN,OAAOQ,oBAAoB,SAAUF,EAAa,GAC9D,IAEIJ,CACT,C,YCrBO,MAAMO,EAAQC,YAAY,CAC/BC,KAAM,OACNC,aAAc,CACZC,MAAO,aAETC,SAAU,CACRC,WAAYA,CAACC,EAAOC,KAClBD,EAAMH,MAASI,EAAOC,OAAQ,MAKvB,WAAEH,GAAeN,EAAMU,QAevBC,EAAUJ,GAASA,EAAMK,KAAKR,MAE5BJ,QAAa,QC/BrB,MAAMa,EAAgBC,UAAY,IAAAC,EAAAC,EAAAC,EAAA,OAAU,QAAVF,EAAIxB,cAAM,IAAAwB,GAAS,QAATC,EAAND,EAAQ5C,eAAO,IAAA6C,GAAS,QAATC,EAAfD,EAAiBE,eAAO,IAAAD,OAAlB,EAANA,EAA0BE,QAAQC,EAAO,ECEzEpB,EAAQC,YAAY,CAC/BC,KAAM,gBACNC,aAAc,CACZC,MAAO,MAETC,SAAU,CACRgB,oBAAqBA,CAACd,EAAOC,KAC3BD,EAAMH,MAASI,EAAOC,OAAQ,MAKvB,oBAAEY,GAAwBrB,EAAMU,QAOhCY,EAAmBf,GAASA,EAAMgB,cAAcnB,MAE9CJ,QAAa,QCrBrB,MAAMA,EAAQC,YAAY,CAC/BC,KAAM,SACNC,aAAc,CACZC,MAAO,IAETC,SAAU,CACRmB,aAAcA,CAACjB,EAAOC,KACpBD,EAAMH,MAASI,EAAOC,OAAQ,MAKvB,aAAEe,GAAiBxB,EAAMU,QAOzBe,EAAYlB,GAASA,EAAMmB,OAAOtB,MAEhCJ,QAAa,QCkVb2B,MAzUDA,KAAO,IAADZ,EAAAa,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAClB,MAAM,OAAE5C,EAAM,MAAEN,GAAUQ,IAC1B,IAAI2C,EAAW,QAATpB,EAAGxB,cAAM,IAAAwB,GAAU,QAAVa,EAANb,EAAQqB,gBAAQ,IAAAR,GAAS,QAATC,EAAhBD,EAAkBzD,eAAO,IAAA0D,GAAgB,QAAhBC,EAAzBD,EAA2BQ,sBAAc,IAAAP,OAAnC,EAANA,EAA2CQ,OAEjCC,YAAY5B,GAA/B,MACM6B,EAAWC,eAEVC,EAASC,GAAchD,mBAAS,KAChCiD,EAAWC,GAAgBlD,mBAAS,KACpCmD,EAAQC,GAAapD,oBAAS,GAGrC,IAAIqD,EAAiB,QAATjB,EAAGxC,cAAM,IAAAwC,GAAU,QAAVC,EAAND,EAAQK,gBAAQ,IAAAJ,GAAS,QAATC,EAAhBD,EAAkB7D,eAAO,IAAA8D,GAAgB,QAAhBC,EAAzBD,EAA2BI,sBAAc,IAAAH,OAAnC,EAANA,EAA2CI,OAG1D,MAAOW,EAAoBC,GAAyBvD,mBAjBjC,uCAmBZxB,EAASgF,GAAcxD,mBAAS,CAAEyD,WAAW,EAAOC,UAAU,IAEzDC,aAAaC,QAAQ,gBAGjC3D,qBAAU,KACR4D,SAASC,MAAQ,kBAEjB,MAAMC,EAAaC,aAAY7C,UAAa,IAAD8C,EAAAC,EACVC,EAAAC,EAAAC,EAAAC,EAArB,QAAVL,EAAIrE,cAAM,IAAAqE,GAAU,QAAVC,EAAND,EAAQxB,gBAAQ,IAAAyB,GAAhBA,EAAkB1F,UAEpB+F,cAAcR,SAERS,EAAgB,QAAPL,EAACvE,cAAM,IAAAuE,GAAU,QAAVC,EAAND,EAAQ1B,gBAAQ,IAAA2B,GAAS,QAATC,EAAhBD,EAAkB5F,eAAO,IAAA6F,GAAgB,QAAhBC,EAAzBD,EAA2B3B,sBAAc,IAAA4B,OAAnC,EAANA,EAA2C3B,QAC7D,GACC,IAAK,GACP,IAEH,MAqEM8B,EAActD,UAClB,MAAMuD,QAAmBC,EAAMlG,SAASmG,MAAMC,GAAaC,OACrD/C,QAAegD,QAAQC,QAAQN,GAErC7B,EAAShB,EAAaE,EAAOS,GAAGyC,YAAY,EA6CxCC,EAAiB/D,UACrB,IAAK,IAADgE,EAAAC,EAAAC,EAAAC,EAAAjE,EAAAC,EAAAiE,EACS,QAAPJ,EAACvF,cAAM,IAAAuF,GAAS,QAATC,EAAND,EAAQ3G,eAAO,IAAA4G,GAAfA,EAAiBI,OAAgB,QAAPH,EAACzF,cAAM,IAAAyF,GAAU,QAAVC,EAAND,EAAQ5C,gBAAQ,IAAA6C,GAAhBA,EAAkB9G,SAChDoB,OAAO6F,SAASC,SAGlB,IAAIX,SAASC,IACX,MAAMW,EAAe,CACnBlC,YAAa7D,OAAOpB,QACpBkF,SAAU9D,OAAOpB,SAAWoB,OAAOpB,QAAQgH,OAG7C,GAAIG,EAAalC,UAGf,OAFAD,EAAWmC,GAEJX,IAGT,IAAIY,EAAQ,EAEZ,MAAMC,EAAQ7B,aAAY,KACxB,GAAI4B,GAAS,GAAI,CACf,MAAME,EAAe,0BAcrB,OAZAlG,OAAOpB,QAAU,IAAIuH,IACnBD,EACAA,EACAA,GAGFtC,EAAW,CACTC,WAAW,EACXC,UAAU,IAGZa,cAAcsB,GACPb,GACT,CAKA,GAHAW,EAAalC,YAAc7D,OAAOpB,QAClCmH,EAAajC,SAAW9D,OAAOpB,SAAWoB,OAAOpB,QAAQgH,OAEpDG,EAAalC,UAAW,OAAOmC,IAEpCpC,EAAWmC,GACXX,GAAS,GACR,IAAI,IAGTgB,QAAQC,IAAIrG,OAAOpB,QAAS,WAU5BoB,OAAOpB,QAAQkE,eAAiB,CAC9BwD,IAAmB,QAAhB7E,EAAEzB,OAAOpB,eAAO,IAAA6C,GAAS,QAATC,EAAdD,EAAgBE,eAAO,IAAAD,OAAT,EAAdA,EAAyB6E,MAAM3D,GACpCG,OAAQH,GAGV5C,OAAOpB,QAAQ4H,GAAG,kBAAmBC,IAE/B7H,EAAQkF,UACZF,EAAW,CACThF,QAAS,CACPiF,WAAW,EACXC,UAAU,IAEZ,UAGEiB,EAAMjG,WAAiB,QAAP6G,EAAC3F,cAAM,IAAA2F,OAAA,EAANA,EAAQ/G,SAAS8H,MAAKnF,gBAErCoF,GAAY,GAItB,CAAE,MAAOF,GACPL,QAAQC,IAAII,EACd,GAOI7B,EAAYrD,UAEhB,UACQwD,EAAMjG,WAAWkB,OAAOpB,SAAS8H,MAAKnF,UAC1C,MAAMqF,QAAsB7B,EAAMlG,SAASmG,MAAMpC,GAAIsC,OAE5B,UADDC,QAAQC,QAAQwB,IAC1BC,eACNhC,EAAYjC,GAClBK,EAASlC,EAAW,cAIpBkC,EAASlC,EAAW,aACtB,GAGJ,CAAE,MAAO0F,GACPL,QAAQC,IAAII,EACd,GAGIE,EAAapF,gBAEXwD,EAAMjG,WAAWkB,OAAOpB,SAAS8H,MAAKnF,UAC1C,MAAMqF,QAAsB7B,EAAMlG,SAASmG,MAAMpC,GAAIsC,OAG5B,UAFDC,QAAQC,QAAQwB,IAE1BC,eACNhC,EAAYjC,GAClBK,EAASlC,EAAW,eAEpBf,OAAO6F,SAASiB,KAAO,YACvB7D,EAASlC,EAAW,cACtB,GAEA,EAGJ,OACEvB,cAAA,OAAKF,UAAU,aAAYC,SACzBH,eAAA,OAAKE,UAAW,SAASC,SAAA,CACvBC,cAAA,OAAKF,UAAU,WAAUC,SACvBC,cAAA,OAAKE,IAAKqH,MAGZvH,cAACP,EAAa,CAACE,QAASmG,IAExB9F,cAAA,OAAKF,UAAU,UAASC,SAAC,OAGzBC,cAAA,OAAKF,UAAU,kBAAiBC,SAC9BH,eAAC4H,IAAI,CAACC,SAAWR,GAvDJlF,WACnBkF,EAAES,gBAAgB,EAsDWC,CAAaV,GAAGlH,SAAA,CACrCC,cAACwH,IAAKI,MAAK,CAACC,UAAU,iBAAgB9H,SACpCC,cAACwH,IAAKM,QAAO,CACX3G,KAAK,OACLrB,UAAU,QACViI,YAAY,8BACZ1G,MAAOwC,EACPmE,SAAWf,IACTnD,EAAamD,EAAEgB,OAAO5G,MAAM,EAE9B6G,aAAc,QACdC,YAAa,QACbC,UAAQ,MAIZpI,cAAA,UACEH,QApRQkC,UAClB,IACE,GAA+B,GAA3B8B,EAAUwE,OAAOC,OACnB,OAAOC,IAAMC,MAAM,oCAIrB,GAAiB,GAAb3E,GAA8B,sCAAZI,EAEpB,YADAsE,IAAMC,MAAM,mBAOd,GAJAxE,GAAU,GAIN,WAAWyE,KAAK5E,GAAY,CAE9B,MAAMuD,QAAsB7B,EAAMlG,SAASmG,MAAM3B,GAAW6B,OAEtDgD,QAAkB/C,QAAQC,QAAQwB,GAExC,GADApD,GAAU,GACU,GAAhB0E,EAAU,GAGZ,OAFA1E,GAAU,GAEHuE,IAAMC,MAAM,uBAGrB/E,EAASnB,QAA0BR,EAAc+B,WAC3CwB,EAAYxB,GAClBJ,EAASlC,EAAW,YACtB,KAAO,CACL,MAAMoH,QAAwBpD,EAAMlG,SACjCuJ,SAASC,KAAKC,MAAMjF,IACpB6B,OAEH,IAAID,QAAoBE,QAAQC,QAAQ+C,GAIxC,MAAMvB,QAAsB7B,EAAMlG,SAASmG,MAAMC,GAAaC,OAI9D,GAAyB,UAFDC,QAAQC,QAAQwB,IAE1BC,QAEZ,OADArD,GAAU,GACHuE,IAAMC,MAAM,uBAErB/E,EAASnB,QAA0BR,EAAc2D,WAC3CJ,QAAkBvD,EAAc2D,IACtChC,EAASlC,EAAW,YAGtB,CAUF,CAAE,MAAO0F,GACPL,QAAQC,IAAII,EAAG,OACfnB,IACA9B,GAAU,EACZ,GAmNU+E,SAAUhF,EACViF,MAAO,CAAEC,QAASlF,EAAS,GAAM,GACjCjE,UAAU,SAAQC,SAEjBgE,EACC/D,cAAA,KAAAD,SAAG,0BAEHC,cAAA,KAAAD,SAAG,wCAMT,E,QClFKmJ,MA5PEA,KAAO,IAADlH,EAAAa,EAAAC,EAAAC,EACrB,MAAM,OAAExC,EAAM,MAAEN,GAAUQ,KAEnByI,EAAUC,GAAevI,mBAASwI,MAElCzF,EAASC,GAAchD,mBAAS,KAChCyI,EAAOC,GAAY1I,mBAAS,OAC5B2I,EAAWC,GAAgB5I,mBAAS,OACpCmD,EAAQC,GAAapD,oBAAS,GAQ/B6C,GADaD,YAAY5B,GACd8B,gBAEVtE,EAASgF,GAAcxD,mBAAS,CAAEyD,WAAW,EAAOC,UAAU,IAEzDC,aAAaC,QAAQ,gBAAjC,IAMIpB,EAAW,QAATpB,EAAGxB,cAAM,IAAAwB,GAAU,QAAVa,EAANb,EAAQqB,gBAAQ,IAAAR,GAAS,QAATC,EAAhBD,EAAkBzD,eAAO,IAAA0D,GAAgB,QAAhBC,EAAzBD,EAA2BQ,sBAAc,IAAAP,OAAnC,EAANA,EAA2CQ,OAEpD1C,qBAAU,KAAO,IAAD4I,EAAAC,EAEgCC,EAAAC,GAD9CnF,SAASC,MAAQ,qBACE,QAAnB+E,EAAIjJ,OAAO6F,gBAAQ,IAAAoD,GAAU,QAAVC,EAAfD,EAAiBI,gBAAQ,IAAAH,GAAzBA,EAA2BI,MAAM,KAAK,KACxCR,EAAwB,QAAhBK,EAACnJ,OAAO6F,gBAAQ,IAAAsD,GAAU,QAAVC,EAAfD,EAAiBE,gBAAQ,IAAAD,OAAV,EAAfA,EAA2BE,MAAM,KAAK,GACjD,GACC,IAEH,MA6FMC,EAAMhI,UAAkB,IAADiI,EAAAC,EAQ3B,OAPAjG,GAAU,GAEVxD,OAAOpB,QAAQkE,eAAiB,CAC9BwD,IAAmB,QAAhBkD,EAAExJ,OAAOpB,eAAO,IAAA4K,GAAS,QAATC,EAAdD,EAAgB7H,eAAO,IAAA8H,OAAT,EAAdA,EAAyBlD,MAAM3D,GACpCG,OAAQH,SAGGmC,EAAMjG,WAAWkB,OAAOpB,SAAS8H,MAAKnF,UACjD,MAAMmI,EAAU3B,IAAM4B,QAAQ,wCAC9B,UAEQ5E,EAAMlG,SACT+K,QAAQC,GACRC,KAAK,CACJC,SAAU,IACVC,UAAW,IACXC,oBAAoB,IAErBvD,MAAKnF,UACJwG,IAAMmC,OAAOR,GACb3B,IAAMoC,QAAQ,uCACRtF,EAAYjC,GAClBK,EAASlC,EAAW,aACpBf,OAAO6F,SAASiB,KAAO,IAGhBsD,KAERC,OAAM9I,gBACCqD,EAAU8E,GAChBtD,QAAQC,IAAIiE,EAAI,GAEtB,CAAE,MAAOtC,GACP5B,QAAQC,IAAI2B,SACNpD,EAAU8E,EAClB,IACA,EAGE9E,EAAYrD,gBAEVwD,EAAMjG,WAAWkB,OAAOpB,SAAS8H,MAAKnF,UAC1C,MAAMqF,QAAsB7B,EAAMlG,SAASmG,MAAMpC,GAAIsC,OAE5B,UADDC,QAAQC,QAAQwB,IAC1BC,SACZkB,IAAMmC,OAAOR,GACb3B,IAAMoC,QAAQ,iCACd3G,GAAU,SACJqB,EAAYjC,GAClBK,EAASlC,EAAW,aACpBf,OAAO6F,SAASiB,KAAO,MAGvB7D,EAASlC,EAAW,cAEpByC,GAAU,GACVuE,IAAMmC,OAAOR,GACb3B,IAAMC,MAAM,sBACd,GAGA,EAGEnD,EAActD,UAClB,MAAMuD,QAAmBC,EAAMlG,SAASmG,MAAMC,GAAaC,OACrD/C,QAAegD,QAAQC,QAAQN,GAErC7B,EAAShB,EAAaE,EAAOS,GAAGyC,YAAY,EAG9C,OACE7F,cAAA,OAAKF,UAAU,aAAYC,SACzBH,eAAA,OAAKE,UAAW,SAASC,SAAA,CACvBC,cAAA,OAAKF,UAAU,WAAUC,SACvBC,cAAA,OAAKE,IAAKqH,MAGZvH,cAAA,OAAKgJ,MAAO,CAAE+B,cAAe,OAAQC,UAAW,QAAUlL,UAAU,UAASC,SAAC,aAG9EC,cAAA,OAAKF,UAAU,kBAAiBC,SAC9BH,eAAC4H,IAAI,CAACC,SAAWR,GAhLJlF,WACnBkF,EAAES,gBAAgB,EA+KWC,CAAaV,GAAGlH,SAAA,CACrCC,cAACwH,IAAKI,MAAK,CAACC,UAAU,iBAAgB9H,SACpCC,cAACwH,IAAKM,QAAO,CACX3G,KAAK,QACLrB,UAAU,QACViI,YAAY,wCACZ1G,MAAOgI,EACPrB,SAAWf,IACTqC,EAASrC,EAAEgB,OAAO5G,MAAM,EAE1B+G,UAAU,MAIdpI,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,UACEH,QA5LSkC,UACrB,IAAK,IAADE,EAAAC,EAKF,IAAIyD,SAASC,IACX,MAAMW,EAAe,CACnBlC,YAAa7D,OAAOpB,QACpBkF,SAAU9D,OAAOpB,SAAWoB,OAAOpB,QAAQgH,OAG7C,GAAgB,OAAZG,QAAY,IAAZA,KAAclC,UAEhB,OADAD,EAAWmC,GACJX,IAGT,IAAIY,EAAQ,EAEZ,MAAMC,EAAQ7B,aAAY,KACxB,GAAI4B,GAAS,GAAI,CACf,MAAME,EAAe,0BAcrB,OAZAlG,OAAOpB,QAAU,IAAIuH,IACnBD,EACAA,EACAA,GAGFtC,EAAW,CACTC,WAAW,EACXC,UAAU,IAGZa,cAAcsB,GACPb,GACT,CAKA,GAHAW,EAAalC,YAAc7D,OAAOpB,QAClCmH,EAAajC,SAAW9D,OAAOpB,SAAWoB,OAAOpB,QAAQgH,OAEpDG,EAAalC,UAAW,OAAOmC,IAEpCpC,EAAWmC,GAEXX,GAAS,GACR,IAAI,IAGTpF,OAAOpB,QAAQkE,eAAiB,CAC9BwD,IAAmB,QAAhB7E,EAAEzB,OAAOpB,eAAO,IAAA6C,GAAS,QAATC,EAAdD,EAAgBE,eAAO,IAAAD,OAAT,EAAdA,EAAyB6E,MAAM3D,GACpCG,OAAQH,GAGV5C,OAAOpB,QAAQ4H,GAAG,kBAAmBC,IAC/B7H,EAAQkF,UAEZF,EAAW,CACThF,QAAS,CACPiF,WAAW,EACXC,UAAU,IAEZ,UAGEiB,EAAMjG,WAAWkB,OAAOpB,SAAS8H,MAAKnF,UAE1C,GAAIsH,QAQIU,EAAIV,OAEL,CACLrF,GAAU,GACV,IAAIiH,QAAsB1F,EAAMlG,SAAS6L,aAAaxF,OAClDyF,QAAkBxF,QAAQC,QAAQqF,SAChClB,EAAIlB,KAAKC,MAAMqC,EAAUC,YACjC,IAEJ,CAAE,MAAOnE,GACPL,QAAQ4B,MAAMvB,EAChB,GAuGY8B,SAAUhF,EACViF,MAAO,CAAEC,QAASlF,EAAS,GAAM,GACjCjE,UAAU,SAAQC,SAEjBgE,EACC/D,cAAA,KAAAD,SAAG,0BAEHC,cAAA,KAAAD,SAAG,oCAKTC,cAAA,OAAKF,UAAU,kBAAiBC,SAC9BC,cAACqL,OAAI,CAACC,GAAI,IAAKtC,MAAO,CAAEuC,eAAgB,QAASxL,SAC/CC,cAAA,UAAQF,UAAU,cAAaC,SAAC,sBAMtC,EC5OKyL,MA1Bf,WACE,MAAMC,EAAajI,YAAY5B,GAc/B,OAXAf,qBAAU,KACU,aAAd4K,GAC2C,YAA1CjL,OAAO6F,SAASwD,SAASC,MAAM,KAAK,IACL,KAA5BtJ,OAAO6F,SAASwD,WAClBrJ,OAAO6F,SAASiB,KAAO,IAI7B,GACC,CAACmE,IAGF7L,eAAA,OAAAG,SAAA,CACQC,cAAC0L,UAAO,IAEd1L,cAAC2L,IAAK,CAACC,UAAWhJ,EAAOiJ,OAAK,EAACC,KAAK,MACpC9L,cAAC2L,IAAK,CAACC,UAAW1C,EAAU4C,KAAK,gBAIvC,E,OCjCe,ICER,MAAM7K,EAAQC,YAAY,CAC/BC,KAAM,OACNC,aAAc,CACZC,OAAO,GAETC,SAAU,CACRyK,WAAYA,CAACvK,EAAOC,KAClBD,EAAMH,MAASI,EAAOC,OAAQ,MAKvB,WAAEqK,GAAe9K,EAAMU,QAevBqK,EAAgBxK,GAASA,EAAMyK,KAAK5K,MAElCJ,QAAa,QC/Bb,MAA0B,oCC2E1BiL,IC3EXC,EAAOC,EAAIC,ED2EAH,EA/Df,SAAgBI,EAAaC,GAC3B,MAAM,OAAEhM,EAAM,MAAEN,GAAUQ,IAEpBoD,EAAYL,YAAYjB,GACxBiK,EAAShJ,YAAYd,GAE3B,IAAIuB,EAAWJ,GAAarD,OAAO6C,SAASjE,QAAQkE,eAAeC,OAEnE,MAAM0I,EAAOzI,YAAYwI,GACnBvI,EAAWC,cAEjB,OACE1D,cAAA,OAAKF,UAAU,SAAQC,SACrBH,eAAA,OAAKE,UAAU,kBAAiBC,SAAA,CAK7BE,GAAS,KACRD,cAAA,OAAKF,UAAU,OAAMC,SACnBH,eAAA,OAAKC,QAASA,IAAM4D,EAASsI,GAAYE,IAAQnM,UAAU,OAAMC,SAAA,CAC/DC,cAAA,OAAKE,IAAI,oEAAqE,SAIpFF,cAAA,OAAKF,UAAU,OAAMC,SACnBC,cAAA,OAAKF,UAAU,aAAYC,SACzBH,eAAA,QAAME,UAAU,UAASC,SAAA,CAAC,QAAMyM,SAIpCxM,cAAA,OAAKF,UAAU,OAAMC,SACnBH,eAAA,OAAKoJ,MAAO,CAAEyD,WAAY,UAAY3M,UAAU,aAAYC,SAAA,CAC1DC,cAAA,QAAMgJ,MAAO,CAAC0D,YAAY,OAAO3M,SAC/BC,cAAA,OACEgJ,MAAO,CAAE2D,SAAU,SAAU1M,MAAO,GAAIM,OAAQ,IAChDT,UAAU,cAAaC,SAEvBC,cAAA,OACE4M,IAAI,GACJ3M,MAAM,KACNM,OAAO,KACPL,IAAK2M,QAIXjN,eAAA,QAAME,UAAU,UAASC,SAAA,CAAC,WACf,IACTC,cAAA,KACEiI,OAAO,SACPX,KAAI,kCAAAwF,OAAoC7I,GAAWlE,SAElDkE,gBAUjB,E,OCzEA,SAAS8I,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUjF,GAAU,IAAK,IAAIkF,EAAI,EAAGA,EAAIC,UAAU9E,OAAQ6E,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIG,KAAOD,EAAcL,OAAOO,UAAUC,eAAe9H,KAAK2H,EAAQC,KAAQrF,EAAOqF,GAAOD,EAAOC,GAAU,CAAE,OAAOrF,CAAQ,EAAU8E,EAASU,MAAMlO,KAAM6N,UAAY,CAElV,SAASM,EAAQhO,EAAMiO,GACrB,IAAI,MACFjJ,EAAK,QACLkJ,KACGC,GACDnO,EACJ,OAAoB,gBAAoB,MAAOqN,EAAS,CACtD9M,MAAO,IACPM,OAAQ,GACRuN,QAAS,aACTC,KAAM,OACNC,MAAO,6BACPC,IAAKN,EACL,kBAAmBC,GAClBC,GAAQnJ,EAAqB,gBAAoB,QAAS,CAC3DtB,GAAIwK,GACHlJ,GAAS,KAAmB,gBAAoB,OAAQ,CACzDtB,GAAI,iBACJ4F,MAAO,CACLkF,SAAU,aAEZC,UAAW,iBACXC,EAAG,EACHC,EAAG,EACHpO,MAAO,GACPM,OAAQ,IACP4L,IAAUA,EAAqB,gBAAoB,OAAQ,CAC5DmC,EAAG,wCACHP,KAAM,YACF3B,IAAOA,EAAkB,gBAAoB,IAAK,CACtDmC,KAAM,wBACQ,gBAAoB,OAAQ,CAC1CD,EAAG,yDACHP,KAAM,YACS,gBAAoB,OAAQ,CAC3CO,EAAG,uEACHP,KAAM,cACF1B,IAAWA,EAAsB,gBAAoB,OAAQ,CACjEiC,EAAG,o8OACHP,KAAM,aAEV,CACA,MAAMS,EAA0B,aAAiBd,GAClC,QC9CA,MAA0B,mCCA1B,OAA0B,wCCA1B,OAA0B,iCCA1B,OAA0B,sCCA1B,OAA0B,mCCA1B,OAA0B,wCCA1B,OAA0B,iCCA1B,OAA0B,sCCgM1Be,OAxKf,WACE,MAAMpI,EAAWqI,cACXjL,EAAWC,cAIXiL,EAAc7C,GAFH8C,MAAA,IAAAC,EAAA,OAAc,OAARxI,QAAQ,IAARA,GAAkB,QAAVwI,EAARxI,EAAUwD,gBAAQ,IAAAgF,OAAV,EAARA,EAAoBC,aAAa,EAE1BF,IAAkB9C,EAOhD,OACElM,eAAA,OAAKE,UAAU,UAASC,SAAA,CACtBC,cAAA,OAAKF,UAAU,mBAAkBC,SAC/BH,eAAA,OAAKE,UAAU,OAAMC,SAAA,CACnBC,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAACuH,EAAI,CAACzH,UAAU,cAGlBF,eAAA,MAAIE,UAAU,cAAaC,SAAA,CACzBC,cAACqL,OAAI,CACHvL,UAAW6O,EAAW,KAAO,cAAgB,OAC7CrD,GAAG,IACHtC,MAAO,CACL/I,MAAO,mBACPsL,eAAgB,OAChBwD,MAAO,QACPC,QAAS,OACTC,cAAe,MACfC,WAAY,UACZnP,SAEFH,eAAA,MACEoJ,MAAO,CAAE+F,MAAOJ,EAAW,KAAO,QAAU,MAC5C7O,UAAU,eAAcC,SAAA,CAExBC,cAAA,QAAMF,UAAU,OAAMC,SAClB4O,EAAW,KAQX3O,cAAA,OACEE,IAAKiP,EACLlP,MAAM,KACN2M,IAAI,GACJwC,MAAM,yBAXRpP,cAAA,OACEE,IAAKmP,GACLpP,MAAM,KACN2M,IAAI,GACJwC,MAAM,2BAUL,iBAKXpP,cAACqL,OAAI,CACHvL,UAAW6O,EAAW,aAAe,cAAgB,OACrDrD,GAAG,YACHtC,MAAO,CACL/I,MAAO,mBACPsL,eAAgB,OAChBwD,MAAO,QACPC,QAAS,OACTC,cAAe,MACfC,WAAY,UACZnP,SAEFH,eAAA,MACEoJ,MAAO,CAAE+F,MAAOJ,EAAW,aAAe,QAAU,MACpD7O,UAAU,eAAcC,SAAA,CAExBC,cAAA,QAAMF,UAAU,OAAMC,SAClB4O,EAAW,aAGX3O,cAAA,OAAKE,IAAKoP,GAAUrP,MAAM,OAF1BD,cAAA,OAAKE,IAAKqP,GAActP,MAAM,SAI3B,gBAIXD,cAACqL,OAAI,CACHvL,UAAW6O,EAAW,YAAc,cAAgB,OACpDrD,GAAG,WACHtC,MAAO,CACL/I,MAAO,mBACPsL,eAAgB,OAChBwD,MAAO,QACPC,QAAS,OACTC,cAAe,MACfC,WAAY,UACZnP,SAEFH,eAAA,MACEoJ,MAAO,CAAE+F,MAAOJ,EAAW,YAAc,QAAU,MACnD7O,UAAU,eAAcC,SAAA,CAExBC,cAAA,QAAMF,UAAU,OAAMC,SAClB4O,EAAW,YAGX3O,cAAA,OAAKE,IAAKsP,GAAYvP,MAAM,OAF5BD,cAAA,OAAKE,IAAKuP,GAAgBxP,MAAM,SAI7B,eAIXD,cAACqL,OAAI,CACHvL,UAAW6O,EAAW,gBAAkB,cAAgB,OACxDrD,GAAG,eACHtC,MAAO,CACL/I,MAAO,mBACPsL,eAAgB,OAChBwD,MAAO,QACPC,QAAS,OACTC,cAAe,MACfC,WAAY,UACZnP,SAEFH,eAAA,MACEoJ,MAAO,CAAE+F,MAAOJ,EAAW,gBAAkB,QAAU,MACvD7O,UAAU,eAAcC,SAAA,CAExBC,cAAA,QAAMF,UAAU,OAAMC,SAClB4O,EAAW,gBAGX3O,cAAA,OAAKgJ,MAAO,CAACyD,WAAW,OAAQxM,MAAM,KAAKC,IAAKwP,KAFhD1P,cAAA,OAAKgJ,MAAO,CAACyD,WAAW,OAAQxM,MAAM,KAAKC,IAAKyP,OAI7C,4BAgBjB3P,cAACqL,OAAI,CACHxL,QA9IS+P,KACbpP,OAAO6C,SAASjE,SAAU,EAC1BqE,EAASlC,EAAW,aAAa,EA6I7BzB,UAAW,OACXwL,GAAG,IACHtC,MAAO,CACL/I,MAAO,mBACPsL,eAAgB,OAChBwD,MAAO,QACPC,QAAS,OACTC,cAAe,MACfC,WAAY,SACZW,eAAgB,UAChB9P,SAEFC,cAAA,MAAIF,UAAU,0BAAyBC,SAAC,eAIhD,E,mBC3LA,MAAM+P,GAAc,CAClBC,QAAS,CACPC,OAAQ,CACNhB,SAAS,GAEXiB,UAAW,CACTjB,SAAS,IAGbkB,OAAQ,CACN9B,EAAG,CACD+B,KAAM,CACJnB,SAAS,IAGbX,EAAG,CACD8B,KAAM,CACJnB,SAAS,GAEXoB,MAAO,CACLC,UAAU,KAMhBL,OAAQ,CACNhB,SAAS,GAEXsB,SAAU,CACRC,KAAM,QACNC,WAAW,GAEbC,MAAO,CACLF,KAAM,QACNC,WAAW,IAITE,GAAS,CACbC,WAAY,aACZC,UAAW,SACX5B,QAAQ,OACRa,eAAe,SACfgB,UAAU,UA+CGC,OA5CDpR,IAAe,IAAd,KAAEqR,GAAMrR,EACjBsR,EAAY,CACdC,OAAY,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAME,OACdC,SAAU,CACR,CACEnD,MAAM,EACNoD,YAAa,GAEbC,YAAa,UACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,UAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,UAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBlB,KAAU,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KACZhD,KAAM,QACNmE,gBAAiB,eAKvB,MAAOC,EAASC,GAAcxR,mBAASoQ,GAQvC,OANAnQ,qBAAU,KACRmQ,EAAUC,OAASF,EAAKE,OACxBD,EAAUE,SAAS,GAAGH,KAAOA,EAAKA,KAClCqB,EAAWpB,EAAU,GACpB,CAACD,IAGF/Q,cAAA,OAAKgJ,MAAO0H,GAAO3Q,SACjBC,cAACqS,KAAI,CAACpS,MAAO,IAAKM,OAAQ,IAAKwQ,KAAMoB,EAASG,QAASxC,MACnD,E,sIC3FK,OAA0B,oCCA1B,OAA0B,oCCA1B,OAA0B,oCCA1B,OAA0B,oCCmrB1ByC,OAvpBf,WACE,MAAM,OAAEhS,EAAM,MAAEN,GAAUQ,IACpBoD,EAAYL,YAAYjB,GAC9B,IAAIa,EAAKS,GAAarD,OAAO6C,SAASjE,QAAQkE,eAAeC,OAE7D,MAAOiP,EAAgBC,GAAqB7R,mBAAS,IAC9C8R,EAAkBC,GAAuB/R,mBAAS,IAElDgS,EAAYC,GAAiBjS,mBAAS,IACtCkS,EAAWC,GAAgBnS,mBAAS,IACpCoQ,EAAWgC,GAAgBpS,mBAAS,CAAEqQ,OAAQ,GAAIF,KAAM,MACxDkC,EAAcC,GAAmBtS,mBAAS,IAC1CuS,EAAaC,GAAkBxS,mBAAS,KAExCsD,EAAoBC,GAAyBvD,mBAlBjC,uCAmBZyS,EAAeC,GAAoB1S,oBAAS,GAC7C2S,EAAc,CAAC,IAAK,IAAM,MAMzBnU,EAASgF,GAAcxD,mBAAS,CAAEyD,WAAW,EAAOC,UAAU,IAErEzD,qBAAU,KACRiF,IACA0N,GAAkB,GACjB,IAEH,MAAMA,EAAmBzR,UACvB,IACE0R,MAAM,oGAGHvM,MAAM0D,GAAQA,EAAI8I,SAClBxM,MAAM6J,IAAU,IAAD4C,EACdZ,EAAiB,OAAJhC,QAAI,IAAJA,GAAU,QAAN4C,EAAJ5C,EAAM6C,YAAI,IAAAD,OAAN,EAAJA,EAAYE,IAAI,GAEnC,CAAE,MAAOrL,GACP,GA8CEsL,EAAY/R,UAChB,IACE4D,QAAQoO,IAAI,CAACxO,EAAMlG,SAASmG,MAAMpC,GAAIsC,OAAQsO,EAAW5Q,KAAM8D,MAC7DnF,UAAmB,IAADkS,EAAAC,EAAAC,EAChB,IAAIC,EAAWC,EAAO,GAClBC,EAAUF,EAASE,QAAQzO,WAAa,IACxC0O,GACM,OAARH,QAAQ,IAARA,GAA6B,QAArBH,EAARG,EAAUG,2BAAmB,IAAAN,OAArB,EAARA,EAA+BpO,aAAc,EAC3C2O,GACM,OAARJ,QAAQ,IAARA,GAA+B,QAAvBF,EAARE,EAAUI,6BAAqB,IAAAN,OAAvB,EAARA,EAAiCrO,aAAc,EAE7C4O,GACM,OAARL,QAAQ,IAARA,GAAgC,QAAxBD,EAARC,EAAUK,8BAAsB,IAAAN,OAAxB,EAARA,EAAkCtO,aAAc,EAGlDgN,EAAcyB,GACd7B,EAAkB8B,GAClB5B,EAAoB6B,GACpBlB,GAAiB,SAEXoB,EAAatR,EAAIqR,EAAuB,GAGpD,CAAE,MAAOxN,GAEPqM,GAAiB,EACnB,GAGIoB,EAAeA,CAACtR,EAAIuR,KAExBhP,QAAQoO,IAAI,CAACxO,EAAMlG,SAASuV,iBAAiBxR,GAAIsC,OAAQmP,EAAsBF,KAAiBzN,MAAKnF,UAA8C,IAAvCyQ,EAAgBE,GAAiBhT,EACvIoV,EAAQ,IAAItC,KAAmBE,GAC/BqC,EAAW,GACf,UAAW,IAAIC,KAAQF,EAAO,CAC5B,IAAI1G,QAAUtM,EAAckT,GAC5BD,EAASE,KAAK7G,EAChB,MA/E4BrM,WAC9B,IAAIkP,EAAS,GACTiE,EAAY,GACZC,EAAO,CAAC,EAEZ,UAAW,MAAMhT,KAAW4O,EAAM,CAChC,MAAMqE,QAAmB7P,EAAMlG,SAASmG,MAAMrD,GAASuD,OAGvD,IAAI2P,QAAe1P,QAAQC,QAAQwP,EAAWC,OAAOxP,YAErDwP,EAASC,KAAOC,KAAKF,GAAQG,OAAO,mBACXC,GAArBN,EAAK,GAADrI,OAAIuI,IACVF,EAAK,GAADrI,OAAIuI,IAAYF,EAAK,GAADrI,OAAIuI,IAAY,EAExCF,EAAK,GAADrI,OAAIuI,IAAY,CAExB,CAEA,IAAIK,EAAe1I,OAAO2I,YACxB3I,OAAO4I,QAAQT,GAAMU,MAAK,SAAUC,EAAGC,GACrC,IAAIC,EAAKF,EAAE,GAAGhM,MAAM,KAAKmM,UAAUC,OACjCC,EAAKJ,EAAE,GAAGjM,MAAM,KAAKmM,UAAUC,OACjC,OAAOF,EAAKG,GAAM,EAAIH,EAAKG,EAAK,EAAI,CACtC,KAGF,UAAW,MAAO7I,EAAKjM,KAAU2L,OAAO4I,QAAQF,GAC9CzE,EAAOgE,KAAK3H,GACZ4H,EAAUD,KAAK5T,GAGjB,IAAI+U,EAAU,CACZnF,OAAQA,EACRF,KAAMmE,GAKR,OAFAtO,QAAQC,IAAIoK,EAAQiE,GAEbkB,CAAO,EAyCNC,CAAwBtB,GAAU7N,MAAKnF,UAC3CiR,EAAapI,EAAI,GACjB,GACF,EAKEiK,EAAwB9S,UAC5B,IAAIuU,EAAuB,GAE3B,IAAIC,EAA2BC,MAAMC,KAAKD,MAAM7B,IAAgB,CAAC+B,EAAGC,IAAUA,IAE9E,UAAW,IAAIA,KAASJ,EAA0B,CAChD,IAAIK,QAAuBrR,EAAMlG,SAC9BwX,yBAAyBzT,EAAIuT,GAC7BjR,OAEH4Q,EAAqBrB,KAAK2B,EAC5B,CAEA,OAAON,CAAoB,EAMvBtC,EAAajS,UAGjB,MAAM+U,EAAUA,CAAC1I,EAAG2I,EAAaC,KAC/B,IAAIjG,EAAO,CAAEkG,QAAQ,EAAOC,QAAS,EAAGH,YAAaA,EAAaC,UAAWA,GAE7E,OAAS,GAAL5I,IAIJ2C,EAAKmG,QAAUC,KAAKC,OACjB,IAAIC,KAAS,IAAJjJ,GAAUkJ,UAClB,IAAID,KAAKA,KAAKE,OAAOD,WAAS,MAEhC,GAGE,IAAID,KAAS,IAAJjJ,GAAUkJ,WAAa,IAAID,KAAKA,KAAKE,OAAOD,UACvDvG,EAAKkG,QAAS,EAEdlG,EAAKkG,QAAS,GAbPlG,CAeE,EAGbpL,QAAQoO,IAAI,CAACxO,EAAMlG,SAASmY,oBAAoBpU,GAAIsC,OAAQH,EAAMlG,SAASoY,kBAAkBrU,GAAIsC,SAASwB,MAAKwQ,IAAiC,IAA/BzE,EAAc0E,GAAWD,EACxIxE,EAAgBD,EAAapN,YAAc,GAC3C,IAAK+R,EAAQC,EAAQC,EAAQC,EAAcC,EAAcC,GAAcN,EACvEO,EAAc,CAACpB,EAAQc,EAAO/R,YAAY,GAAM,GAAOiR,EAAQe,EAAOhS,WAAYkS,EAAcA,GAAejB,EAAQgB,EAAOjS,WAAYmS,EAAcC,IAAa,GACrK,EAiCEnS,EAAiB/D,UACrB,IAAK,IAADE,EAAAC,EAEF,IAAIyD,SAASC,IACX,MAAMW,EAAe,CACnBlC,YAAa7D,OAAOpB,QACpBkF,SAAU9D,OAAOpB,SAAWoB,OAAOpB,QAAQgH,OAG7C,GAAIG,EAAalC,UAGf,OAFAD,EAAWmC,GAEJX,IAGT,IAAIY,EAAQ,EAEZ,MAAMC,EAAQ7B,aAAY,KACxB,GAAI4B,GAAS,GAAI,CACf,MAAME,EAAe,0BAcrB,OAZAlG,OAAOpB,QAAU,IAAIuH,IACnBD,EACAA,EACAA,GAGFtC,EAAW,CACTC,WAAW,EACXC,UAAU,IAGZa,cAAcsB,GACPb,GACT,CAKA,GAHAW,EAAalC,YAAc7D,OAAOpB,QAClCmH,EAAajC,SAAW9D,OAAOpB,SAAWoB,OAAOpB,QAAQgH,OAEpDG,EAAalC,UAAW,OAAOmC,IAEpCpC,EAAWmC,GAEXX,GAAS,GACR,IAAI,IAGTpF,OAAOpB,QAAQ4H,GAAG,kBAAmBC,IAC/B7H,EAAQkF,UAEZF,EAAW,CACThF,QAAS,CACPiF,WAAW,EACXC,UAAU,IAEZ,IAGJ9D,OAAOpB,QAAQkE,eAAiB,CAC9BwD,IAAmB,QAAhB7E,EAAEzB,OAAOpB,eAAO,IAAA6C,GAAS,QAATC,EAAdD,EAAgBE,eAAO,IAAAD,OAAT,EAAdA,EAAyB6E,MAAM3D,GACpCG,OAAQH,GAGV5C,OAAOpB,QAAQ4H,GAAG,kBAAmBC,IAC/B7H,EAAQkF,UAEZF,EAAW,CACThF,QAAS,CACPiF,WAAW,EACXC,UAAU,IAEZ,UAGEiB,EAAMjG,WAAWkB,OAAOpB,SAAS8H,MAAKnF,UAC1C,UACQ+R,GACR,CAAE,MAAOtL,GACP,IAGN,CAAE,MAAOvB,GACPnB,GAEF,IAGKqS,EAAYD,GAAiBtX,mBAAS,CAAC,CAAEsW,QAAS,EAAGD,QAAQ,EAAOF,aAAa,EAAOC,WAAW,KAqDpGjN,EAAMhI,UACV,GAAI8B,EAAa,OAEjB,IAAIxC,EAAQkS,EAAY6E,EAAQ,GAEhC,IAvDqBA,KAAW,IAADC,EAAAC,EAAAC,EAC3BC,EAAgC,QAAxBH,EAAGF,EAAWC,EAAQ,UAAE,IAAAC,OAAA,EAArBA,EAAuBpB,OAClCwB,EAAoC,QAAxBH,EAAGH,EAAWC,EAAQ,UAAE,IAAAE,OAAA,EAArBA,EAAuBtB,UACtCD,EAAmC,QAAxBwB,EAAGJ,EAAWC,EAAQ,UAAE,IAAAG,OAAA,EAArBA,EAAuBxB,YAMzC,GAAa,GAATqB,GACF,GAAII,GACF,IAAKC,EAKH,OAJAlQ,IAAMC,MAAM,iJAEV,CAAEkQ,SAAU,mBAEP,OAGT,IAAK3B,EAKH,OAJAxO,IAAMC,MAAM,kJAEV,CAAEkQ,SAAU,mBAEP,OAGN,GAAa,GAATN,EACT,GAAII,GACF,IAAKC,EAKH,OAJAlQ,IAAMC,MAAM,uGAEV,CAAEkQ,SAAU,mBAEP,OAGT,IAAK3B,EAKH,OAJAxO,IAAMC,MAAM,mJAEV,CAAEkQ,SAAU,mBAEP,EAKb,OAAO,CAAI,EAQNC,CAAcP,GAAQ,OAE3B,MAAMQ,EAAWrQ,IAAM4B,QACrB,6EACA,CAAEuO,SAAU,gBAAiB1P,MAAO,CAAEgC,UAAW,UAEnD,aAAazF,EAAMlG,SAChBwZ,SAAST,GACT9N,KAAK,CACJC,SAAU,IACVC,UAAW,IAAUnJ,EACrBoJ,oBAAoB,IAErBvD,MAAKnF,gBAEE+R,IACNvL,IAAMoC,QAAQ,8CAADmC,OACmCsL,EAAK,wBACnD,CAAEM,SAAU,gBAAiB1P,MAAO,CAAEgC,UAAW,UAEnDzC,IAAMmC,OAAOkO,EAAS,IAEvB/N,OAAM9I,UACY,uCAAb+I,EAAItC,QACND,IAAMmC,OAAOkO,GAEbrQ,IAAMC,MAAM,8BAADsE,OAA+BsL,EAAK,oBAAoB,CACjEM,SAAU,gBACV1P,MAAO,CAAEgC,UAAW,iBAMlB8I,IAENvL,IAAMmC,OAAOkO,GAEI,uCAAb9N,EAAItC,OACND,IAAMoC,QAAQ,8CAADmC,OACmCsL,EAAK,wBACnD,CAAEM,SAAU,gBAAiB1P,MAAO,CAAEgC,UAAW,SAErD,GACA,EA6EN,OACEpL,eAAA,OAAKE,UAAU,QAAOC,SAAA,CACpBH,eAAA,OAAKE,UAAU,MAAKC,SAAA,CAClBC,cAAC0L,UAAO,IAER1L,cAAA,MAAIF,UAAU,SAAQC,SAAC,WACvBC,cAAA,OAAKF,UAAU,UAASC,SACtBH,eAAA,OAAKE,UAAU,WAAUC,SAAA,CACvBH,eAAA,OAAKwP,MAAM,0BAAyBrP,SAAA,CAClCH,eAAA,OAAKwP,MAAM,wBAAuBrP,SAAA,CAChCC,cAAA,OACEE,IAAK4Y,GACL7Y,MAAM,KACN2M,IAAI,GACJwC,MAAM,0CAERpP,cAAA,OAAKoP,MAAM,qCAAoCrP,SAC7CH,eAAA,UAAQwP,MAAM,cAAarP,SAAA,CACzBC,cAAC+Y,KAAO,CACNC,SAAU,EACVlZ,UAAU,cACVmZ,IAAKrG,IACJ,IAAI,cAKb5S,cAAA,OAAKoP,MAAM,yBAAwBrP,SAAC,kBAGtCH,eAAA,OAAKwP,MAAM,0BAAyBrP,SAAA,CAClCH,eAAA,OAAKwP,MAAM,wBAAuBrP,SAAA,CAChCC,cAAA,OACEE,IAAKgZ,GACLjZ,MAAM,KACN2M,IAAI,GACJwC,MAAM,0CAERpP,cAAA,OAAKoP,MAAM,qCAAoCrP,SAC7CH,eAAA,UAAQwP,MAAM,qBAAoBrP,SAAA,CAC/B,KACDC,cAAC+Y,KAAO,CACNI,SAAU,EACVH,SAAU,EACVlZ,UAAU,cACVmZ,IAAKnG,EAAYF,YAKzB5S,cAAA,OAAKoP,MAAM,yBAAwBrP,SAAC,qBAGtCH,eAAA,OAAKwP,MAAM,0BAAyBrP,SAAA,CAClCH,eAAA,OAAKwP,MAAM,wBAAuBrP,SAAA,CAChCC,cAAA,OACEE,IAAKkZ,GACLnZ,MAAM,KACN2M,IAAI,GACJwC,MAAM,0CAERpP,cAAA,OAAKoP,MAAM,qCAAoCrP,SAC7CH,eAAA,UAAQwP,MAAM,cAAarP,SAAA,CACxB,IACDH,eAAA,UAAQwP,MAAM,cAAarP,SAAA,CACzBC,cAAC+Y,KAAO,CACNC,SAAU,EACVlZ,UAAU,cACVmZ,IAAKzG,IAEN,MACDxS,cAAC+Y,KAAO,CACNC,SAAU,EACVlZ,UAAU,cACVmZ,IAAKvG,eAMf1S,cAAA,OAAKoP,MAAM,yBAAwBrP,SAAC,kCAKtCH,eAAA,OAAKwP,MAAM,0BAAyBrP,SAAA,CAClCH,eAAA,OAAKwP,MAAM,wBAAuBrP,SAAA,CAChCC,cAAA,OACEE,IAAKmZ,GACLpZ,MAAM,KACN2M,IAAI,GACJwC,MAAM,0CAERpP,cAAA,OAAKoP,MAAM,qCAAoCrP,SAC7CC,cAAA,UAAQoP,MAAM,cAAarP,SACzBC,cAAC+Y,KAAO,CACNC,SAAU,EACVlZ,UAAU,cACVmZ,IAAKhG,WAKbjT,cAAA,OAAKoP,MAAM,yBAAwBrP,SAAC,0BAKxCsT,EAgDArT,cAAA,OACEgJ,MAAO,CACL/I,MAAO,OACPM,OAAQ,OACRyO,QAAS,OACTa,eAAgB,SAChBX,WAAY,UACZnP,SAEFC,cAACsZ,KAAO,CACNC,QAAQ,UACRC,KAAK,QACLC,UAAU,SACVC,KAAK,SAAQ3Z,SAEbC,cAAA,QAAMgJ,MAAO,CAAE+F,MAAO,SAAWjP,UAAU,kBAAiBC,SAAC,mBA9DjEH,eAAA,OAAKE,UAAU,iBAAgBC,SAAA,CAC7BH,eAAA,OAAKE,UAAU,WAAUC,SAAA,CACvBC,cAAA,MAAAD,SAAI,aACJC,cAAC8Q,GAAK,CAACC,KAAMC,OAIdmH,EAAWwB,KAAI,CAAC5I,EAAM4F,IACrB/W,eAAA,OAAiBE,UAAU,kBAAiBC,SAAA,CAC1CH,eAAA,MAAAG,SAAA,CAAI,SAAO4W,EAAQ,KACD,IAAb,OAAJ5F,QAAI,IAAJA,OAAI,EAAJA,EAAMmG,SAAelX,cAAA,KAAGgJ,MAAO,CAAE+F,MAAO,WAAYhP,SAAE,aACjD,OAAJgR,QAAI,IAAJA,KAAMkG,OACJjX,cAAA,KAAAD,SAAG,WAAaC,cAAA,KAAGgJ,MAAO,CAAE+F,MAAO,WAAYhP,SAAE,YAErDH,eAAA,OAAKE,UAAU,cAAaC,SAAA,CAC1BH,eAAA,MAAAG,SAAA,CACGwT,EAAYoD,GAAO,SAIH,IAAb,OAAJ5F,QAAI,IAAJA,OAAI,EAAJA,EAAMmG,YACA,OAAJnG,QAAI,IAAJA,OAAI,EAAJA,EAAMmG,UAAW,EACftX,eAAA,KAAAG,SAAA,CAAG,cAAgB,OAAJgR,QAAI,IAAJA,OAAI,EAAJA,EAAMmG,QAAQ,gBAE7BtX,eAAA,KAAAG,SAAA,CAAG,aAAe,OAAJgR,QAAI,IAAJA,OAAI,EAAJA,EAAMmG,QAAQ,mBAGpClX,cAAA,OACEgJ,MAAO,CAAEC,QAASpF,GAAa,GAAK+V,OAAQ/V,GAAa,eACzDhE,QAASA,IAAMkK,EAAI4M,EAAQ,GAC3B7W,UAAS,UAAAgN,QAAgB,OAAJiE,QAAI,IAAJA,OAAI,EAAJA,EAAMmG,UAAW,EAAI,YAAc,mBACnDnX,SAGa,IAAb,OAAJgR,QAAI,IAAJA,OAAI,EAAJA,EAAMmG,SAAY,gBAEX,OAAJnG,QAAI,IAAJA,OAAI,EAAJA,EAAMmG,SAAU,EAAC,kCA5BfP,WA8DlB3W,cAAA,WAKN,E,kBClrBe,OAA0B,oCCmC1B6Z,OA/Bf,WACI,OACIja,eAAA,OAAKE,UAAU,MAAKC,SAAA,CAChBH,eAAA,OAAKE,UAAU,WAAUC,SAAA,CACrBH,eAAA,OAAKE,UAAU,MAAKC,SAAA,CAChBC,cAAA,SAAK,eAGTJ,eAAA,OAAKE,UAAU,MAAKC,SAAA,CAChBC,cAAA,SACAA,cAAA,QAAMF,UAAU,QAAOC,SAAC,0BACxBC,cAAE8Z,KAAU,UAGpB9Z,cAAA,OAAAD,SACIC,cAAA,KAAGF,UAAU,WAAUC,SAAC,uBAE5BH,eAAA,OAAKE,UAAU,SAAQC,SAAA,CACnBC,cAAA,OAAKF,UAAU,UAASC,SACpBC,cAAA,UAAAD,SAAQC,cAAA,KAAGF,UAAU,YAAWC,SAAC,+KAGrCC,cAAA,OAAKF,UAAU,aAAYC,SACvBH,eAAA,UAAAG,SAAA,CAAQC,cAAA,OAAKE,IAAK6Z,GAASja,UAAU,WAAW8M,IAAI,YACpDhN,eAAA,KAAGE,UAAU,YAAWC,SAAA,CAAC,iEAA8DC,cAAA,KAAGiI,OAAO,SAAQ+R,IAAI,aAAa1S,KAAK,gCAA+BvH,SAAC,kBAAiB,iBAMpM,E,OCYeka,I,GAAAA,GA5CDva,IAAyB,IAAxB,KAAEqR,EAAI,UAAEmJ,GAAUxa,EAC/BkH,QAAQC,IAAIkK,EAAK,MACjB,MAAOoJ,EAAWC,GAAgBxZ,mBAASmQ,IACpC+B,EAAWC,GAAgBnS,mBAASsZ,GAQ3C,OANArZ,qBAAU,KACRuZ,EAAarJ,GACbgC,EAAamH,GACbtT,QAAQC,IAAIiM,EAAU,GACrB,CAAC/B,EAAK+B,IAGP9S,cAAA,OAAKF,UAAU,eAAcC,SAC3BH,eAAA,OAAKE,UAAU,MAAKC,SAAA,CAClBC,cAAA,KAAGF,UAAU,YAAWC,SAAC,aACzBC,cAAA,OAAKF,UAAU,SAAQC,SACrBH,eAAA,OAAKE,UAAU,MAAKC,SAAA,CAClBC,cAAA,SAAOF,UAAU,YAAYiI,YAAY,WACzC/H,cAAA,UAAQF,UAAU,UAASC,SAAC,gBAGhCC,cAAA,OAAKF,UAAU,SAAQC,SACrBH,eAAA,SAAAG,SAAA,CACEH,eAAA,MAAAG,SAAA,CACEC,cAAA,MAAIgJ,MAAO,CAACqR,SAAS,QAAQta,SAAE,QAC/BC,cAAA,MAAIgJ,MAAO,CAACqR,SAAS,SAASta,SAAC,qBAC/BC,cAAA,MAAIgJ,MAAO,CAACqR,SAAS,SAASta,SAAC,sBAC/BC,cAAA,MAAIgJ,MAAO,CAACqR,SAAS,QAAQta,SAAC,WAE/Boa,EAAUR,KAAI,CAAC3E,EAAM2B,IACpB/W,eAAA,MAAAG,SAAA,CACEC,cAAA,MAAIF,UAAU,QAAOC,SAAE4W,EAAQ,IAC/B3W,cAAA,MAAIF,UAAU,QAAOC,SAAM,OAAJiV,QAAI,IAAJA,OAAI,EAAJA,EAAM5R,KAC7BpD,cAAA,MAAIF,UAAU,QAAOC,SAAM,OAAJiV,QAAI,IAAJA,OAAI,EAAJA,EAAMsF,QAC7Bta,cAAA,MAAIF,UAAU,QAAOC,UAAM,OAAJiV,QAAI,IAAJA,OAAI,EAAJA,EAAMsF,OAAMxH,EAAUyH,QAAQ,OAJ9C5D,cAUb,E,2BCtCV,MA4CM6D,GAAWC,KAAOC,OAAMC,QAAAC,aAAA,uNAoB9B,SAASC,GAAQnD,GAAmB,IAAlB,KAAE1C,EAAI,MAAE8F,GAAOpD,EAC/B,MAAM,WAAEqD,EAAU,WAAEC,GAAeF,EACnC,OACElb,eAAA,MAAAG,SAAA,CACEH,eAAC4a,GAAQ,CAEP3a,QAASA,IAAMkb,EAAW/F,GAC1BiG,cAAeA,IAAMD,EAAWhG,GAAMjV,SAAA,CAErCiV,EAAKjV,UAAYC,cAAA,QAAAD,SAAOiV,EAAKkG,OAAS,IAAM,MAC5ClG,EAAK7T,OALH6T,EAAK7T,MAOT6T,EAAKjV,UAAYiV,EAAKkG,QACrBlb,cAACmb,GAAQ,CAACnG,KAAMA,EAAMoG,KAAMpG,EAAKjV,SAAU+a,MAAOA,MAI1D,CAEA,SAASK,GAAQE,GAAyB,IAAxB,KAAErG,EAAI,KAAEoG,EAAI,MAAEN,GAAOO,EAErC,OADAzU,QAAQC,IAAIuU,GAEVpb,cAAA,MAAAD,SACGqb,EAAKzB,KAAI,CAAC2B,EAAMnO,IACfnN,cAAC6a,GAAQ,CAAS7F,KAAMsG,EAAOR,MAAOA,GAAvB3N,MAKvB,CA2CeoO,OAzCf,SAAaC,GAAU,IAAT,KAACzK,GAAKyK,EAClB,MAAOJ,EAAMK,GAAW7a,mBAASmQ,GAEjClQ,qBAAU,KACR4a,EAAQ1K,EAAK,GACb,CAACA,IAEHnK,QAAQC,IAAIkK,GAEZ,MAoBM+J,EAAQ,CACZC,WArBkB/F,IAClB,MAAM0G,EAAU,IAAIN,GACpBpG,EAAKkG,QAAUlG,EAAKkG,OACpBO,EAAQC,EAAQ,EAmBhBC,SAZgBC,IAChB,MAAMF,EAAU,IAAIN,GACfQ,EAGHA,EAAO7b,SAASkV,KAAK,CAAE9T,KAAM,aAF7Bua,EAAQzG,KAAK,CAAE9T,KAAM,aAIvBsa,EAAQC,EAAQ,EAMhBV,WAlBkBhG,IAClB,MAAM0G,EAAU,IAAIN,GACpBpG,EAAKjV,SAAW,GAChB0b,EAAQC,EAAQ,GAiBlB,OACE1b,cAAA,OAAKF,UAAU,OAAMC,SACnBC,cAACmb,GAAQ,CAACC,KAAMA,EAAMN,MAAOA,KAGnC,ECxIO,MAAM7Z,GAAQC,YAAY,CAC/BC,KAAM,oBACNC,aAAc,CACZC,MAAO,CAAC,GAEVC,SAAU,CACRua,wBAAyBA,CAACra,EAAOC,KAC/BD,EAAMH,MAASI,EAAOC,OAAQ,MAKvB,wBAAEma,IAA4B5a,GAAMU,QASlCV,UAAa,Q,qBC6Zb6a,OA7Zf,WACE,MAAM,OAAEvb,EAAM,MAAEN,GAAUQ,IAE1B,IAAIwD,EADcT,YAAYjB,IACF/B,OAAO6C,SAASjE,QAAQkE,eAAeC,OAEnE,MAAOuP,EAAWC,GAAgBnS,mBAAS,IACpCmb,EAAUC,GAAepb,mBAAS,KAElCqb,EAAeC,GAAoBtb,oBAAS,IAC5Cub,EAAcC,GAAmBxb,oBAAS,IAC1Cyb,EAAcC,GAAmB1b,oBAAS,IAE1C2b,EAAmBC,GAAwB5b,mBAAS,CAAC,IAErDxB,EAASgF,GAAcxD,mBAAS,CAAEyD,WAAW,EAAOC,UAAU,KAC9DmY,EAAUC,GAAe9b,mBAAS,KAClC+b,EAAWC,GAAgBhc,mBAAS,IACrC4L,EAAShJ,YAAYd,GAI3B7B,qBAAU,KACRiF,IACA0N,GAAkB,GACjB,IAEH,MAAMA,EAAmBzR,UACvB0R,MAAM,oGAGHvM,MAAM0D,GAAQA,EAAI8I,SAClBxM,MAAM6J,IACLgC,EAAahC,EAAK6C,KAAKC,IAAI,GAC3B,EAgCAgJ,EAAmB9a,MAAOgP,EAAM3N,EAAI0Z,KACxC,MAAMC,QAAkBxX,EAAMlG,SAASmG,MAAMpC,GAAIsC,OAC3CsX,QAAcrX,QAAQC,QAAQmX,EAAU3Z,GAAGyC,YAKjD,GAHAiX,EAAO,CACL3b,KAAM6b,GAEJ5Z,KAAM2N,EAAM,CACd,MAAM0C,EAAQ1C,EAAK3N,GAAIuW,KAAI5X,SAClB8a,EAAiB9L,EAAM5D,EAAG2P,KAE7BG,QAAiBtX,QAAQoO,IAAIN,GACnCqJ,EAAe,SAAIG,CACrB,MACEH,EAAW,KAAIE,EAGjB,OAAOF,CAAI,EAoDPhX,EAAiB/D,UACrB,IA6C0B,IAADE,EAAAC,EAAvB,GA5CA,IAAIyD,SAASC,IACX,MAAMW,EAAe,CACnBlC,YAAa7D,OAAOpB,QACpBkF,SAAU9D,OAAOpB,SAAWoB,OAAOpB,QAAQgH,OAG7C,GAAIG,EAAalC,UAGf,OAFAD,EAAWmC,GAEJX,IAGT,IAAIY,EAAQ,EAEZ,MAAMC,EAAQ7B,aAAY,KACxB,GAAI4B,GAAS,GAAI,CACf,MAAME,EAAe,0BAcrB,OAZAlG,OAAOpB,QAAU,IAAIuH,IACnBD,EACAA,EACAA,GAGFtC,EAAW,CACTC,WAAW,EACXC,UAAU,IAGZa,cAAcsB,GACPb,GACT,CAKA,GAHAW,EAAalC,YAAc7D,OAAOpB,QAClCmH,EAAajC,SAAW9D,OAAOpB,SAAWoB,OAAOpB,QAAQgH,OAEpDG,EAAalC,UAAW,OAAOmC,IAEpCpC,EAAWmC,GAEXX,GAAS,GACR,IAAI,KAGJxG,EAAQkF,SAIX9D,OAAOpB,QAAQkE,eAAiB,CAC9BwD,IAAmB,QAAhB7E,EAAEzB,OAAOpB,eAAO,IAAA6C,GAAS,QAATC,EAAdD,EAAgBE,eAAO,IAAAD,OAAT,EAAdA,EAAyB6E,MAAM9C,GACpCV,OAAQU,GAGVzD,OAAOpB,QAAQ4H,GAAG,kBAAmBC,IAC/B7H,EAAQkF,UAEZF,EAAW,CACThF,QAAS,CACPiF,WAAW,EACXC,UAAU,IAEZ,SAjKQvC,WAChB,IAAImb,EAAW,CAAC,QACV3X,EAAMlG,SACTuV,iBAAiBxR,GACjBsC,OACAwB,MAAKnF,UAGJ,GAAI+S,EAAMxM,OAAS,EAAG,CACpB,IAAIwU,EAAO,GACX,UAAW,MAAM9H,KAAQF,EAAO,CAC9B,IAAI7N,QAAUnF,EAAckT,GAC5B8H,EAAK7H,KAAKhO,EACZ,CAMAiW,EAAS,GAADpQ,OAAI1J,IAAQ0Z,CACtB,OAEMD,EAAiBK,EAAUjZ,EAAU,CAAC,GAAGiD,MAAKnF,UAClD2a,EAAY,CAAC9R,IACbsR,GAAiB,EAAM,GACvB,GACF,EA2IIiB,CAAUlZ,GAAUiD,MAAKnF,eAxFbA,WACpB,IAAIqb,EAAM,SACJ7X,EAAMlG,SACTge,eAAeja,GACfsC,OACAwB,MAAKnF,UACJqa,GAAgB,GAEhB,IAAK,IAAIzF,EAAQ,EAAGA,EAAQrO,EAAOzC,WAAY8Q,IAAS,CACtD,IAAI2G,QAAgB/X,EAAMlG,SAASke,SAASna,EAAIuT,GAAOjR,OACnD8X,EAAM,CAAC,EACXA,EAAIrb,cAAgBL,EAAcwb,EAAQG,cAC1CD,EAAIpa,GAAKka,EAAQI,QAAQ7X,WACzB2X,EAAIlD,MAAQgD,EAAQK,OAAO9X,WAAa,IACxCuX,EAAInI,KAAKuI,GACTZ,GAAc3V,GAAM,IAAIA,EAAGuW,IAC7B,IACA,EAwEMI,CAAc3Z,EAAS,GAEjC,CAAE,MAAOgD,GACPnB,IACAc,QAAQC,IAAII,EACd,GAuEI4W,EAAkB9b,UACtB,IAAIkR,EAAe,EACnB,UAAW,MAAMmF,KAAS5B,MAAMC,KAAK,CAAEnO,OAAQ,KAAM,CAACoO,EAAGvJ,IAAMA,EAAI,IAAI,CACrE,MAAM2Q,QAAmBvY,EAAMlG,SAC5B0e,qBAAqB5b,EAASiW,GAC9B1S,OACGsY,QAAyBrY,QAAQC,QAAQkY,GAE7CE,EAAiBnY,WAAawR,KAAKE,OACJ,GAA/ByG,EAAiBnY,cAEfoN,CAEN,CACA,OAAOA,CAAY,EAkBrB,OACErT,eAAA,OAAKE,UAAU,QAAOC,SAAA,CACpBC,cAAC0L,UAAO,IACR1L,cAAA,OAAKF,UAAU,gBAAeC,SAC5BC,cAAA,KAAGF,UAAU,SAAQC,SAAC,eAGxBH,eAAA,OAAKE,UAAU,UAASC,SAAA,CACtBC,cAAA,OAAKF,UAAU,aAAYC,SACzBH,eAAA,OAAKE,UAAU,UAASC,SAAA,CACtBC,cAAA,KAAGF,UAAU,YAAWC,SAAC,uBACzBC,cAAA,SAEAJ,eAAA,OAAKE,UAAU,QAAOC,SAAA,CACpBC,cAAA,OAAK4M,IAAI,GAAG3M,MAAM,KAAKM,OAAO,KAAKL,IAAK2M,IACxC7M,cAAA,SACEie,UAAU,EACV5c,MAAK,GAAAyL,OAAKtM,OAAO6F,SAAS6X,OAAM,cAAApR,OAAaN,KAE/CxM,cAAA,SACAA,cAAA,UAAQH,QAnCHse,KACf,IACEC,KAAK,GAADtR,OAAItM,OAAO6F,SAAS6X,OAAM,cAAApR,OAAaN,IAE3CjE,IAAMoC,QAAQ,sBAAuB,CAAE3B,MAAO,CAAEgC,UAAW,SAC7D,CAAE,MAAO/D,GACPsB,IAAMC,MAAM,8BAA+B,CACzCQ,MAAO,CAAEgC,UAAW,UAItBpE,QAAQC,IAAII,EACd,GAuBqCnH,UAAU,UAASC,SAAC,sBAOrDC,cAAA,OAAKF,UAAU,aAAYC,SACzBH,eAAA,OAAKE,UAAU,UAASC,SAAA,CACtBH,eAAAye,WAAA,CAAAte,SAAA,CACEC,cAAA,KAAGF,UAAU,YAAWC,SAAC,uBACzBC,cAAA,SACAJ,eAAA,OAAKE,UAAU,QAAOC,SAAA,CACpBC,cAAA,OAAK4M,IAAI,GAAG3M,MAAM,KAAKM,OAAO,KAAKL,IAAK2M,IACxC7M,cAAA,SACE+H,YAAY,sBACZ1G,MAAO0a,EACP/T,SAAWf,GAAM+U,EAAY/U,EAAEgB,OAAO5G,OACtCvB,UAAW,UAEbE,cAAA,SACAA,cAAA,UACEH,QAASA,IA9HEkC,WACzB,IAEE,GADAua,GAAgB,GACc,GAA1BP,EAAS1T,OAAOC,OAClB,OAAOC,IAAMC,MAAM,mCAAoC,CACrDQ,MAAO,CAAEgC,UAAW,UAKxB,GAAI,WAAWvC,KAAKsT,GAAW,CAC7B,MAAM3U,QAAsB7B,EAAMlG,SAASmG,MAAMuW,GAAUrW,OACrDgD,QAAkB/C,QAAQC,QAAQwB,GACxC,GAAyB,GAArBsB,EAAUrB,QACZ,OAAOkB,IAAMC,MAAM,uBAErB,MAAMyK,QAAqB4K,EAAgB9B,GAE3CS,EAAqB,CACnBpZ,GAAIsF,EAAUtF,GAAGgI,WACjBjJ,QAAS4Z,EACT3D,MAAOnF,GAIX,KAAO,CACL,MAAMtK,QAAwBpD,EAAMlG,SACjCuJ,SAASC,KAAKC,MAAMiT,IACpBrW,OACGD,QAAoBE,QAAQC,QAAQ+C,GAEpCvB,QAAsB7B,EAAMlG,SAASmG,MAAMC,GAAaC,OACxDgD,QAAkB/C,QAAQC,QAAQwB,GACxC,GAAyB,GAArBsB,EAAUrB,QACZ,OAAOkB,IAAMC,MAAM,sBAAuB,CACxCQ,MAAO,CAAEgC,UAAW,UAGxB,MAAMiI,QAAqB4K,EAAgBpY,GAC3C+W,EAAqB,CACnBpZ,GAAIsF,EAAUtF,GAAGgI,WACjBjJ,cAAeL,EAAc2D,GAC7B2S,MAAOnF,GAEX,CACAqJ,GAAgB,EAClB,CAAE,MAAOrV,GACPL,QAAQC,IAAII,GACZqV,GAAgB,EAClB,GA6E6BgC,GACfxe,UAAU,UAASC,SAElBsc,EAAe,YAAc,iBAKpCrc,cAAA,SACAA,cAAA,OAAKF,UAAU,cAAaC,UACR,OAAjBwc,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBnZ,KAClBxD,eAAA,OAAKwP,MAAM,gBAAerP,SAAA,CAAC,OACrBC,cAAA,KAAAD,SAAqB,OAAjBwc,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBnZ,KAAO,uBAA2B,IAC7DpD,cAAA,KAAAD,SAAqB,OAAjBwc,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBnE,QAAU,yBACf,OAAjBmE,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBpa,QAAS,IAC7BnC,cAAA,KACEsH,KAAK,2EACLW,OAAO,SAAQlI,SAEfC,cAAA,KAAGoP,MAAM,2CASvBxP,eAAA,OAAKE,UAAU,YAAWC,SAAA,CACxBC,cAAA,KAAGF,UAAU,YAAWC,SAAC,mBAEzBC,cAAA,OAAKF,UAAU,UAASC,SACpBkc,EAGAjc,cAACsZ,KAAO,CACNC,QAAQ,UACRC,KAAK,QACLC,UAAU,SACVC,KAAK,SAAQ3Z,SAEbC,cAAA,QAAMF,UAAU,kBAAiBC,SAAC,iBARpCC,cAACub,GAAI,CAACxK,KAAM0L,MAYdN,EAGAnc,cAACsZ,KAAO,CACNC,QAAQ,UACRC,KAAK,QACLC,UAAU,SACVC,KAAK,SAAQ3Z,SAEbC,cAAA,QAAMF,UAAU,kBAAiBC,SAAC,iBARpCC,cAACia,GAAK,CAAClJ,KAAM4L,EAAWzC,UAAWpH,SAc7C,E,OC1XemH,OAtDDva,IAA4B,IAA3B,KAAEqR,EAAI,aAACoL,GAAczc,EAClC,MAAOya,EAAWC,GAAgBxZ,mBAASmQ,GAI3C,OAHAlQ,qBAAU,KACRuZ,EAAarJ,EAAK,GACjB,CAACA,IAEF/Q,cAAA,OAAKF,UAAU,eAAcC,SAC3BH,eAAA,OAAKE,UAAU,MAAKC,SAAA,CAClBC,cAAA,OAAKF,UAAU,SAAQC,SACrBH,eAAA,OAAKE,UAAU,MAAKC,SAAA,CAClBC,cAAA,SAAOF,UAAU,YAAYiI,YAAY,WACzC/H,cAAA,UAAQF,UAAU,UAASC,SAAC,gBAGhCC,cAAA,OAAKF,UAAU,SAAQC,SACnBoc,EAwBJnc,cAACsZ,KAAO,CACNC,QAAQ,UACRC,KAAK,QACLC,UAAU,SACVC,KAAK,SAAQ3Z,SAEbC,cAAA,QAAMF,UAAU,kBAAiBC,SAAC,iBA7BlCH,eAAA,SAAAG,SAAA,CACEH,eAAA,MAAAG,SAAA,CACEC,cAAA,MAAIgJ,MAAO,CAACqR,SAAS,QAAQta,SAAE,SAC/BC,cAAA,MAAIgJ,MAAO,CAACqR,SAAS,QAAQta,SAAC,OAC9BC,cAAA,MAAIgJ,MAAO,CAACqR,SAAS,SAASta,SAAC,WAC/BC,cAAA,MAAIgJ,MAAO,CAACqR,SAAS,QAAQta,SAAC,aAE/Boa,EAAUR,KAAI,CAAC3E,EAAM2B,IACX,GAATA,GACE/W,eAAA,MAAAG,SAAA,CACAC,cAAA,MAAIF,UAAU,QAAOC,SAAE4W,EAAQ,IAC/B3W,cAAA,MAAIF,UAAU,QAAOC,SAAEiV,EAAK5R,KAC5BpD,cAAA,MAAIF,UAAU,QAAOC,SACrBC,cAAA,KAAGiI,OAAO,SAASX,KAAI,kCAAAwF,OAAoCkI,EAAK7S,SAAUpC,SAAEiV,EAAK7S,YAEjFnC,cAAA,MAAIF,UAAU,QAAOC,SAAEiV,EAAK/B,6BAmBlC,EC8HKsL,OAtKf,WACE,MAAM,OAAEhe,EAAM,MAAEN,GAAUQ,IAE1B,IAAIwD,EADcT,YAAYjB,IACF/B,OAAO6C,SAASjE,QAAQkE,eAAeC,OAEnE,MAAO4Y,EAAcC,GAAmBxb,oBAAS,IAE1CxB,EAASgF,GAAcxD,mBAAS,CAAEyD,WAAW,EAAOC,UAAU,KAC9DyM,EAAMyN,GAAW5d,mBAAS,IAEjCC,qBAAU,KACRiF,GAAgB,GACf,IAEH,MA2CMmN,EAAelR,UACnB,MAAM0c,QAAuBlZ,EAAMlG,SAChCmY,oBAAoBrV,GACpBuD,OACGoY,QAAmBnY,QAAQC,QAAQ6Y,GACzC,OAAiB,OAAVX,QAAU,IAAVA,OAAU,EAAVA,EAAYjY,UAAU,EAwBzBC,EAAiB/D,UACrB,IAAK,IAADE,EAAAC,EACF,IAAIyD,SAASC,IACX,MAAMW,EAAe,CACnBlC,YAAa7D,OAAOpB,QACpBkF,SAAU9D,OAAOpB,SAAWoB,OAAOpB,QAAQgH,OAG7C,GAAIG,EAAalC,UAGf,OAFAD,EAAWmC,GAEJX,IAGT,IAAIY,EAAQ,EAEZ,MAAMC,EAAQ7B,aAAY,KACxB,GAAI4B,GAAS,GAAI,CACf,MAAME,EAAe,0BAcrB,OAZAlG,OAAOpB,QAAU,IAAIuH,IACnBD,EACAA,EACAA,GAGFtC,EAAW,CACTC,WAAW,EACXC,UAAU,IAGZa,cAAcsB,GACPb,GACT,CAKA,GAHAW,EAAalC,YAAc7D,OAAOpB,QAClCmH,EAAajC,SAAW9D,OAAOpB,SAAWoB,OAAOpB,QAAQgH,OAEpDG,EAAalC,UAAW,OAAOmC,IAEpCpC,EAAWmC,GAEXX,GAAS,GACR,IAAI,IAGTpF,OAAOpB,QAAQkE,eAAiB,CAC9BwD,IAAmB,QAAhB7E,EAAEzB,OAAOpB,eAAO,IAAA6C,GAAS,QAATC,EAAdD,EAAgBE,eAAO,IAAAD,OAAT,EAAdA,EAAyB6E,MAAM9C,GACpCV,OAAQU,GAGVzD,OAAOpB,QAAQ4H,GAAG,kBAAmBC,IAC/B7H,EAAQkF,UAEZF,EAAW,CACThF,QAAS,CACPiF,WAAW,EACXC,UAAU,IAEZ,UAGEiB,EAAMjG,WAAWkB,OAAOpB,SAAS8H,MAAKnF,eAtI9BA,WAChB,IAAI2c,EAAevc,EACfwc,EAAY,GAEhB,UAAW,MAAMxR,KAAKqJ,MAAMC,KAAK,CAAEnO,OAAQ,IAAK,CAACoO,EAAGvJ,IAAMA,EAAI,IAAI,CAAC,IAADyR,EAChE,MAAM7B,QAAkBxX,EAAMlG,SAASmG,MAAMkZ,GAAchZ,OAE3D,IAAKqX,EAAW,CACdX,GAAgB,GAChB,KACF,CACA,MAAMrL,QAAapL,QAAQC,QAAQmX,GAC7B1T,EAAY,OAAJ0H,QAAI,IAAJA,GAAgB,QAAZ6N,EAAJ7N,EAAM8N,kBAAU,IAAAD,OAAZ,EAAJA,EAAkB/Y,WAC1BiZ,QAA8BvZ,EAAMlG,SAASuJ,SAASS,GAAO3D,OAC7DqZ,QAAuBjd,EAAcgd,GAiB3C,SAfM7L,EAAa8L,GAAgB7X,MAAM0D,IACvC4T,GAASvX,GAAM,IACVA,EACH,CACE7D,GAAIiG,EACJlH,QAAS4c,EACT9L,aAAcrI,KAEhB,IAEJ8T,EAAeK,EAEX5C,GACFC,GAAgB,GAEL,GAAT/S,EACF,KAEJ,CAEIsV,EAAUrW,OAAS,IACrBqW,EAAYA,EAAUK,QAAQ/X,GAAc,GAARA,EAAE7D,KAGlC,EA+FI0Q,CAAU7P,GAAciD,MAAKnF,aAAgB,GAEvD,CAAE,MAAOkF,GACPL,QAAQC,IAAII,EACd,GAGF,OACErH,eAAA,OAAKE,UAAU,UAASC,SAAA,CACtBC,cAAA,OAAKF,UAAU,gBAAeC,SAC5BC,cAAA,KAAGF,UAAU,SAAQC,SAAC,cAGxBC,cAACia,GAAK,CAACkC,aAAcA,EAAcpL,KAAMA,MAG/C,E,OC/HekJ,OAhDDva,IAAuC,IAAtC,KAAEqR,EAAI,UAAEmJ,EAAS,aAACiC,GAAczc,EAC7C,MAAOya,EAAWC,GAAgBxZ,mBAASmQ,IACpC+B,EAAWC,GAAgBnS,mBAASsZ,GAO3C,OALArZ,qBAAU,KACRuZ,EAAarJ,GACbgC,EAAamH,EAAU,GACtB,CAACnJ,EAAM+B,IAGR9S,cAAA,OAAKF,UAAU,eAAcC,SAC3BH,eAAA,OAAKE,UAAU,MAAKC,SAAA,CAClBC,cAAA,OAAKF,UAAU,SAAQC,SACrBH,eAAA,OAAKE,UAAU,MAAKC,SAAA,CAClBC,cAAA,SAAOF,UAAU,YAAYiI,YAAY,WACzC/H,cAAA,UAAQF,UAAU,UAASC,SAAC,gBAGhCC,cAAA,OAAKF,UAAU,SAAQC,SACnBoc,EAmBJnc,cAACsZ,KAAO,CAACC,QAAQ,UAAUC,KAAK,QAAQC,UAAU,SAASC,KAAK,SAAQ3Z,SACxEC,cAAA,QAAMF,UAAU,kBAAiBC,SAAC,iBAnBhCH,eAAA,SAAAG,SAAA,CACEH,eAAA,MAAAG,SAAA,CACEC,cAAA,MAAIgJ,MAAO,CAACqR,SAAS,QAAQta,SAAC,SAC9BC,cAAA,MAAIgJ,MAAO,CAACqR,SAAS,SAASta,SAAC,qBAC/BC,cAAA,MAAIgJ,MAAO,CAACqR,SAAS,SAASta,SAAC,sBAC/BC,cAAA,MAAIgJ,MAAO,CAACqR,SAAS,QAAQta,SAAC,WAG/Boa,EAAUR,KAAI,CAAC3E,EAAM2B,IACpB/W,eAAA,MAAAG,SAAA,CACEC,cAAA,MAAIF,UAAU,QAAOC,SAAE4W,EAAQ,IAC/B3W,cAAA,MAAIF,UAAU,QAAOC,SAAEiV,EAAK5R,KAC5BpD,cAAA,MAAIF,UAAU,QAAOC,SAAEiV,EAAKsF,QAC5Bta,cAAA,MAAIF,UAAU,QAAOC,SAAEiV,EAAKsF,MAAQxH,EAAUyH,QAAQ,mBAW5D,ECkLK0E,OAjNf,WACE,MAAM,OAAE1e,EAAM,MAAEN,GAAUQ,IAE1B,IAAIwD,EADcT,YAAYjB,IACF/B,OAAO6C,SAASjE,QAAQkE,eAAeC,OAEnE,MAAO4Y,EAAcC,GAAmBxb,oBAAS,IAC1CkS,EAAWC,GAAgBnS,mBAAS,IAEpCxB,EAASgF,GAAcxD,mBAAS,CAAEyD,WAAW,EAAOC,UAAU,KAC9DmY,EAAUC,GAAe9b,mBAAS,KAClC+b,EAAWC,GAAgBhc,mBAAS,IAI3CC,qBAAU,KACRiF,IACA0N,GAAkB,GACjB,IAEH,MAAMA,EAAmBzR,UACvB0R,MAAM,oGAGHvM,MAAM0D,GAAQA,EAAI8I,SAClBxM,MAAM6J,IACLgC,EAAahC,EAAK6C,KAAKC,IAAI,GAC3B,EAgGA/N,EAAiB/D,UACrB,IA6C0B,IAADE,EAAAC,EAAvB,GA5CA,IAAIyD,SAASC,IACX,MAAMW,EAAe,CACnBlC,YAAa7D,OAAOpB,QACpBkF,SAAU9D,OAAOpB,SAAWoB,OAAOpB,QAAQgH,OAG7C,GAAIG,EAAalC,UAGf,OAFAD,EAAWmC,GAEJX,IAGT,IAAIY,EAAQ,EAEZ,MAAMC,EAAQ7B,aAAY,KACxB,GAAI4B,GAAS,GAAI,CACf,MAAME,EAAe,0BAcrB,OAZAlG,OAAOpB,QAAU,IAAIuH,IACnBD,EACAA,EACAA,GAGFtC,EAAW,CACTC,WAAW,EACXC,UAAU,IAGZa,cAAcsB,GACPb,GACT,CAKA,GAHAW,EAAalC,YAAc7D,OAAOpB,QAClCmH,EAAajC,SAAW9D,OAAOpB,SAAWoB,OAAOpB,QAAQgH,OAEpDG,EAAalC,UAAW,OAAOmC,IAEpCpC,EAAWmC,GAEXX,GAAS,GACR,IAAI,KAGJxG,EAAQkF,SAIX9D,OAAOpB,QAAQkE,eAAiB,CAC9BwD,IAAmB,QAAhB7E,EAAEzB,OAAOpB,eAAO,IAAA6C,GAAS,QAATC,EAAdD,EAAgBE,eAAO,IAAAD,OAAT,EAAdA,EAAyB6E,MAAM9C,GACpCV,OAAQU,GAGVzD,OAAOpB,QAAQ4H,GAAG,kBAAmBC,IAC/B7H,EAAQkF,UAEZF,EAAW,CACThF,QAAS,CACPiF,WAAW,EACXC,UAAU,IAEZ,SAnFYvC,WACpB,IAAIqb,EAAM,SACJ7X,EAAMlG,SACTge,eAAeja,GACfsC,OACAwB,MAAKnF,UACJqa,GAAgB,GAEhB,IAAK,IAAIzF,EAAQ,EAAGA,EAAQrO,EAAOzC,WAAY8Q,IAAS,CACtD,IAAI2G,QAAgB/X,EAAMlG,SAAS6f,WAAW9b,EAAIuT,GAAOjR,OACrD8X,EAAM,CAAC,EACXA,EAAIrb,cAAgBL,EAAcwb,EAAQG,cAC1CD,EAAIpa,GAAKka,EAAQ6B,WAAWtZ,WAC5B2X,EAAIlD,MAAQgD,EAAQ8B,KAAKvZ,WAAa,IACtCuX,EAAInI,KAAKuI,GACTZ,GAAc3V,GAAM,IAAIA,EAAGuW,IAC7B,IACA,EAsEII,CAAc3Z,EACtB,CAAE,MAAOgD,GACPL,QAAQC,IAAII,EACd,GAGF,OACErH,eAAA,OAAKE,UAAU,cAAaC,SAAA,CAC1BC,cAAA,OAAKF,UAAU,gBAAeC,SAC5BC,cAAA,KAAGF,UAAU,SAAQC,SAAC,kBAGxBC,cAACia,GAAK,CACJkC,aAAcA,EACdpL,KAAM4L,EACNzC,UAAWpH,MAInB,E,+BCPeuM,OA/Lf,WACE,MAAOC,EAAUC,GAAe3e,oBAAS,GAEnCqL,EAAOzI,YAAYwI,GACnBvI,EAAWC,cAEX2C,EAAWqI,cAIXC,EAAc7C,GAFH8C,MAAA,IAAAC,EAAA,OAAc,OAARxI,QAAQ,IAARA,GAAkB,QAAVwI,EAARxI,EAAUwD,gBAAQ,IAAAgF,OAAV,EAARA,EAAoBC,aAAa,EAE1BF,IAAkB9C,EAOhD,OACElM,eAAC4f,KAAS,CAACC,KAAMxT,EAAMyT,OAAQA,IAAMjc,EAASsI,GAAYE,IAAOlM,SAAA,CAC/DC,cAACwf,KAAUG,OAAM,CAACC,aAAW,EAAA7f,SAC3BC,cAACuH,EAAI,CAACzH,UAAU,cAElBE,cAACwf,KAAUK,KAAI,CAAA9f,SACbH,eAAA,OAAKoJ,MAAO,CAAE/I,MAAO,QAAUH,UAAU,UAASC,SAAA,CAChDC,cAAA,OAAKF,UAAU,mBAAkBC,SAC/BC,cAAA,OAAKF,UAAU,OAAMC,SACnBH,eAAA,MAAIE,UAAU,cAAaC,SAAA,CACzBC,cAACqL,OAAI,CACHvL,UAAW6O,EAAW,KAAO,cAAgB,OAC7C9O,QAASA,IAAM4D,EAASsI,GAAYE,IACpCX,GAAG,IACHtC,MAAO,CACL/I,MAAO,mBACPsL,eAAgB,OAChBwD,MAAO,QACPC,QAAS,OACTC,cAAe,MACfC,WAAY,UACZnP,SAEFH,eAAA,MACEoJ,MAAO,CAAE+F,MAAOJ,EAAW,KAAO,QAAU,MAC5C7O,UAAU,eAAcC,SAAA,CAExBC,cAAA,QAAMF,UAAU,OAAMC,SAClB4O,EAAW,KAQX3O,cAAA,OACEE,IAAKiP,EACLlP,MAAM,KACN2M,IAAI,GACJwC,MAAM,yBAXRpP,cAAA,OACEE,IAAKmP,GACLpP,MAAM,KACN2M,IAAI,GACJwC,MAAM,2BAUL,iBAKXpP,cAACqL,OAAI,CACHvL,UAAW6O,EAAW,aAAe,cAAgB,OACrD9O,QAASA,IAAM4D,EAASsI,GAAYE,IACpCX,GAAG,YACHtC,MAAO,CACL/I,MAAO,mBACPsL,eAAgB,OAChBwD,MAAO,QACPC,QAAS,OACTC,cAAe,MACfC,WAAY,UACZnP,SAEFH,eAAA,MACEoJ,MAAO,CAAE+F,MAAOJ,EAAW,aAAe,QAAU,MACpD7O,UAAU,eAAcC,SAAA,CAExBC,cAAA,QAAMF,UAAU,OAAMC,SAClB4O,EAAW,aAGX3O,cAAA,OAAKE,IAAKoP,GAAUrP,MAAM,OAF1BD,cAAA,OAAKE,IAAKqP,GAActP,MAAM,SAI3B,gBAIXD,cAACqL,OAAI,CACHvL,UAAW6O,EAAW,YAAc,cAAgB,OACpD9O,QAASA,IAAM4D,EAASsI,GAAYE,IACpCX,GAAG,WACHtC,MAAO,CACL/I,MAAO,mBACPsL,eAAgB,OAChBwD,MAAO,QACPC,QAAS,OACTC,cAAe,MACfC,WAAY,UACZnP,SAEFH,eAAA,MACEoJ,MAAO,CAAE+F,MAAOJ,EAAW,YAAc,QAAU,MACnD7O,UAAU,eAAcC,SAAA,CAExBC,cAAA,QAAMF,UAAU,OAAMC,SAClB4O,EAAW,YAGX3O,cAAA,OAAKE,IAAKsP,GAAYvP,MAAM,OAF5BD,cAAA,OAAKE,IAAKuP,GAAgBxP,MAAM,SAI7B,eAIXD,cAACqL,OAAI,CACHvL,UACE6O,EAAW,gBAAkB,cAAgB,OAE/C9O,QAASA,IAAM4D,EAASsI,GAAYE,IACpCX,GAAG,eACHtC,MAAO,CACL/I,MAAO,mBACPsL,eAAgB,OAChBwD,MAAO,QACPC,QAAS,OACTC,cAAe,MACfC,WAAY,UACZnP,SAEFH,eAAA,MACEoJ,MAAO,CACL+F,MAAOJ,EAAW,gBAAkB,QAAU,MAEhD7O,UAAU,eAAcC,SAAA,CAExBC,cAAA,QAAMF,UAAU,OAAMC,SAClB4O,EAAW,gBAOX3O,cAAA,OACEgJ,MAAO,CAAEyD,WAAY,OACrBxM,MAAM,KACNC,IAAKwP,KATP1P,cAAA,OACEgJ,MAAO,CAAEyD,WAAY,OACrBxM,MAAM,KACNC,IAAKyP,OASJ,2BAgBjB3P,cAACqL,OAAI,CACHvL,UAAW,OACXD,QAASA,KA/JjBW,OAAO6C,SAASjE,SAAU,EAC1BqE,EAASlC,EAAW,cA8JakC,EAASsI,GAAYE,GAAM,EACpDX,GAAG,IACHtC,MAAO,CACL/I,MAAO,mBACPsL,eAAgB,OAChBwD,MAAO,QACPC,QAAS,OACTC,cAAe,MACfC,WAAY,SACZW,eAAgB,UAChB9P,SAEFC,cAAA,MAAIF,UAAU,0BAAyBC,SAAC,oBAMpD,EChJe+f,OArDf,WACE,MAAM,OAAEvf,EAAM,MAAEN,GAAUQ,IACpBgD,EAAWC,cACXG,EAAYL,YAAYjB,GA2B9B,OAzBA1B,qBAAU,KAIR,GAHA4D,SAASC,MAAQ,UAGbb,EACF,OAGF,MAAMkc,EAAkBnb,aAAY,KAAO,IAAD/B,EAAAb,EAAAge,EAER,IAAb,QAAfnd,EAAArC,OAAO6C,gBAAQ,IAAAR,OAAA,EAAfA,EAAiBzD,UACnBqE,EAASlC,EAAW,cAKZ,QAAVS,EAAIxB,cAAM,IAAAwB,GAAU,QAAVge,EAANhe,EAAQqB,gBAAQ,IAAA2c,GAAhBA,EAAkB5gB,SACpBqE,EAASlC,EAAW,YAEtB,GACC,KAEH,MAAO,IAAM4D,cAAc4a,EAAgB,GAC1C,IAGDngB,eAAA,OAAKE,UAAU,MAAKC,SAAA,CAClBC,cAACigB,KAAc,IAEdhgB,GAAS,IAAMD,cAACyO,GAAU,IAAMzO,cAACqf,GAAgB,IAElDzf,eAAA,OACEE,UAAWG,GAAS,IAAM,eAAiB,4BAA4BF,SAAA,CAEvEC,cAACkM,EAAM,IAEPtM,eAAA,OAAKE,UAAU,UAASC,SAAA,CACtBC,cAAC2L,IAAK,CAACC,UAAW2G,GAAc1G,OAAK,EAACC,KAAK,MAC3C9L,cAAC2L,IAAK,CAACC,UAAWiO,GAAS/N,KAAK,aAChC9L,cAAC2L,IAAK,CAACC,UAAWkQ,GAAUhQ,KAAK,cACjC9L,cAAC2L,IAAK,CAACC,UAAW2S,GAASzS,KAAK,aAChC9L,cAAC2L,IAAK,CAACC,UAAWqT,GAAanT,KAAK,yBAK9C,EC5BeoU,OAhCHA,KAAO,IAADle,EAChB,MAAMyJ,EAAajI,YAAY5B,GAUT,IAADoB,EAAX,QAAVhB,EAAIxB,cAAM,IAAAwB,GAANA,EAAQ5C,UACJ,QAAN4D,EAAAxC,cAAM,IAAAwC,GAANA,EAAQ5D,QAAQ4H,GAAG,kBAAmBC,SAKxC,OACIjH,cAACmgB,gBAAa,CAACC,SAAUC,iBAAuBtgB,SAG9CC,cAAC2L,IAAK,CACJL,GAAI,IAGJgV,OAAQA,IAAqB,YAAd7U,EAA2BzL,cAAC8f,GAAO,IAAM9f,cAACwL,EAAI,OAGjD,EC1BP+U,OAZSC,IAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvZ,MAAKxH,IAAkD,IAAjD,OAAEghB,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASphB,EACpEghB,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EAAY,GAExB,ECDaO,eAAe,CAC5BC,QAAS,CACP/U,KAAMgV,EACNpf,KAAKqf,EACLC,kBAAkBC,GAClB5e,cAAc6e,EACd1e,OAAO2e,KCHXC,IAASjB,OACPtgB,cAACwhB,IAAMC,WAAU,CAAA1hB,SACfC,cAAC0hB,IAAQ,CAACC,MAAOC,GAAM7hB,SACrBC,cAACkgB,GAAG,QAGRzb,SAASod,eAAe,SAM1BtB,I","file":"static/js/main.f6acdab4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logimg.84960df3.jpg\";","export default __webpack_public_path__ + \"static/media/logm.9c996e3c.jpg\";","const contractAddress = \"TYWuL6SEU4PdPTgG9iGHPdYbqXiYQjFvvW\"\n// \"TRx9XRUiP8mf7wqa9EQrx5SuMNmou397hP\"\n// \"TJYqBJz8brbJ67WfTSD7QDtm3RkppX3DoQ\"\n// \"TVeWyJgWMwPWP1rHz5i7UCrfEVB7KmaHcH\"\n\n// \"TCYusnqzTJZkZJaDCVVz4pbemugN4CbMv7\" ; Version = 1 (TEST)\n\nconst utils = {\n    tronWeb: false,\n    contract: false,\n    contractAddress:contractAddress,\n\n    async setTronWeb(tronWeb) {\n        this.tronWeb = tronWeb;\n        this.contract = await tronWeb.contract().at(contractAddress)\n    },\n\n};\n\nexport default utils;\n\n","export default __webpack_public_path__ + \"static/media/logo.6921a8ce.svg\";","export default __webpack_public_path__ + \"static/media/tronlink.e60d7b91.png\";","import React from \"react\";\nimport logo from \"../../Assets/tronlink.png\";\n\nconst ConnectWallet = ({ Connect }) => {\n  return (\n    <div onClick={() => Connect()} className=\"Wallet-Circle\">\n    <img width={30} src={logo} />\n    <span>Connect to Tron Wallet</span>\n  </div>\n  );\n};\n\nexport default ConnectWallet;\n","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'auth',\n  initialState: {\n    value: \"LOGGEDOUT\",\n  },\n  reducers: {\n    toogleAuth: (state, action) => {\n      state.value =  action.payload;;\n    },\n  },\n});\n\nexport const { toogleAuth } = slice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const incrementAsync = amount => dispatch => {\n  setTimeout(() => {\n    // dispatch(incrementByAmount(amount));\n  }, 1000);\n};\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const getAuth = state => state.auth.value;\n\nexport default slice.reducer;\n","export const Hex_to_base58 = async(string)=> window?.tronWeb?.address?.fromHex(string)","import { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'previewModeId',\n  initialState: {\n    value: null,\n  },\n  reducers: {\n    tooglePreviewModeId: (state, action) => {\n      state.value =  action.payload;;\n    },\n  },\n});\n\nexport const { tooglePreviewModeId } = slice.actions;\n\n\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const getPreviewModeId = state => state.previewModeId.value;\n\nexport default slice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'userId',\n  initialState: {\n    value: \"\",\n  },\n  reducers: {\n    toogleuserId: (state, action) => {\n      state.value =  action.payload;;\n    },\n  },\n});\n\nexport const { toogleuserId } = slice.actions;\n\n\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const getuserId = state => state.userId.value;\n\nexport default slice.reducer;\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"./Login.css\";\r\nimport logimg from \"./logimg.jpg\";\r\nimport logm from \"./logm.jpg\";\r\nimport { GrSend } from \"react-icons/gr\";\r\nimport { FiTwitter } from \"react-icons/fi\";\r\nimport { BsInstagram } from \"react-icons/bs\";\r\nimport { BsFacebook } from \"react-icons/bs\";\r\nimport { BsBoxArrowUpRight } from \"react-icons/bs\";\r\n\r\nimport TronWeb from \"tronweb\";\r\nimport Utils from \"../../Utils/index\";\r\n\r\nimport Logo from \"../../Assets/logo.svg\";\r\nimport { Form, Button, Toast } from \"react-bootstrap\";\r\nimport ConnectWallet from \"../Wallets/ConnectWallet\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toogleAuth, getAuth } from \"../Redux/Reducer/AuthReducer\";\r\nimport { FaBullseye } from \"react-icons/fa\";\r\nimport { Hex_to_base58 } from \"../../Utils/Converter\";\r\nimport { tooglePreviewModeId } from \"../Redux/Reducer/PreviewMode\";\r\nimport UserId, { toogleuserId } from \"../Redux/Reducer/UserId\";\r\nimport { getuserId } from \"../Redux/Reducer/UserId\";\r\n\r\n\r\nconst TEMP_ADDRESS = \"TG31Eya5GywMYV2rwq3rwGbep4eoykWREP\";\r\n\r\nconst Login = () => {\r\n  const { height, width } = useWindowDimensions();\r\n  let id = window?.tronLink?.tronWeb?.defaultAddress?.base58;\r\n\r\n  const authStatus = useSelector(getAuth);\r\n  const dispatch = useDispatch();\r\n\r\n  const [loginId, setloginId] = useState(\"\");\r\n  const [previewId, setpreviewId] = useState(\"\");\r\n  const [Loader, setLoader] = useState(false);\r\n\r\n\r\n  let walletId = window?.tronLink?.tronWeb?.defaultAddress?.base58;\r\n\r\n\r\n  const [FOUNDATION_ADDRESS, setFOUNDATION_ADDRESS] = useState(TEMP_ADDRESS);\r\n\r\n  const [tronWeb, settronWeb] = useState({ installed: false, loggedIn: false });\r\n\r\n  let TOKEN = localStorage.getItem(\"access_token\");\r\n\r\n\r\n  useEffect(() => {\r\n    document.title = \"Login|Tronsport\";\r\n\r\n    const checklogin = setInterval(async () => {\r\n      if (window?.tronLink?.tronWeb) {\r\n        // alert(window?.tronLink?.tronWeb?.defaultAddress?.base58)\r\n        clearInterval(checklogin);\r\n\r\n        await checkUser(window?.tronLink?.tronWeb?.defaultAddress?.base58);\r\n      }\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const PreviewMode = async () => {\r\n    try {\r\n      if (previewId.trim().length == 0) {\r\n        return toast.error(\"Please enter valid RefId/address\");\r\n      }\r\n\r\n      // if string is address\r\n      if (previewId == 1 && walletId != \"TKjPHnjv9YfgkzMVhH1xPzi3BvRguBXwfU\") {\r\n        toast.error(\"Invalid Request\")\r\n        return\r\n      }\r\n      setLoader(true);\r\n\r\n\r\n\r\n      if (/[a-zA-Z]/.test(previewId)) {\r\n\r\n        const LoadUserExist = await Utils.contract.users(previewId).call();\r\n\r\n        const userexist = await Promise.resolve(LoadUserExist);\r\n        setLoader(false);\r\n        if (userexist[0] == false) {\r\n          setLoader(false);\r\n\r\n          return toast.error(\"User does not exist\");\r\n        }\r\n\r\n        dispatch(tooglePreviewModeId(await Hex_to_base58(previewId)));\r\n        await FetchUserId(previewId);\r\n        dispatch(toogleAuth(\"LOGGEDIN\"));\r\n      } else {\r\n        const LoadUserAddress = await Utils.contract\r\n          .userList(JSON.parse(previewId))\r\n          .call();\r\n\r\n        let userAddress = await Promise.resolve(LoadUserAddress);\r\n\r\n        // userAddress = (await Utils.tronWeb.address.fromHex(userAddress))\r\n\r\n        const LoadUserExist = await Utils.contract.users(userAddress).call();\r\n\r\n        const userexist = await Promise.resolve(LoadUserExist);\r\n\r\n        if (userexist.isExist == false) {\r\n          setLoader(false);\r\n          return toast.error(\"User does not exist\");\r\n        }\r\n        dispatch(tooglePreviewModeId(await Hex_to_base58(userAddress)));\r\n        await FetchUserId(await Hex_to_base58(userAddress));\r\n        dispatch(toogleAuth(\"LOGGEDIN\"));\r\n\r\n        // setLoader(false);\r\n      }\r\n\r\n      // const userexist = await Promise.resolve(LoadUserExist);\r\n      // console.log(userexist);\r\n      // if (userexist[0] == true) {\r\n      //   dispatch(toogleAuth(\"LOGGEDIN\"));\r\n      // } else {\r\n      //   window.location.href = \"/register\";\r\n      //   dispatch(toogleAuth(\"LOGGEDOUT\"));\r\n      // }\r\n    } catch (e) {\r\n      console.log(e, \"yes\");\r\n      CONNECT_WALLET()\r\n      setLoader(false);\r\n    }\r\n  };\r\n\r\n  const FetchUserId = async (userAddress) => {\r\n    const LoadUserId = await Utils.contract.users(userAddress).call();\r\n    const userId = await Promise.resolve(LoadUserId);\r\n    // console.log(userId.id.toNumber(),\"HI\");\r\n    dispatch(toogleuserId(userId.id.toNumber()));\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setTimeout(() => {\r\n\r\n  //     if (window.tronLink?.tronWeb) {\r\n  //       dispatch(toogleAuth(\"LOGGEDIN\"));\r\n  //     } else {\r\n  //       dispatch(toogleAuth(\"LOGGEDOUT\"));\r\n  //     }\r\n\r\n  //     if (authStatus == \"LOGGEDOUT\") {\r\n  //       if (window.location.pathname != \"/\") {\r\n  //         window.location.href = \"/\";\r\n  //       }\r\n  //     }\r\n  //   }, 200);\r\n  // }, [tronWeb]);\r\n\r\n  const FetchData = async () => {\r\n    try {\r\n      await FetchPartners(id, []).then((e) => {\r\n        alert(e.length);\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const FetchPartners = async (id, partners) => {\r\n    return await Utils.contract\r\n      .viewUserReferral(id)\r\n      .call()\r\n      .then(async (items) => {\r\n        for await (const item of items) {\r\n          let e = await Hex_to_base58(item);\r\n          if (e == undefined || !e) return;\r\n          partners.push(e);\r\n          await FetchPartners(e, partners);\r\n        }\r\n        return partners;\r\n      });\r\n  };\r\n\r\n  const CONNECT_WALLET = async () => {\r\n    try {\r\n      if (!window?.tronWeb?.ready || !window?.tronLink?.tronWeb) {\r\n        window.location.reload();\r\n      }\r\n\r\n      new Promise((resolve) => {\r\n        const tronWebState = {\r\n          installed: !!window.tronWeb,\r\n          loggedIn: window.tronWeb && window.tronWeb.ready,\r\n        };\r\n\r\n        if (tronWebState.installed) {\r\n          settronWeb(tronWebState);\r\n\r\n          return resolve();\r\n        }\r\n\r\n        let tries = 0;\r\n\r\n        const timer = setInterval(() => {\r\n          if (tries >= 10) {\r\n            const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n            window.tronWeb = new TronWeb(\r\n              TRONGRID_API,\r\n              TRONGRID_API,\r\n              TRONGRID_API\r\n            );\r\n\r\n            settronWeb({\r\n              installed: false,\r\n              loggedIn: false,\r\n            });\r\n\r\n            clearInterval(timer);\r\n            return resolve();\r\n          }\r\n\r\n          tronWebState.installed = !!window.tronWeb;\r\n          tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n          if (!tronWebState.installed) return tries++;\r\n\r\n          settronWeb(tronWebState);\r\n          resolve();\r\n        }, 100);\r\n      });\r\n\r\n      console.log(window.tronWeb, \"CONNECT\");\r\n\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object as TronLink disabled the\r\n      // function call\r\n      // window.tronWeb.defaultAddress = {\r\n      //   hex: window.tronWeb?.address?.toHex(FOUNDATION_ADDRESS),\r\n      //   base58: FOUNDATION_ADDRESS,\r\n      // };\r\n\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb?.address?.toHex(id),\r\n        base58: id,\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChanged\", (e) => {\r\n        // alert(\"CHNAGES\");\r\n        if (tronWeb.loggedIn) return;\r\n        settronWeb({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true,\r\n          },\r\n        });\r\n      });\r\n\r\n      await Utils.setTronWeb(window?.tronWeb).then(async () => {\r\n        // alert(id)\r\n        await checkUser2();\r\n        // alert(id);\r\n        // dispatch(toogleAuth(\"LOGGEDIN\"));\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const HandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const checkUser = async (id) => {\r\n    // console.log(window.tronWeb);\r\n    try {\r\n      await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n        const LoadUserExist = await Utils.contract.users(id).call();\r\n        const userexist = await Promise.resolve(LoadUserExist);\r\n        if (userexist.isExist == true) {\r\n          await FetchUserId(id);\r\n          dispatch(toogleAuth(\"LOGGEDIN\"));\r\n        } else {\r\n          // window.location.href = \"/register\";\r\n\r\n          dispatch(toogleAuth(\"LOGGEDOUT\"));\r\n        }\r\n        // console.log(userexist[0]);\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const checkUser2 = async () => {\r\n    // console.log(window.tronWeb);\r\n    await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n      const LoadUserExist = await Utils.contract.users(id).call();\r\n      const userexist = await Promise.resolve(LoadUserExist);\r\n\r\n      if (userexist.isExist == true) {\r\n        await FetchUserId(id);\r\n        dispatch(toogleAuth(\"LOGGEDIN\"));\r\n      } else {\r\n        window.location.href = \"/register\";\r\n        dispatch(toogleAuth(\"LOGGEDOUT\"));\r\n      }\r\n      // console.log(userexist[0]);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Login-Main\">\r\n      <div className={\"Inside\"}>\r\n        <div className=\"Logo-Div\">\r\n          <img src={Logo} />\r\n        </div>\r\n\r\n        <ConnectWallet Connect={CONNECT_WALLET} />\r\n\r\n        <div className=\"Divider\">\r\n          OR\r\n        </div>\r\n        <div className=\"Inside-Form-Div\">\r\n          <Form onSubmit={(e) => HandleSubmit(e)}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Control\r\n                name=\"text\"\r\n                className=\"Input\"\r\n                placeholder=\"Enter Address or Referal Id\"\r\n                value={previewId}\r\n                onChange={(e) => {\r\n                  setpreviewId(e.target.value);\r\n                }}\r\n                autoComplete={\"false\"}\r\n                autoCorrect={\"false\"}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <button\r\n              onClick={PreviewMode}\r\n              disabled={Loader}\r\n              style={{ opacity: Loader ? 0.5 : 1 }}\r\n              className=\"Button\"\r\n            >\r\n              {Loader ? (\r\n                <p>Loading (Please wait)</p>\r\n              ) : (\r\n                <p>Enter App (Preview Mode)</p>\r\n              )}\r\n            </button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport \"../Login/Login.css\";\r\nimport { GrSend } from \"react-icons/gr\";\r\nimport { FiTwitter } from \"react-icons/fi\";\r\nimport { BsInstagram } from \"react-icons/bs\";\r\nimport { BsFacebook } from \"react-icons/bs\";\r\nimport { BsBoxArrowUpRight } from \"react-icons/bs\";\r\n\r\nimport Logo from \"../../Assets/logo.svg\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport ConnectWallet from \"../Wallets/ConnectWallet\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\nimport { FaBullseye } from \"react-icons/fa\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport TronWeb from \"tronweb\";\r\nimport Utils from \"../../Utils/index\";\r\nimport { getAuth, toogleAuth } from \"../Redux/Reducer/AuthReducer\";\r\nimport { toogleuserId } from \"../Redux/Reducer/UserId\";\r\n\r\nconst Register = () => {\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  const [Register, setRegister] = useState(FaBullseye);\r\n\r\n  const [loginId, setloginId] = useState(\"\");\r\n  const [refId, setrefId] = useState(null);\r\n  const [alertdata, setalertdata] = useState(null);\r\n  const [Loader, setLoader] = useState(false);\r\n\r\n\r\n  const BUY_AMOUNT = 200;\r\n\r\n  const FOUNDATION_ADDRESS = \"TG31Eya5GywMYV2rwq3rwGbep4eoykWREP\";\r\n\r\n  const authStatus = useSelector(getAuth);\r\n  const dispatch = useDispatch();\r\n\r\n  const [tronWeb, settronWeb] = useState({ installed: false, loggedIn: false });\r\n\r\n  let TOKEN = localStorage.getItem(\"access_token\");\r\n\r\n  // const Login =()=>{\r\n  //   window.location = \"http://console.localhost:3000/\"\r\n  // }\r\n\r\n  let id = window?.tronLink?.tronWeb?.defaultAddress?.base58;\r\n\r\n  useEffect(() => {\r\n    document.title = \"Tronsport|Register\";\r\n    if (window.location?.pathname?.split(\"/\")[2]) {\r\n      setrefId(window.location?.pathname?.split(\"/\")[2]);\r\n    }\r\n  }, []);\r\n\r\n  const HandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const CONNECT_WALLET = async () => {\r\n    try {\r\n      // if (!window.tronWeb.ready) {\r\n      //   window.location.href = \"/\";\r\n      // }\r\n\r\n      new Promise((resolve) => {\r\n        const tronWebState = {\r\n          installed: !!window.tronWeb,\r\n          loggedIn: window.tronWeb && window.tronWeb.ready,\r\n        };\r\n\r\n        if (tronWebState?.installed) {\r\n          settronWeb(tronWebState);\r\n          return resolve();\r\n        }\r\n\r\n        let tries = 0;\r\n\r\n        const timer = setInterval(() => {\r\n          if (tries >= 10) {\r\n            const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n            window.tronWeb = new TronWeb(\r\n              TRONGRID_API,\r\n              TRONGRID_API,\r\n              TRONGRID_API\r\n            );\r\n\r\n            settronWeb({\r\n              installed: false,\r\n              loggedIn: false,\r\n            });\r\n\r\n            clearInterval(timer);\r\n            return resolve();\r\n          }\r\n\r\n          tronWebState.installed = !!window.tronWeb;\r\n          tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n          if (!tronWebState.installed) return tries++;\r\n\r\n          settronWeb(tronWebState);\r\n\r\n          resolve();\r\n        }, 100);\r\n      });\r\n\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb?.address?.toHex(id),\r\n        base58: id,\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChanged\", (e) => {\r\n        if (tronWeb.loggedIn) return;\r\n\r\n        settronWeb({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true,\r\n          },\r\n        });\r\n      });\r\n\r\n      await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n\r\n        if (refId) {\r\n          // if (JSON.parse(refId) <= 9) {\r\n          //   let CurrentIdLoad = await Utils.contract.currUserID().call();\r\n          //   let CurrentId = await Promise.resolve(CurrentIdLoad);\r\n          //   await Buy(JSON.parse(CurrentId.toString()));\r\n          // } else {\r\n          //   await Buy(refId);\r\n          // }\r\n          await Buy(refId);\r\n\r\n        } else {\r\n          setLoader(true)\r\n          let CurrentIdLoad = await Utils.contract.currUserID().call();\r\n          let CurrentId = await Promise.resolve(CurrentIdLoad);\r\n          await Buy(JSON.parse(CurrentId.toString()));\r\n        }\r\n      });\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  };\r\n\r\n  const Buy = async (refID) => {\r\n    setLoader(true);\r\n\r\n    window.tronWeb.defaultAddress = {\r\n      hex: window.tronWeb?.address?.toHex(id),\r\n      base58: id,\r\n    };\r\n\r\n    return await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n      const toastId = toast.loading(\"Waiting for transaction confirmation\");\r\n      try {\r\n      \r\n        await Utils.contract\r\n          .regUser(refID)\r\n          .send({\r\n            feeLimit: 200_000_000,\r\n            callValue: 1000000 * BUY_AMOUNT,\r\n            shouldPollResponse: true,\r\n          })\r\n          .then(async (res) => {\r\n            toast.remove(toastId);\r\n            toast.success(\"Transaction done successfully\");\r\n            await FetchUserId(id);\r\n            dispatch(toogleAuth(\"LOGGEDIN\"));\r\n            window.location.href = '/';\r\n\r\n\r\n            return res;\r\n          })\r\n          .catch(async (err) => {\r\n            await checkUser(toastId);\r\n            console.log(err);\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n        await checkUser(toastId);\r\n      }\r\n    });\r\n  };\r\n\r\n  const checkUser = async (toastId) => {\r\n\r\n    await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n      const LoadUserExist = await Utils.contract.users(id).call();\r\n      const userexist = await Promise.resolve(LoadUserExist);\r\n      if (userexist.isExist == true) {\r\n        toast.remove(toastId);\r\n        toast.success(\"Transaction done successfully\");\r\n        setLoader(false);\r\n        await FetchUserId(id);\r\n        dispatch(toogleAuth(\"LOGGEDIN\"));\r\n        window.location.href = \"/\";\r\n      } else {\r\n        // window.location.href = \"/register\";\r\n        dispatch(toogleAuth(\"LOGGEDOUT\"));\r\n\r\n        setLoader(false);\r\n        toast.remove(toastId);\r\n        toast.error(\"Transaction Failed\");\r\n      }\r\n\r\n      // console.log(userexist[0]);\r\n    });\r\n  };\r\n\r\n  const FetchUserId = async (userAddress) => {\r\n    const LoadUserId = await Utils.contract.users(userAddress).call();\r\n    const userId = await Promise.resolve(LoadUserId);\r\n    // alert(userId.id.toNumber(),\"hi\")\r\n    dispatch(toogleuserId(userId.id.toNumber()));\r\n  };\r\n\r\n  return (\r\n    <div className=\"Login-Main\">\r\n      <div className={\"Inside\"}>\r\n        <div className=\"Logo-Div\">\r\n          <img src={Logo} />\r\n        </div>\r\n\r\n        <div style={{ paddingInline: \"20px\", marginTop: \"45px\" }} className=\"Divider\">\r\n          Register\r\n        </div>\r\n        <div className=\"Inside-Form-Div\">\r\n          <Form onSubmit={(e) => HandleSubmit(e)}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Control\r\n                name=\"email\"\r\n                className=\"Input\"\r\n                placeholder=\"Enter Referal Id of Upline (Optional)\"\r\n                value={refId}\r\n                onChange={(e) => {\r\n                  setrefId(e.target.value);\r\n                }}\r\n                required={false}\r\n              />\r\n            </Form.Group>\r\n\r\n            <div className=\"Button-Div\">\r\n              <button\r\n                onClick={CONNECT_WALLET}\r\n                disabled={Loader}\r\n                style={{ opacity: Loader ? 0.5 : 1 }}\r\n                className=\"Button\"\r\n              >\r\n                {Loader ? (\r\n                  <p>Transction Loading...</p>\r\n                ) : (\r\n                  <p>Purchase Level 1 for 200TRX</p>\r\n                )}\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"Back-Button-Div\">\r\n              <Link to={\"/\"} style={{ textDecoration: \"none\" }}>\r\n                <button className=\"Back-Button\">Back</button>\r\n              </Link>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport \"../App.css\";\nimport Login from \"../Components/Login/Login\";\nimport { getAuth } from \"../Components/Redux/Reducer/AuthReducer\";\nimport Register from \"../Components/Register/Register\";\nimport { Toaster } from \"react-hot-toast\";\n\nfunction Auth() {\n  const authStatus = useSelector(getAuth);\n\n\n  useEffect(() => {\n    if (authStatus == \"LOGGEDOUT\") {\n      if(window.location.pathname.split(\"/\")[1] != \"register\"){\n        if (window.location.pathname != \"/\") {\n          window.location.href = \"/\";\n        }\n      }\n  \n    }\n  }, [authStatus]);\n\n  return (\n    <div>\n            <Toaster/>\n\n      <Route component={Login} exact path=\"/\" />\n      <Route component={Register} path=\"/register\" />\n\n    </div>\n  );\n}\n\nexport default Auth;\n","export default __webpack_public_path__ + \"static/media/logo.fba3736c.png\";","import { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'menu',\n  initialState: {\n    value: false,\n  },\n  reducers: {\n    toogleMenu: (state, action) => {\n      state.value =  action.payload;;\n    },\n  },\n});\n\nexport const { toogleMenu } = slice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const incrementAsync = amount => dispatch => {\n  setTimeout(() => {\n    // dispatch(incrementByAmount(amount));\n  }, 1000);\n};\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const getTooglemenu = state => state.menu.value;\n\nexport default slice.reducer;\n","export default __webpack_public_path__ + \"static/media/success.faee9f17.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport \"./Topbar.css\";\r\nimport logo from \"./logo.png\";\r\nimport { RiProfileLine } from \"react-icons/ri\";\r\nimport { BsFillSuitDiamondFill } from \"react-icons/bs\";\r\nimport britain from \"./britain.png\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toogleMenu, getTooglemenu } from \"../Redux/Reducer/MenuReducer\";\r\nimport { getPreviewModeId } from \"../Redux/Reducer/PreviewMode\";\r\nimport { getuserId } from \"../Redux/Reducer/UserId\";\r\nimport successIcon from \"../../Assets/success.svg\"\r\nfunction Topbar(opensidebar, opened) {\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  const previewId = useSelector(getPreviewModeId);\r\n  const userID = useSelector(getuserId);\r\n\r\n  let walletId = previewId || window.tronLink.tronWeb.defaultAddress.base58;\r\n\r\n  const menu = useSelector(getTooglemenu);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"topbar\">\r\n      <div className=\"topbarcontainer\">\r\n        {/* <div className=\"leftcontent\">\r\n                        <img src={logo} alt=\"logo\" className=\"logo\"></img>\r\n                </div> */}\r\n\r\n        {width <= 860 && (\r\n          <div className=\"div0\">\r\n            <div onClick={() => dispatch(toogleMenu(!menu))} className=\"menu\">\r\n              <img src=\"https://img.icons8.com/material-outlined/48/000000/menu--v1.png\" />{\" \"}\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"div1\">\r\n          <div className=\"contentDiv\">\r\n            <span className=\"address\">Id : {userID}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"div2\">\r\n          <div style={{ marginLeft: \"-12.5%\" }} className=\"contentDiv\">\r\n            <span style={{marginRight:\"5px\"}}>\r\n              <div\r\n                style={{ overflow: \"hidden\", width: 30, height: 30 }}\r\n                className=\"LanguageDiv\"\r\n              >\r\n                <img\r\n                  alt=\"\"\r\n                  width=\"25\"\r\n                  height=\"25\"\r\n                  src={successIcon}\r\n                />\r\n              </div>\r\n            </span>\r\n            <span className=\"address\">\r\n              Address:{\" \"}\r\n              <a\r\n                target=\"_blank\"\r\n                href={`https://tronscan.org/#/address/${walletId}`}\r\n              >\r\n                {walletId}\r\n              </a>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n       \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Topbar;\r\n","var _path, _g, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 190,\n    height: 21,\n    viewBox: \"0 0 190 21\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask0_35_12808\",\n    style: {\n      maskType: \"luminance\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 0,\n    y: 0,\n    width: 30,\n    height: 21\n  }, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30 0.0078125H0V20.0078H30V0.0078125Z\",\n    fill: \"white\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask0_35_12808)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.3333 6.84131L29.25 19.508H13.4167L21.3333 6.84131Z\",\n    fill: \"#CBCAFE\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.3297 8.0354L12.625 0.507812L0.75 19.5078H10.1595L17.3297 8.0354Z\",\n    fill: \"#5765F7\"\n  }))), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.977 18.0077V5.55474H36.21V2.88775H48.6V5.55474H43.833V18.0077H40.977ZM53.4374 18.0077V2.88775H59.8214C59.9684 2.88775 60.1644 2.89475 60.4094 2.90875C60.6614 2.91575 60.8854 2.93675 61.0814 2.97175C61.9844 3.11174 62.7229 3.40924 63.2969 3.86424C63.8779 4.31924 64.3049 4.89324 64.5779 5.58624C64.8509 6.27224 64.9874 7.03874 64.9874 7.88574C64.9874 9.15274 64.6724 10.2377 64.0424 11.1407C63.4124 12.0367 62.4254 12.5897 61.0814 12.7997L59.8214 12.8837H56.2934V18.0077H53.4374ZM61.9634 18.0077L58.9814 11.8547L61.9214 11.2877L65.1974 18.0077H61.9634ZM56.2934 10.2167H59.6954C59.8424 10.2167 60.0034 10.2097 60.1784 10.1957C60.3534 10.1817 60.5144 10.1537 60.6614 10.1117C61.0464 10.0067 61.3439 9.83174 61.5539 9.58674C61.7639 9.33474 61.9074 9.05824 61.9844 8.75724C62.0684 8.44924 62.1104 8.15874 62.1104 7.88574C62.1104 7.61274 62.0684 7.32574 61.9844 7.02474C61.9074 6.71674 61.7639 6.44024 61.5539 6.19524C61.3439 5.94324 61.0464 5.76474 60.6614 5.65974C60.5144 5.61774 60.3534 5.58974 60.1784 5.57574C60.0034 5.56174 59.8424 5.55474 59.6954 5.55474H56.2934V10.2167ZM77.1447 18.3227C75.6327 18.3227 74.3272 17.9937 73.2282 17.3357C72.1362 16.6777 71.2927 15.7572 70.6977 14.5742C70.1097 13.3912 69.8157 12.0157 69.8157 10.4477C69.8157 8.87974 70.1097 7.50424 70.6977 6.32124C71.2927 5.13824 72.1362 4.21774 73.2282 3.55974C74.3272 2.90175 75.6327 2.57275 77.1447 2.57275C78.6567 2.57275 79.9587 2.90175 81.0507 3.55974C82.1497 4.21774 82.9932 5.13824 83.5812 6.32124C84.1762 7.50424 84.4737 8.87974 84.4737 10.4477C84.4737 12.0157 84.1762 13.3912 83.5812 14.5742C82.9932 15.7572 82.1497 16.6777 81.0507 17.3357C79.9587 17.9937 78.6567 18.3227 77.1447 18.3227ZM77.1447 15.6347C78.1037 15.6487 78.9017 15.4422 79.5387 15.0152C80.1757 14.5882 80.6517 13.9827 80.9667 13.1987C81.2887 12.4147 81.4497 11.4977 81.4497 10.4477C81.4497 9.39774 81.2887 8.48774 80.9667 7.71774C80.6517 6.94774 80.1757 6.34924 79.5387 5.92224C78.9017 5.49524 78.1037 5.27474 77.1447 5.26074C76.1857 5.24674 75.3877 5.45324 74.7507 5.88024C74.1137 6.30724 73.6342 6.91274 73.3122 7.69674C72.9972 8.48074 72.8397 9.39774 72.8397 10.4477C72.8397 11.4977 72.9972 12.4077 73.3122 13.1777C73.6342 13.9477 74.1137 14.5462 74.7507 14.9732C75.3877 15.4002 76.1857 15.6207 77.1447 15.6347ZM89.7198 18.0077V2.88775H92.6178L99.1908 12.9677V2.88775H102.089V18.0077H99.1908L92.6178 7.92774V18.0077H89.7198ZM113.881 18.3227C112.761 18.3227 111.749 18.1267 110.846 17.7347C109.95 17.3357 109.212 16.7687 108.631 16.0337C108.057 15.2917 107.693 14.4097 107.539 13.3877L110.521 12.9467C110.731 13.8147 111.165 14.4832 111.823 14.9522C112.481 15.4212 113.23 15.6557 114.07 15.6557C114.539 15.6557 114.994 15.5822 115.435 15.4352C115.876 15.2882 116.236 15.0712 116.516 14.7842C116.803 14.4972 116.947 14.1437 116.947 13.7237C116.947 13.5697 116.922 13.4227 116.873 13.2827C116.831 13.1357 116.758 12.9992 116.653 12.8732C116.548 12.7472 116.397 12.6282 116.201 12.5162C116.012 12.4042 115.771 12.3027 115.477 12.2117L111.55 11.0567C111.256 10.9727 110.913 10.8537 110.521 10.6997C110.136 10.5457 109.761 10.3252 109.397 10.0382C109.033 9.75124 108.729 9.37324 108.484 8.90424C108.246 8.42824 108.127 7.82974 108.127 7.10874C108.127 6.09374 108.382 5.25024 108.893 4.57824C109.404 3.90624 110.087 3.40574 110.941 3.07674C111.795 2.74775 112.74 2.58675 113.776 2.59375C114.819 2.60775 115.75 2.78625 116.569 3.12924C117.388 3.47224 118.074 3.97274 118.627 4.63074C119.18 5.28174 119.579 6.07974 119.824 7.02474L116.737 7.54974C116.625 7.05974 116.418 6.64674 116.117 6.31074C115.816 5.97474 115.456 5.71924 115.036 5.54424C114.623 5.36924 114.189 5.27474 113.734 5.26074C113.286 5.24674 112.862 5.30974 112.463 5.44974C112.071 5.58274 111.749 5.77874 111.497 6.03774C111.252 6.29674 111.13 6.60474 111.13 6.96174C111.13 7.29074 111.231 7.56024 111.434 7.77024C111.637 7.97324 111.893 8.13774 112.201 8.26374C112.509 8.38974 112.824 8.49474 113.146 8.57874L115.771 9.29274C116.163 9.39774 116.597 9.53774 117.073 9.71274C117.549 9.88074 118.004 10.1187 118.438 10.4267C118.879 10.7277 119.239 11.1267 119.519 11.6237C119.806 12.1207 119.95 12.7507 119.95 13.5137C119.95 14.3257 119.778 15.0362 119.435 15.6452C119.099 16.2472 118.644 16.7477 118.07 17.1467C117.496 17.5387 116.845 17.8327 116.117 18.0287C115.396 18.2247 114.651 18.3227 113.881 18.3227ZM125.408 18.0077V2.88775H131.792C131.939 2.88775 132.135 2.89475 132.38 2.90875C132.632 2.91575 132.856 2.93675 133.052 2.97175C133.955 3.11174 134.693 3.40924 135.267 3.86424C135.848 4.31924 136.275 4.89324 136.548 5.58624C136.821 6.27224 136.958 7.03874 136.958 7.88574C136.958 8.73274 136.818 9.50274 136.538 10.1957C136.265 10.8817 135.838 11.4522 135.257 11.9072C134.683 12.3622 133.948 12.6597 133.052 12.7997C132.856 12.8277 132.632 12.8487 132.38 12.8627C132.128 12.8767 131.932 12.8837 131.792 12.8837H128.264V18.0077H125.408ZM128.264 10.2167H131.666C131.813 10.2167 131.974 10.2097 132.149 10.1957C132.324 10.1817 132.485 10.1537 132.632 10.1117C133.017 10.0067 133.314 9.83174 133.524 9.58674C133.734 9.33474 133.878 9.05824 133.955 8.75724C134.039 8.44924 134.081 8.15874 134.081 7.88574C134.081 7.61274 134.039 7.32574 133.955 7.02474C133.878 6.71674 133.734 6.44024 133.524 6.19524C133.314 5.94324 133.017 5.76474 132.632 5.65974C132.485 5.61774 132.324 5.58974 132.149 5.57574C131.974 5.56174 131.813 5.55474 131.666 5.55474H128.264V10.2167ZM148.705 18.3227C147.193 18.3227 145.887 17.9937 144.788 17.3357C143.696 16.6777 142.853 15.7572 142.258 14.5742C141.67 13.3912 141.376 12.0157 141.376 10.4477C141.376 8.87974 141.67 7.50424 142.258 6.32124C142.853 5.13824 143.696 4.21774 144.788 3.55974C145.887 2.90175 147.193 2.57275 148.705 2.57275C150.217 2.57275 151.519 2.90175 152.611 3.55974C153.71 4.21774 154.553 5.13824 155.141 6.32124C155.736 7.50424 156.034 8.87974 156.034 10.4477C156.034 12.0157 155.736 13.3912 155.141 14.5742C154.553 15.7572 153.71 16.6777 152.611 17.3357C151.519 17.9937 150.217 18.3227 148.705 18.3227ZM148.705 15.6347C149.664 15.6487 150.462 15.4422 151.099 15.0152C151.736 14.5882 152.212 13.9827 152.527 13.1987C152.849 12.4147 153.01 11.4977 153.01 10.4477C153.01 9.39774 152.849 8.48774 152.527 7.71774C152.212 6.94774 151.736 6.34924 151.099 5.92224C150.462 5.49524 149.664 5.27474 148.705 5.26074C147.746 5.24674 146.948 5.45324 146.311 5.88024C145.674 6.30724 145.194 6.91274 144.872 7.69674C144.557 8.48074 144.4 9.39774 144.4 10.4477C144.4 11.4977 144.557 12.4077 144.872 13.1777C145.194 13.9477 145.674 14.5462 146.311 14.9732C146.948 15.4002 147.746 15.6207 148.705 15.6347ZM161.28 18.0077V2.88775H167.664C167.811 2.88775 168.007 2.89475 168.252 2.90875C168.504 2.91575 168.728 2.93675 168.924 2.97175C169.827 3.11174 170.565 3.40924 171.139 3.86424C171.72 4.31924 172.147 4.89324 172.42 5.58624C172.693 6.27224 172.83 7.03874 172.83 7.88574C172.83 9.15274 172.515 10.2377 171.885 11.1407C171.255 12.0367 170.268 12.5897 168.924 12.7997L167.664 12.8837H164.136V18.0077H161.28ZM169.806 18.0077L166.824 11.8547L169.764 11.2877L173.04 18.0077H169.806ZM164.136 10.2167H167.538C167.685 10.2167 167.846 10.2097 168.021 10.1957C168.196 10.1817 168.357 10.1537 168.504 10.1117C168.889 10.0067 169.186 9.83174 169.396 9.58674C169.606 9.33474 169.75 9.05824 169.827 8.75724C169.911 8.44924 169.953 8.15874 169.953 7.88574C169.953 7.61274 169.911 7.32574 169.827 7.02474C169.75 6.71674 169.606 6.44024 169.396 6.19524C169.186 5.94324 168.889 5.76474 168.504 5.65974C168.357 5.61774 168.196 5.58974 168.021 5.57574C167.846 5.56174 167.685 5.55474 167.538 5.55474H164.136V10.2167ZM182.005 18.0077V5.55474H177.238V2.88775H189.628V5.55474H184.861V18.0077H182.005Z\",\n    fill: \"#404040\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.6921a8ce.svg\";\nexport { ForwardRef as ReactComponent };","export default __webpack_public_path__ + \"static/media/wallet.dd37420f.svg\";","export default __webpack_public_path__ + \"static/media/wallet-dark.124e3d39.svg\";","export default __webpack_public_path__ + \"static/media/tree.171ad79c.svg\";","export default __webpack_public_path__ + \"static/media/tree-dark.1c622895.svg\";","export default __webpack_public_path__ + \"static/media/upline.213d8f43.svg\";","export default __webpack_public_path__ + \"static/media/upline-dark.abcb06a7.svg\";","export default __webpack_public_path__ + \"static/media/burn.f12a3152.svg\";","export default __webpack_public_path__ + \"static/media/burn-dark.71b8150a.svg\";","import React from \"react\";\r\nimport \"./Sidenavbar.css\";\r\nimport { FaUserCircle } from \"react-icons/fa\";\r\nimport { AiFillMessage } from \"react-icons/ai\";\r\nimport { FaNetworkWired } from \"react-icons/fa\";\r\nimport { FaUsers } from \"react-icons/fa\";\r\nimport { FaSearchDollar } from \"react-icons/fa\";\r\nimport { IoIosSend } from \"react-icons/io\";\r\nimport { BsBoxArrowRight } from \"react-icons/bs\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { toogleAuth } from \"../Redux/Reducer/AuthReducer\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { ReactComponent as Logo } from \"../../Assets/logo.svg\";\r\nimport WalletIcon from \"../../Assets/wallet.svg\";\r\nimport WalletIconDark from \"../../Assets/wallet-dark.svg\";\r\nimport TreeIcon from \"../../Assets/tree.svg\";\r\nimport TreeIconDark from \"../../Assets/tree-dark.svg\";\r\nimport UplineIcon from \"../../Assets/upline.svg\";\r\nimport UplineIconDark from \"../../Assets/upline-dark.svg\";\r\nimport BurnIcon from \"../../Assets/burn.svg\";\r\nimport BurnIconDark from \"../../Assets/burn-dark.svg\";\r\n\r\n\r\nfunction Sidenavbar() {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const PATHNAME = () => location?.pathname?.toLowerCase();\r\n\r\n  const VALIDROUTE = (path) => (PATHNAME(path) == path ? true : false);\r\n\r\n  const Logout = () => {\r\n    window.tronLink.tronWeb = false;\r\n    dispatch(toogleAuth(\"LOGGEDOUT\"));\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidenav\">\r\n      <div className=\"sidebarcontainer\">\r\n        <div className=\"menu\">\r\n          <div className=\"logodiv\">\r\n            <Logo className=\"logoimg\" />\r\n          </div>\r\n\r\n          <ul className=\"sidebarlist\">\r\n            <Link\r\n              className={VALIDROUTE(\"/\") ? \"Link-Active\" : \"Link\"}\r\n              to=\"/\"\r\n              style={{\r\n                width: \"240px !important\",\r\n                textDecoration: \"none\",\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <li\r\n                style={{ color: VALIDROUTE(\"/\") ? \"white\" : null }}\r\n                className=\"sidebaritems\"\r\n              >\r\n                <span className=\"icon\">\r\n                  {!VALIDROUTE(\"/\") ? (\r\n                    <img\r\n                      src={WalletIconDark}\r\n                      width=\"32\"\r\n                      alt=\"\"\r\n                      class=\"sidemenu_button_icon\"\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      src={WalletIcon}\r\n                      width=\"32\"\r\n                      alt=\"\"\r\n                      class=\"sidemenu_button_icon\"\r\n                    />\r\n                  )}\r\n                </span>\r\n                Dashboard\r\n              </li>\r\n            </Link>\r\n\r\n            <Link\r\n              className={VALIDROUTE(\"/partners\") ? \"Link-Active\" : \"Link\"}\r\n              to=\"/Partners\"\r\n              style={{\r\n                width: \"240px !important\",\r\n                textDecoration: \"none\",\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <li\r\n                style={{ color: VALIDROUTE(\"/partners\") ? \"white\" : null }}\r\n                className=\"sidebaritems\"\r\n              >\r\n                <span className=\"icon\">\r\n                  {!VALIDROUTE(\"/partners\") ? (\r\n                    <img src={TreeIconDark} width=\"32\" />\r\n                  ) : (\r\n                    <img src={TreeIcon} width=\"32\" />\r\n                  )}\r\n                </span>\r\n                Partners\r\n              </li>\r\n            </Link>\r\n            <Link\r\n              className={VALIDROUTE(\"/uplines\") ? \"Link-Active\" : \"Link\"}\r\n              to=\"/Uplines\"\r\n              style={{\r\n                width: \"240px !important\",\r\n                textDecoration: \"none\",\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <li\r\n                style={{ color: VALIDROUTE(\"/uplines\") ? \"white\" : null }}\r\n                className=\"sidebaritems\"\r\n              >\r\n                <span className=\"icon\">\r\n                  {!VALIDROUTE(\"/uplines\") ? (\r\n                    <img src={UplineIconDark} width=\"32\" />\r\n                  ) : (\r\n                    <img src={UplineIcon} width=\"32\" />\r\n                  )}\r\n                </span>\r\n                Uplines\r\n              </li>\r\n            </Link>\r\n            <Link\r\n              className={VALIDROUTE(\"/lostprofits\") ? \"Link-Active\" : \"Link\"}\r\n              to=\"/Lostprofits\"\r\n              style={{\r\n                width: \"240px !important\",\r\n                textDecoration: \"none\",\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <li\r\n                style={{ color: VALIDROUTE(\"/lostprofits\") ? \"white\" : null }}\r\n                className=\"sidebaritems\"\r\n              >\r\n                <span className=\"icon\">\r\n                  {!VALIDROUTE(\"/lostprofits\") ? (\r\n                    <img style={{marginLeft:\"3px\"}} width=\"22\" src={BurnIconDark} />\r\n                  ) : (\r\n                    <img style={{marginLeft:\"3px\"}} width=\"22\" src={BurnIcon} />\r\n                  )}\r\n                </span>\r\n                Lost profits\r\n              </li>\r\n            </Link>\r\n            {/* <li\r\n              style={{ color: VALIDROUTE(\"/promo\") ? \"white\" : null }}\r\n              className=\"sidebaritems\"\r\n            >\r\n              <span className=\"icon\">\r\n                <IoIosSend size={24} />\r\n              </span>\r\n              promo\r\n            </li> */}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <Link\r\n        onClick={Logout}\r\n        className={\"Link\"}\r\n        to=\"/\"\r\n        style={{\r\n          width: \"240px !important\",\r\n          textDecoration: \"none\",\r\n          color: \"black\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <li className=\"sidebaritems logoutItem\">Logout</li>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\nexport default Sidenavbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst lineOptions = {\r\n  plugins: {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    gridLines: {\r\n      display: false,\r\n    },\r\n  },\r\n  scales: {\r\n    x: {\r\n      grid: {\r\n        display: false,\r\n      },\r\n    },\r\n    y: {\r\n      grid: {\r\n        display: false,\r\n      },\r\n      ticks: {\r\n        precision:0\r\n      }\r\n      \r\n    },\r\n  \r\n  },\r\n  legend: {\r\n    display: false,\r\n  },\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n  },\r\n  hover: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n  },\r\n};\r\n\r\nconst styles = {\r\n  fontFamily: \"sans-serif\",\r\n  textAlign: \"center\",\r\n  display:\"flex\",\r\n  justifyContent:\"center\",\r\n  alignItem:\"center\"\r\n};\r\n\r\nconst Chart = ({ data }) => {\r\n  let chartData = {\r\n    labels: data?.labels,\r\n    datasets: [\r\n      {\r\n        fill: false,\r\n        lineTension: 0.2,\r\n        // backgroundColor: \"rgba(75,192,192,0.4)\",\r\n        borderColor: \"#51D794\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#51D794\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"#51D794\",\r\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: data?.data,\r\n        fill: \"start\",\r\n        backgroundColor: \"#51D79414\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [newData, setnewData] = useState(chartData);\r\n\r\n  useEffect(() => {\r\n    chartData.labels = data.labels;\r\n    chartData.datasets[0].data = data.data;\r\n    setnewData(chartData);\r\n  }, [data]);\r\n\r\n  return (\r\n    <div style={styles}>\r\n      <Line width={900} height={300} data={newData} options={lineOptions} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","export default __webpack_public_path__ + \"static/media/pocket1.7477cf2e.svg\";","export default __webpack_public_path__ + \"static/media/pocket2.ec5c2a99.svg\";","export default __webpack_public_path__ + \"static/media/pocket3.31b85285.svg\";","export default __webpack_public_path__ + \"static/media/pocket4.7d78554e.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport \"./Controlpanel.css\";\r\nimport Chart from \"./Chart\";\r\nimport Slidecontent from \"./Slidecontent\";\r\nimport Chart2 from \"./chart2\";\r\nimport { AiFillBell, AiFillFileExclamation } from \"react-icons/ai\";\r\nimport ScrollToTop from \"../../Tools/ScrollToTop\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\nimport Utils from \"../../Utils/index\";\r\nimport { Hex_to_base58 } from \"../../Utils/Converter\";\r\nimport TronWeb from \"tronweb\";\r\nimport CountUp from \"react-countup\";\r\nimport moment from \"moment\";\r\nimport \"./Levels.css\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { getPreviewModeId } from \"../Redux/Reducer/PreviewMode\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nimport Pocket1Icon from \"../../Assets/pocket1.svg\";\r\nimport Pocket2Icon from \"../../Assets/pocket2.svg\";\r\nimport Pocket3Icon from \"../../Assets/pocket3.svg\";\r\nimport Pocket4Icon from \"../../Assets/pocket4.svg\";\r\n\r\nconst TEMP_ADDRESS = \"TJrQX9SeYDPKVy9eKEViWGqDL2wFGUBaNJ\";\r\n\r\n\r\n\r\nfunction Controlpanel() {\r\n  const { height, width } = useWindowDimensions();\r\n  const previewId = useSelector(getPreviewModeId);\r\n  let id = previewId || window.tronLink.tronWeb.defaultAddress.base58;\r\n\r\n  const [directPartners, setdirectPartners] = useState(0);\r\n  const [indirectPartners, setindirectPartners] = useState(0);\r\n\r\n  const [coinsCount, setcoinsCount] = useState(0);\r\n  const [coinPrice, setcoinPrice] = useState(0);\r\n  const [chartData, setchartData] = useState({ labels: [], data: [] });\r\n  const [currentLevel, setcurrentLevel] = useState(0);\r\n  const [expiredDate, setexpiredDate] = useState([]);\r\n\r\n  const [FOUNDATION_ADDRESS, setFOUNDATION_ADDRESS] = useState(TEMP_ADDRESS);\r\n  const [LoadingLevels, setLoadingLevels] = useState(true);\r\n  const LEVEL_PRICE = [200, 1000, 5000];\r\n\r\n  let Total = 0;\r\n\r\n  let partners = [];\r\n\r\n  const [tronWeb, settronWeb] = useState({ installed: false, loggedIn: false });\r\n\r\n  useEffect(() => {\r\n    CONNECT_WALLET();\r\n    FetchCoinCurrecy();\r\n  }, []);\r\n\r\n  const FetchCoinCurrecy = async () => {\r\n    try {\r\n      fetch(\r\n        `https://api.coingecko.com/api/v3/simple/price?ids=tron&vs_currencies=usd&include_market_cap=true`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setcoinPrice(data?.tron?.usd);\r\n        });\r\n    } catch (error) {\r\n      // alert(\"ERROR\")\r\n    }\r\n  };\r\n\r\n  const ProccessRefralGraphData = async (data) => {\r\n    let labels = [];\r\n    let graphData = [];\r\n    let Temp = {};\r\n\r\n    for await (const address of data) {\r\n      const joinedData = await Utils.contract.users(address).call();\r\n      // console.log(joinedData);\r\n\r\n      let joined = await Promise.resolve(joinedData.joined.toNumber());\r\n\r\n      joined = moment.unix(joined).format(\"DD/MM/YYYY\");\r\n      if (Temp[`${joined}`] != undefined) {\r\n        Temp[`${joined}`] = Temp[`${joined}`] + 1;\r\n      } else {\r\n        Temp[`${joined}`] = 1;\r\n      }\r\n    }\r\n\r\n    let SortedObject = Object.fromEntries(\r\n      Object.entries(Temp).sort(function (a, b) {\r\n        var aa = a[0].split(\"/\").reverse().join(),\r\n          bb = b[0].split(\"/\").reverse().join();\r\n        return aa < bb ? -1 : aa > bb ? 1 : 0;\r\n      })\r\n    );\r\n\r\n    for await (const [key, value] of Object.entries(SortedObject)) {\r\n      labels.push(key);\r\n      graphData.push(value);\r\n    }\r\n\r\n    let resData = {\r\n      labels: labels,\r\n      data: graphData,\r\n    };\r\n\r\n    console.log(labels, graphData);\r\n\r\n    return resData;\r\n  };\r\n\r\n  const FetchData = async () => {\r\n    try {\r\n      Promise.all([Utils.contract.users(id).call(), FetchLevel(id)]).then(\r\n        async (values) => {\r\n          let userData = values[0];\r\n          let earning = userData.earning.toNumber() / 1000000;\r\n          let directReferralCount =\r\n            userData?.directReferralCount?.toNumber() || 0;\r\n          let indirectReferralCount =\r\n            userData?.indirectReferralCount?.toNumber() || 0;\r\n\r\n          let indirectReferralLength =\r\n            userData?.indirectReferralLength?.toNumber() || 0;\r\n\r\n\r\n          setcoinsCount(earning);\r\n          setdirectPartners(directReferralCount);\r\n          setindirectPartners(indirectReferralCount);\r\n          setLoadingLevels(false);\r\n\r\n          await GetChartData(id, indirectReferralLength);\r\n        }\r\n      );\r\n    } catch (e) {\r\n      // console.log(e);\r\n      setLoadingLevels(false);\r\n    }\r\n  };\r\n\r\n  const GetChartData = (id, indirectCount) => {\r\n\r\n    Promise.all([Utils.contract.viewUserReferral(id).call(), indirectPartnersFetch(indirectCount)]).then(async([directPartners, indirectPartners]) => {\r\n      let items = [...directPartners, ...indirectPartners];\r\n      let newArray = [];\r\n      for await (let item of items) {\r\n        let x = await Hex_to_base58(item);\r\n        newArray.push(x);\r\n      }\r\n      await ProccessRefralGraphData(newArray).then(async (res) => {\r\n        setchartData(res);\r\n      });\r\n    })\r\n\r\n\r\n  };\r\n\r\n  const indirectPartnersFetch = async (indirectCount) => {\r\n    let indirectPartnersList = [];\r\n\r\n    var TempindirectPartnersList = Array.from(Array(indirectCount), (_, index) => index);\r\n\r\n    for await (let index of TempindirectPartnersList) {\r\n      let partnerAddress = await Utils.contract\r\n        .viewUserIndirectReferral(id, index)\r\n        .call();\r\n      // console.log(partnerAddress);\r\n      indirectPartnersList.push(partnerAddress);\r\n    }\r\n\r\n    return indirectPartnersList\r\n  }\r\n\r\n\r\n\r\n\r\n  const FetchLevel = async (id) => {\r\n\r\n    // UTILITY FUNCTION\r\n    const convert = (x, canActivate, canExtend) => {\r\n      let data = { active: false, expires: 0, canActivate: canActivate, canExtend: canExtend }\r\n\r\n      if (x == 0) {\r\n        return data\r\n      }\r\n\r\n      data.expires = Math.round(\r\n        (new Date(x * 1000).getTime() -\r\n          new Date(Date.now()).getTime()) /\r\n        (1000 * 60 * 60 * 24),\r\n        0\r\n      )\r\n\r\n      if (new Date(x * 1000).getTime() <= new Date(Date.now()).getTime()) {\r\n        data.active = false\r\n      } else {\r\n        data.active = true\r\n      }\r\n      return data\r\n    }\r\n\r\n    Promise.all([Utils.contract.getUserCurrentLevel(id).call(), Utils.contract.getUserLevelsData(id).call()]).then(([currentLevel, levelsData]) => {\r\n      setcurrentLevel(currentLevel.toNumber() || 0)\r\n      let [level1, level2, level3, canActivate2, canActivate3, canExtend3] = levelsData;\r\n      setLevelsData([convert(level1.toNumber(), true, true), convert(level2.toNumber(), canActivate2, canActivate2), convert(level3.toNumber(), canActivate3, canExtend3)]);\r\n    })\r\n  };\r\n\r\n  const getcurrentLevel = async (address) => {\r\n    let currentLevel = 0;\r\n    for await (const level of Array.from({ length: 3 }, (_, i) => i + 1)) {\r\n      const checkLevel = await Utils.contract\r\n        .viewUserLevelExpired(address, level)\r\n        .call();\r\n      const currentTimestamp = await Promise.resolve(checkLevel);\r\n\r\n      if (\r\n        currentTimestamp.toNumber() * 1000 > Date.now() &&\r\n        currentTimestamp.toNumber() * 1000 != 0\r\n      ) {\r\n        ++currentLevel;\r\n      }\r\n    }\r\n    setcurrentLevel(currentLevel);\r\n    return currentLevel;\r\n  };\r\n\r\n\r\n\r\n  const ConverttoHexArray = async (items) => {\r\n    let temp = [];\r\n    for await (const i of items) {\r\n      let t = await Hex_to_base58(i);\r\n      temp.push(t);\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  const CONNECT_WALLET = async () => {\r\n    try {\r\n\r\n      new Promise((resolve) => {\r\n        const tronWebState = {\r\n          installed: !!window.tronWeb,\r\n          loggedIn: window.tronWeb && window.tronWeb.ready,\r\n        };\r\n\r\n        if (tronWebState.installed) {\r\n          settronWeb(tronWebState);\r\n\r\n          return resolve();\r\n        }\r\n\r\n        let tries = 0;\r\n\r\n        const timer = setInterval(() => {\r\n          if (tries >= 10) {\r\n            const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n            window.tronWeb = new TronWeb(\r\n              TRONGRID_API,\r\n              TRONGRID_API,\r\n              TRONGRID_API\r\n            );\r\n\r\n            settronWeb({\r\n              installed: false,\r\n              loggedIn: false,\r\n            });\r\n\r\n            clearInterval(timer);\r\n            return resolve();\r\n          }\r\n\r\n          tronWebState.installed = !!window.tronWeb;\r\n          tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n          if (!tronWebState.installed) return tries++;\r\n\r\n          settronWeb(tronWebState);\r\n\r\n          resolve();\r\n        }, 100);\r\n      });\r\n\r\n      window.tronWeb.on(\"addressChanged\", (e) => {\r\n        if (tronWeb.loggedIn) return;\r\n\r\n        settronWeb({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true,\r\n          },\r\n        });\r\n      });\r\n\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb?.address?.toHex(id),\r\n        base58: id,\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChanged\", (e) => {\r\n        if (tronWeb.loggedIn) return;\r\n\r\n        settronWeb({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true,\r\n          },\r\n        });\r\n      });\r\n\r\n      await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n        try {\r\n          await FetchData();\r\n        } catch (error) {\r\n          // console.log(error);\r\n        }\r\n      });\r\n    } catch (e) {\r\n      CONNECT_WALLET();\r\n      // console.log(e);\r\n    }\r\n  };\r\n\r\n  const [LevelsData, setLevelsData] = useState([{ expires: 0, active: false, canActivate: false, canExtend: false }]);\r\n\r\n\r\n  const checkCriteria = (level) => {\r\n    var isActive = LevelsData[level - 1]?.active\r\n    var isExtendable = LevelsData[level - 1]?.canExtend\r\n    var canActivate = LevelsData[level - 1]?.canActivate\r\n\r\n    // if(!canActivate)\r\n\r\n\r\n\r\n    if (level == 2) {\r\n      if (isActive) {\r\n        if (!isExtendable) {\r\n          toast.error(\r\n            `Level 2 can be only Extended:- \\n 1) After 40 days of Purchase of Level 1 \\n 2) Minimum 5 Direct Referals \\n 3) Previous Levels must be Active`,\r\n            { position: \"bottom-center\" }\r\n          );\r\n          return false\r\n        }\r\n      } else {\r\n        if (!canActivate) {\r\n          toast.error(\r\n            `Level 2 can be only Activated:- \\n 1) After 61 days of Purchase of Level 1 \\n 2) Minimum 5 Direct Referals \\n 3) Previous Levels must be Active`,\r\n            { position: \"bottom-center\" }\r\n          );\r\n          return false\r\n        }\r\n      }\r\n    } else if (level == 3) {\r\n      if (isActive) {\r\n        if (!isExtendable) {\r\n          toast.error(\r\n            `Level 3 can be only Extended:- \\n 1) Minimum 20 Direct Referals \\n 2) Previous Levels must be Active`,\r\n            { position: \"bottom-center\" }\r\n          );\r\n          return false\r\n        }\r\n      } else {\r\n        if (!canActivate) {\r\n          toast.error(\r\n            `Level 3 can be only Activated:- \\n 1) After 61 days of Purchase of Level 2 \\n 2) Minimum 10 Direct Referals \\n 3) Previous Levels must be Active`,\r\n            { position: \"bottom-center\" }\r\n          );\r\n          return false\r\n        }\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  const Buy = async (level) => {\r\n    if (previewId) { return }\r\n\r\n    let value = LEVEL_PRICE[level - 1];\r\n\r\n    if (!checkCriteria(level)) return\r\n\r\n    const buytoast = toast.loading(\r\n      \"Waiting for Transaction Confirmation!! Data will get updated automatically\",\r\n      { position: \"bottom-center\", style: { marginTop: \"80px\" } }\r\n    );\r\n    return await Utils.contract\r\n      .buyLevel(level)\r\n      .send({\r\n        feeLimit: 200_000_000,\r\n        callValue: 1000000 * value,\r\n        shouldPollResponse: true,\r\n      })\r\n      .then(async (res) => {\r\n\r\n        await FetchData();\r\n        toast.success(\r\n          `Transaction confirmed successfully!! Level ${level} bought successfully`,\r\n          { position: \"bottom-center\", style: { marginTop: \"80px\" } }\r\n        );\r\n        toast.remove(buytoast);\r\n      })\r\n      .catch(async (err) => {\r\n        if (err.error != \"Cannot find result in solidity node\") {\r\n          toast.remove(buytoast);\r\n\r\n          toast.error(`Transaction Failed!! Level ${level} purchase failed`, {\r\n            position: \"bottom-center\",\r\n            style: { marginTop: \"80px\" },\r\n          });\r\n        }\r\n\r\n        // Cannot find result in solidity node\r\n        // console.log(err);\r\n        await FetchData();\r\n        // console.log(err);\r\n        toast.remove(buytoast);\r\n\r\n        if (err.error == \"Cannot find result in solidity node\") {\r\n          toast.success(\r\n            `Transaction confirmed successfully!! Level ${level} bought successfully`,\r\n            { position: \"bottom-center\", style: { marginTop: \"80px\" } }\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  const FetchLevels = async (address) => {\r\n    let Temp = {};\r\n\r\n    for await (const level of Array.from({ length: 3 }, (_, i) => i + 1)) {\r\n      Temp[`${level}`] = null;\r\n\r\n      const checkLevel = await Utils.contract\r\n        .viewUserLevelExpired(address, level)\r\n        .call();\r\n      const currentTimestamp = await Promise.resolve(checkLevel);\r\n      // console.log(currentTimestamp.toNumber() * 1000, Date.now());\r\n      if (\r\n        Date.now() > currentTimestamp.toNumber() * 1000 &&\r\n        currentTimestamp.toNumber() * 1000 != 0\r\n      ) {\r\n        Temp[`${level}`] = {\r\n          expired: true,\r\n          expiredAgo:\r\n            (new Date(currentTimestamp.toNumber() * 1000).getTime() -\r\n              new Date(Date.now()).getTime()) /\r\n            (1000 * 60 * 60 * 24),\r\n          active: false,\r\n          disabled: level == 1 ? false : true,\r\n        };\r\n      } else if (\r\n        currentTimestamp.toNumber() * 1000 > Date.now() &&\r\n        currentTimestamp.toNumber() * 1000 != 0\r\n      ) {\r\n        Temp[`${level}`] = {\r\n          expired: false,\r\n          expiredAgo:\r\n            (new Date(currentTimestamp.toNumber() * 1000).getTime() -\r\n              new Date(Date.now()).getTime()) /\r\n            (1000 * 60 * 60 * 24),\r\n          active: true,\r\n          disabled: false,\r\n        };\r\n      } else {\r\n        Temp[`${level}`] = {\r\n          expired: false,\r\n          expiredAgo:\r\n            (new Date(currentTimestamp.toNumber() * 1000).getTime() -\r\n              new Date(Date.now()).getTime()) /\r\n            (1000 * 60 * 60 * 24),\r\n          active: false,\r\n          disabled: true,\r\n        };\r\n      }\r\n    }\r\n\r\n    let TempActive = 0;\r\n    for await (const i of Array.from({ length: 10 }, (_, i) => i + 1)) {\r\n      Temp[`${i}`].expiredAgo = Math.round(Temp[`${i}`].expiredAgo, 0);\r\n      if (Temp[`${i}`].active == true) {\r\n        TempActive = i + 1;\r\n        if (Temp[`${TempActive}`] != undefined) {\r\n          Temp[`${TempActive}`][\"disabled\"] = false;\r\n        }\r\n      }\r\n    }\r\n    Temp[`${1}`][\"disabled\"] = false;\r\n\r\n    //if User in preview mode\r\n    if (previewId != null) {\r\n      for await (const i of Array.from({ length: 10 }, (_, i) => i + 1)) {\r\n        Temp[`${i}`][\"disabled\"] = true;\r\n      }\r\n    }\r\n\r\n    // console.log(Temp);\r\n\r\n    return Temp;\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel\">\r\n      <div className=\"con\">\r\n        <Toaster />\r\n\r\n        <h1 className=\"header\">Office</h1>\r\n        <div className=\"control\">\r\n          <div className=\"CoverDiv\">\r\n            <div class=\"contentcard_tabs_active\">\r\n              <div class=\"contentcard_tabs_info\">\r\n                <img\r\n                  src={Pocket1Icon}\r\n                  width=\"45\"\r\n                  alt=\"\"\r\n                  class=\"contentcard_tabs_active_circle--green\"\r\n                />\r\n                <div class=\"contentcard_tabs_active_text_price\">\r\n                  <strong class=\"bold-text-2\">\r\n                    <CountUp\r\n                      duration={1}\r\n                      className=\"bold-text-2\"\r\n                      end={coinsCount}\r\n                    />{\" \"}\r\n                    TRX\r\n                  </strong>\r\n                </div>\r\n              </div>\r\n              <div class=\"contentcard_tabs_label\">Earned TRX</div>\r\n            </div>\r\n\r\n            <div class=\"contentcard_tabs_active\">\r\n              <div class=\"contentcard_tabs_info\">\r\n                <img\r\n                  src={Pocket2Icon}\r\n                  width=\"45\"\r\n                  alt=\"\"\r\n                  class=\"contentcard_tabs_active_circle--green\"\r\n                />\r\n                <div class=\"contentcard_tabs_active_text_price\">\r\n                  <strong class=\"bold-text-2 profit\">\r\n                    {\"$ \"}\r\n                    <CountUp\r\n                      decimals={6}\r\n                      duration={1}\r\n                      className=\"bold-text-2\"\r\n                      end={coinPrice * coinsCount}\r\n                    />\r\n                  </strong>\r\n                </div>\r\n              </div>\r\n              <div class=\"contentcard_tabs_label\">Earned Dollar</div>\r\n            </div>\r\n\r\n            <div class=\"contentcard_tabs_active\">\r\n              <div class=\"contentcard_tabs_info\">\r\n                <img\r\n                  src={Pocket3Icon}\r\n                  width=\"45\"\r\n                  alt=\"\"\r\n                  class=\"contentcard_tabs_active_circle--green\"\r\n                />\r\n                <div class=\"contentcard_tabs_active_text_price\">\r\n                  <strong class=\"bold-text-2\">\r\n                    {\" \"}\r\n                    <strong class=\"bold-text-2\">\r\n                      <CountUp\r\n                        duration={1}\r\n                        className=\"bold-text-2\"\r\n                        end={directPartners}\r\n                      />\r\n                      {\" / \"}\r\n                      <CountUp\r\n                        duration={1}\r\n                        className=\"bold-text-2\"\r\n                        end={indirectPartners}\r\n                      />\r\n                    </strong>\r\n                  </strong>\r\n                </div>\r\n              </div>\r\n              <div class=\"contentcard_tabs_label\">\r\n                Direct / Indirect Partners\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"contentcard_tabs_active\">\r\n              <div class=\"contentcard_tabs_info\">\r\n                <img\r\n                  src={Pocket4Icon}\r\n                  width=\"45\"\r\n                  alt=\"\"\r\n                  class=\"contentcard_tabs_active_circle--green\"\r\n                />\r\n                <div class=\"contentcard_tabs_active_text_price\">\r\n                  <strong class=\"bold-text-2\">\r\n                    <CountUp\r\n                      duration={1}\r\n                      className=\"bold-text-2\"\r\n                      end={currentLevel}\r\n                    />\r\n                  </strong>\r\n                </div>\r\n              </div>\r\n              <div class=\"contentcard_tabs_label\">Current Level</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {!LoadingLevels ? (\r\n          <div className=\"LowerContainer\">\r\n            <div className=\"ChartDiv\">\r\n              <h2>Referals</h2>\r\n              <Chart data={chartData} />\r\n            </div>\r\n\r\n\r\n            {LevelsData.map((data, index) => (\r\n              <div key={index} className=\"PurchaseWrapper\">\r\n                <h2>Level {index + 1}</h2>\r\n                {data?.expires == 0 ? <p style={{ color: \"#f65e72\" }} >Inactive</p> :\r\n                  data?.active ?\r\n                    <p>Active</p> : <p style={{ color: \"#f65e72\" }} >Expired</p>}\r\n\r\n                <div className=\"CostWrapper\">\r\n                  <h2>\r\n                    {LEVEL_PRICE[index]}\r\n                    TRX\r\n                  </h2>\r\n                  {\r\n                    data?.expires != 0 && (\r\n                      data?.expires >= 0 ? (\r\n                        <p>Validity : {data?.expires} days left</p>\r\n                      ) : (\r\n                        <p>Expired : {data?.expires} days ago</p>\r\n                      ))}\r\n                </div>\r\n                <div\r\n                  style={{ opacity: previewId && 0.5, cursor: previewId && \"not-allowed\" }}\r\n                  onClick={() => Buy(index + 1)}\r\n                  className={`Button ${data?.expires <= 0 ? \"ButtonRed\" : \"ButtonActivated\"\r\n                    }`}\r\n                >\r\n                  {/* Upgrade Now */}\r\n                  {data?.expires == 0\r\n                    ? `Activate Now`\r\n                    : data?.expires < 0\r\n                      ? `Reactivate Now`\r\n                      : `Extend Now`}\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n\r\n\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"40vh\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Spinner\r\n              variant=\"primary\"\r\n              size=\"200px\"\r\n              animation=\"border\"\r\n              role=\"status\"\r\n            >\r\n              <span style={{ color: \"black\" }} className=\"visually-hidden\">\r\n                Loading...\r\n              </span>\r\n            </Spinner>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <br />\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Controlpanel;\r\n","export default __webpack_public_path__ + \"static/media/message.bc71e445.jpg\";","import React from 'react'\r\nimport \"./Message.css\"\r\nimport { AiFillBell } from 'react-icons/ai'\r\nimport message from './message.jpg';\r\nfunction Message(){\r\n    return(\r\n        <div className=\"Msg\">\r\n            <div className=\"msg-head\">\r\n                <div className=\"mh1\">\r\n                    <br/>\r\n                    DARK MODE\r\n                </div>\r\n                <div className=\"mh2\">\r\n                    <br/>\r\n                    <span className=\"mnoti\">NOTIFICATION TELEGRAM</span>\r\n                    < AiFillBell/>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p className=\"mheading\">No authorization</p>\r\n            </div>\r\n            <div className=\"msgbox\">\r\n                <div className=\"boxhead\">\r\n                    <center><p className=\"headstyle\">In order to read your messages and be able to communicate with your partners and uplines, you must log in to your account through the “Auto Login” function.</p>\r\n                </center>\r\n                </div>\r\n                <div className=\"boxcontent\">\r\n                    <center><img src={message} className=\"msgimage\" alt=\"message\"></img>\r\n                    <p className=\"headstyle\">If you still have questions, you can ask other members in our <a target=\"_blank\"rel=\"noreferrer\" href=\"https://t.me/millionmoneychat\">Telegram Chat</a>.</p>\r\n                    </center>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Message;","import React, { useEffect, useState } from \"react\";\n\nconst Table = ({ data ,coinprice}) => {\n  console.log(data,\"HI\");\n  const [tableData, settableData] = useState(data);\n  const [coinPrice, setcoinPrice] = useState(coinprice);\n\n  useEffect(() => {\n    settableData(data);\n    setcoinPrice(coinprice)\n    console.log(coinPrice);\n  }, [data,coinPrice]);\n\n  return (\n    <div className=\"TableDivWrap\">\n      <div className=\"rec\">\n        <p className=\"linkname1\">Received</p>\n        <div className=\"search\">\n          <div className=\"inp\">\n            <input className=\"searchinp\" placeholder=\"Search\" />\n            <button className=\"copybtn\">Search</button>\n          </div>\n        </div>\n        <div className=\"recdiv\">\n          <table>\n            <tr>\n              <th style={{minWidth:\"50px\"}} >SNo</th>\n              <th style={{minWidth:\"380px\"}}>Received from ID</th>\n              <th style={{minWidth:\"220px\"}}>The amount of TRX</th>\n              <th style={{minWidth:\"80px\"}}>USD</th>\n            </tr>\n            {tableData.map((item, index) => (\n              <tr key={index} >\n                <td className=\"tbval\">{index + 1}</td>\n                <td className=\"tbval\">{item?.id}</td>\n                <td className=\"tbval\">{item?.coins}</td>\n                <td className=\"tbval\">{item?.coins*coinPrice.toFixed(4)}</td>\n              </tr>\n            ))}\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport \"./Tree.css\";\nconst baseTree = [\n  {\n    name: \"item1\",\n  },\n  {\n    name: \"item2\",\n    isOpen: true,\n    children: [\n      {\n        name: \"2-item1\",\n        isOpen: true,\n      },\n    ],\n  },\n  {\n    name: \"item3\",\n    isOpen: true,\n    children: [\n      {\n        name: \"3-item1\",\n      },\n      {\n        name: \"3-item2\",\n        isOpen: false,\n        children: [{ name: \"3.2-item 1\" }],\n      },\n    ],\n  },\n  {\n    name: \"item4\",\n    isOpen: true,\n    children: [\n      {\n        name: \"4-item1\",\n      },\n      {\n        name: \"4-item2\",\n        isOpen: true,\n        children: [{ name: \"4.2-item 1\" }],\n      },\n    ],\n  },\n];\n\nconst TreeLine = styled.button`\n  font-family: Menlo, Consolas, monospace;\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  text-transform: uppercase;\n`;\n\nfunction AddItem({ parent, funcs }) {\n  return (\n    <li>\n      <TreeLine onClick={() => funcs.addChild(parent)}>+</TreeLine>\n    </li>\n  );\n}\n\nfunction TreeItem({ item, funcs }) {\n  const { toggleOpen, makeParent } = funcs;\n  return (\n    <li>\n      <TreeLine\n      key={item.name}\n        onClick={() => toggleOpen(item)}\n        onDoubleClick={() => makeParent(item)}\n      >\n        {item.children && <span>{item.isOpen ? \"-\" : \"+\"}</span>}\n        {item.name}\n      </TreeLine>\n      {item.children && item.isOpen && (\n        <TreeList item={item} tree={item.children} funcs={funcs} />\n      )}\n    </li>\n  );\n}\n\nfunction TreeList({ item, tree, funcs }) {\n  console.log(tree);\n  return (\n    <ul>\n      {tree.map((child,i) => (\n        <TreeItem key={i} item={child} funcs={funcs} />\n      ))}\n      {/* <AddItem parent={item} funcs={funcs} /> */}\n    </ul>\n  );\n}\n\nfunction Tree({data}) {\n  const [tree, setTree] = useState(data);\n\n  useEffect(()=>{\n    setTree(data)\n  },[data])\n\n  console.log(data);\n\n  const toggleOpen = (item) => {\n    const newTree = [...tree];\n    item.isOpen = !item.isOpen;\n    setTree(newTree);\n  };\n  const makeParent = (item) => {\n    const newTree = [...tree];\n    item.children = [];\n    setTree(newTree);\n  };\n  const addChild = (parent) => {\n    const newTree = [...tree];\n    if (!parent) {\n      newTree.push({ name: \"New Item\" });\n    } else {\n      parent.children.push({ name: \"New Item\" });\n    }\n    setTree(newTree);\n  };\n\n  const funcs = {\n    toggleOpen,\n    addChild,\n    makeParent,\n  };\n  return (\n    <div className=\"Tree\">\n      <TreeList tree={tree} funcs={funcs} />\n    </div>\n  );\n}\n\nexport default Tree;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'partnersLevelJson',\n  initialState: {\n    value: {},\n  },\n  reducers: {\n    tooglePartnersLevelJson: (state, action) => {\n      state.value =  action.payload;;\n    },\n  },\n});\n\nexport const { tooglePartnersLevelJson } = slice.actions;\n\n\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const getPartnersLevelJson = state => state.partnersLevelJson.value;\n\nexport default slice.reducer;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Partners.css\";\r\nimport { AiFillBell } from \"react-icons/ai\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport Table from \"../Table/Table\";\r\nimport Tree from \"../Tree/Tree\";\r\nimport Utils from \"../../Utils/index\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\nimport { Hex_to_base58 } from \"../../Utils/Converter\";\r\nimport { getPartnersLevelJson } from \"../Redux/Reducer/PartnersLevelJson\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nimport TronWeb from \"tronweb\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getPreviewModeId } from \"../Redux/Reducer/PreviewMode\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { getuserId } from \"../Redux/Reducer/UserId\";\r\n\r\nimport successIcon from \"../../Assets/success.svg\";\r\n\r\nconst FOUNDATION_ADDRESS = \"TG31Eya5GywMYV2rwq3rwGbep4eoykWREP\";\r\n\r\nfunction Partners() {\r\n  const { height, width } = useWindowDimensions();\r\n  const previewId = useSelector(getPreviewModeId);\r\n  let walletId = previewId || window.tronLink.tronWeb.defaultAddress.base58;\r\n\r\n  const [coinPrice, setcoinPrice] = useState(0);\r\n  const [searchId, setsearchId] = useState(\"\");\r\n\r\n  const [LoadingStruct, setLoadingStruct] = useState(true);\r\n  const [LoadingTable, setLoadingTable] = useState(true);\r\n  const [searchLoader, setsearchLoader] = useState(false);\r\n\r\n  const [searchPartnerData, setsearchPartnerData] = useState({});\r\n\r\n  const [tronWeb, settronWeb] = useState({ installed: false, loggedIn: false });\r\n  const [treeData, settreeData] = useState([]);\r\n  const [TableData, setTableData] = useState([]);\r\n  const userID = useSelector(getuserId);\r\n\r\n  // const levelJson = useSelector(getPartnersLevelJson);\r\n\r\n  useEffect(() => {\r\n    CONNECT_WALLET();\r\n    FetchCoinCurrecy();\r\n  }, []);\r\n\r\n  const FetchCoinCurrecy = async () => {\r\n    fetch(\r\n      `https://api.coingecko.com/api/v3/simple/price?ids=tron&vs_currencies=usd&include_market_cap=true`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setcoinPrice(data.tron.usd);\r\n      });\r\n  };\r\n\r\n  const FetchTree = async (id) => {\r\n    let TREEDATA = {};\r\n    await Utils.contract\r\n      .viewUserReferral(id)\r\n      .call()\r\n      .then(async (items) => {\r\n        var item = {};\r\n\r\n        if (items.length > 0) {\r\n          var temp = [];\r\n          for await (const item of items) {\r\n            let e = await Hex_to_base58(item);\r\n            temp.push(e);\r\n          }\r\n\r\n          item = {\r\n            name: id,\r\n            children: temp,\r\n          };\r\n          TREEDATA[`${id}`] = temp;\r\n        }\r\n\r\n        await ProccessTreeData(TREEDATA, walletId, {}).then(async (res) => {\r\n          settreeData([res]);\r\n          setLoadingStruct(false);\r\n        });\r\n      });\r\n  };\r\n\r\n  const ProccessTreeData = async (data, id, temp) => {\r\n    const id_to_num = await Utils.contract.users(id).call();\r\n    const resId = await Promise.resolve(id_to_num.id.toNumber());\r\n\r\n    temp = {\r\n      name: resId,\r\n    };\r\n    if (id in data) {\r\n      const fetch = data[id].map(async (i) => {\r\n        return ProccessTreeData(data, i, temp);\r\n      });\r\n      const response = await Promise.all(fetch);\r\n      temp[\"children\"] = response;\r\n    } else {\r\n      temp[\"name\"] = resId;\r\n    }\r\n\r\n    return temp;\r\n  };\r\n\r\n  let PartnersArray = [];\r\n  let LevelJSON = {};\r\n\r\n  var LEVEL = 0;\r\n\r\n  const ConverttoHexArray = async (items) => {\r\n    let temp = [];\r\n    for await (const i of items) {\r\n      let t = await Hex_to_base58(i);\r\n      temp.push(t);\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  \r\n\r\n  const PreProcessData = async (data) => {\r\n    let temp = [];\r\n    for await (const item of data) {\r\n      const id_to_num = await Utils.contract.users(item.address).call();\r\n      const data = await Promise.resolve(id_to_num);\r\n\r\n      const id = data.id.toNumber();\r\n      temp.push({ address: item.address, id: id, coins: item.coins });\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  const FetchPayments = async (id) => {\r\n    let ans = [];\r\n    await Utils.contract\r\n      .paymentsLength(id)\r\n      .call()\r\n      .then(async (length) => {\r\n        setLoadingTable(false);\r\n\r\n        for (let index = 0; index < length.toNumber(); index++) {\r\n          let payment = await Utils.contract.payments(id, index).call();\r\n          let obj = {};\r\n          obj.address = await Hex_to_base58(payment.payerAddress);\r\n          obj.id = payment.payerId.toNumber();\r\n          obj.coins = payment.amount.toNumber() / 1000000;\r\n          ans.push(obj);\r\n          setTableData((e) => [...e, obj]);\r\n        }\r\n      });\r\n  };\r\n  \r\n\r\n  const CONNECT_WALLET = async () => {\r\n    try {\r\n      new Promise((resolve) => {\r\n        const tronWebState = {\r\n          installed: !!window.tronWeb,\r\n          loggedIn: window.tronWeb && window.tronWeb.ready,\r\n        };\r\n\r\n        if (tronWebState.installed) {\r\n          settronWeb(tronWebState);\r\n\r\n          return resolve();\r\n        }\r\n\r\n        let tries = 0;\r\n\r\n        const timer = setInterval(() => {\r\n          if (tries >= 10) {\r\n            const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n            window.tronWeb = new TronWeb(\r\n              TRONGRID_API,\r\n              TRONGRID_API,\r\n              TRONGRID_API\r\n            );\r\n\r\n            settronWeb({\r\n              installed: false,\r\n              loggedIn: false,\r\n            });\r\n\r\n            clearInterval(timer);\r\n            return resolve();\r\n          }\r\n\r\n          tronWebState.installed = !!window.tronWeb;\r\n          tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n          if (!tronWebState.installed) return tries++;\r\n\r\n          settronWeb(tronWebState);\r\n\r\n          resolve();\r\n        }, 100);\r\n      });\r\n\r\n      if (!tronWeb.loggedIn) {\r\n        // Set default address (foundation address) used for contract calls\r\n        // Directly overwrites the address object as TronLink disabled the\r\n        // function call\r\n        window.tronWeb.defaultAddress = {\r\n          hex: window.tronWeb?.address?.toHex(walletId),\r\n          base58: walletId,\r\n        };\r\n\r\n        window.tronWeb.on(\"addressChanged\", (e) => {\r\n          if (tronWeb.loggedIn) return;\r\n\r\n          settronWeb({\r\n            tronWeb: {\r\n              installed: true,\r\n              loggedIn: true,\r\n            },\r\n          });\r\n        });\r\n      }\r\n\r\n      await FetchTree(walletId).then(async ()=>{\r\n        await FetchPayments(walletId)\r\n      })\r\n    } catch (e) {\r\n      CONNECT_WALLET();\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const FetchPartners = async (id, partners) => {\r\n    // console.log(id);\r\n    return await Utils.contract\r\n      .viewUserReferral(id)\r\n      .call()\r\n      .then(async (items) => {\r\n        for await (const item of items) {\r\n          let e = await Hex_to_base58(item);\r\n          if (e == undefined || !e) return;\r\n          partners.push(e);\r\n          await FetchPartners(e, partners);\r\n        }\r\n        return partners;\r\n      });\r\n  };\r\n\r\n  const SearchAboutPartner = async () => {\r\n    try {\r\n      setsearchLoader(true);\r\n      if (searchId.trim().length == 0) {\r\n        return toast.error(\"Please enter valid RefId/address\", {\r\n          style: { marginTop: \"70px\" },\r\n        });\r\n      }\r\n\r\n      // if string is address\r\n      if (/[a-zA-Z]/.test(searchId)) {\r\n        const LoadUserExist = await Utils.contract.users(searchId).call();\r\n        const userexist = await Promise.resolve(LoadUserExist);\r\n        if (userexist.isExist == false) {\r\n          return toast.error(\"User does not exist\");\r\n        }\r\n        const currentLevel = await getcurrentLevel(searchId);\r\n\r\n        setsearchPartnerData({\r\n          id: userexist.id.toString(),\r\n          address: searchId,\r\n          level: currentLevel,\r\n        });\r\n\r\n        // console.log(userexist[0]);\r\n      } else {\r\n        const LoadUserAddress = await Utils.contract\r\n          .userList(JSON.parse(searchId))\r\n          .call();\r\n        const userAddress = await Promise.resolve(LoadUserAddress);\r\n\r\n        const LoadUserExist = await Utils.contract.users(userAddress).call();\r\n        const userexist = await Promise.resolve(LoadUserExist);\r\n        if (userexist.isExist == false) {\r\n          return toast.error(\"User does not exist\", {\r\n            style: { marginTop: \"70px\" },\r\n          });\r\n        }\r\n        const currentLevel = await getcurrentLevel(userAddress);\r\n        setsearchPartnerData({\r\n          id: userexist.id.toString(),\r\n          address: await Hex_to_base58(userAddress),\r\n          level: currentLevel,\r\n        });\r\n      }\r\n      setsearchLoader(false);\r\n    } catch (e) {\r\n      console.log(e);\r\n      setsearchLoader(false);\r\n    }\r\n  };\r\n\r\n  const getcurrentLevel = async (address) => {\r\n    let currentLevel = 0;\r\n    for await (const level of Array.from({ length: 10 }, (_, i) => i + 1)) {\r\n      const checkLevel = await Utils.contract\r\n        .viewUserLevelExpired(address, level)\r\n        .call();\r\n      const currentTimestamp = await Promise.resolve(checkLevel);\r\n      if (\r\n        currentTimestamp.toNumber() < Date.now() &&\r\n        currentTimestamp.toNumber() != 0\r\n      ) {\r\n        ++currentLevel;\r\n      }\r\n    }\r\n    return currentLevel;\r\n  };\r\n\r\n  const copyLink = () => {\r\n    try {\r\n      copy(`${window.location.origin}/register/${userID}`);\r\n      // navigator.clipboard.writeText(`${window.location.origin}/register/${userID}`);\r\n      toast.success(\"Copied to clipboard\", { style: { marginTop: \"65px\" } });\r\n    } catch (e) {\r\n      toast.error(\"Failed to Copy to clipboard\", {\r\n        style: { marginTop: \"65px\" },\r\n      });\r\n      // window.clipboardData.setData(\"Text\", 'Copy this text to clipboard')\r\n\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel\">\r\n      <Toaster />\r\n      <div className=\"headerWrapper\">\r\n        <p className=\"header\">Partners</p>\r\n      </div>\r\n\r\n      <div className=\"linkbox\">\r\n        <div className=\"linkInside\">\r\n          <div className=\"content\">\r\n            <p className=\"linkname1\">Your Affilate Link</p>\r\n            <br />\r\n\r\n            <div className=\"link1\">\r\n              <img alt=\"\" width=\"25\" height=\"25\" src={successIcon} />\r\n              <input\r\n                readOnly={true}\r\n                value={`${window.location.origin}/register/${userID}`}\r\n              />\r\n              <br />\r\n              <button onClick={copyLink} className=\"copybtn\">\r\n                Copy Link\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"linkInside\">\r\n          <div className=\"content\">\r\n            <>\r\n              <p className=\"linkname1\">Data about partner</p>\r\n              <br />\r\n              <div className=\"link1\">\r\n                <img alt=\"\" width=\"25\" height=\"25\" src={successIcon} />\r\n                <input\r\n                  placeholder=\"Enter Id or Address\"\r\n                  value={searchId}\r\n                  onChange={(e) => setsearchId(e.target.value)}\r\n                  className={\"link2\"}\r\n                />\r\n                <br />\r\n                <button\r\n                  onClick={() => SearchAboutPartner()}\r\n                  className=\"copybtn\"\r\n                >\r\n                  {searchLoader ? \"Searching\" : \"Search\"}\r\n                </button>\r\n              </div>\r\n            </>\r\n\r\n            <br />\r\n            <div className=\"PartnerList\">\r\n              {searchPartnerData?.id && (\r\n                <div class=\"partner__info\">\r\n                  ID: <b>{searchPartnerData?.id}</b> &nbsp;&nbsp;&nbsp; Level:{\" \"}\r\n                  <b>{searchPartnerData?.level}</b> &nbsp;&nbsp;&nbsp; Address:\r\n                  {searchPartnerData?.address}{\" \"}\r\n                  <a\r\n                    href=\"https://etherscan.io/address/0xa7d7043df066a9fd0fc277a1d48bc07d43714557 \"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i class=\"fa fa-external-link-alt\"></i>\r\n                  </a>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"structure\">\r\n        <p className=\"linkname1\">Your structure</p>\r\n        {/* <a href=\"#\">To expand\\collapse all</a> */}\r\n        <div className=\"TreeDiv\">\r\n          {!LoadingStruct ? (\r\n            <Tree data={treeData} />\r\n          ) : (\r\n            <Spinner\r\n              variant=\"primary\"\r\n              size=\"100px\"\r\n              animation=\"border\"\r\n              role=\"status\"\r\n            >\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n          )}\r\n        </div>\r\n        {!LoadingTable ? (\r\n          <Table data={TableData} coinprice={coinPrice} />\r\n        ) : (\r\n          <Spinner\r\n            variant=\"primary\"\r\n            size=\"100px\"\r\n            animation=\"border\"\r\n            role=\"status\"\r\n          >\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </Spinner>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Partners;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Table = ({ data,LoadingTable }) => {\n  const [tableData, settableData] = useState(data);\n  useEffect(() => {\n    settableData(data);\n  }, [data]);\n  return (\n    <div className=\"TableDivWrap\">\n      <div className=\"rec\">\n        <div className=\"search\">\n          <div className=\"inp\">\n            <input className=\"searchinp\" placeholder=\"Search\" />\n            <button className=\"copybtn\">Search</button>\n          </div>\n        </div>\n        <div className=\"recdiv\">\n          {!LoadingTable ?\n          <table>\n            <tr>\n              <th style={{minWidth:\"50px\"}} >Line</th>\n              <th style={{minWidth:\"50px\"}}>ID</th>\n              <th style={{minWidth:\"380px\"}}>Wallet</th>\n              <th style={{minWidth:\"50px\"}}>Level</th>\n            </tr>\n            {tableData.map((item, index) => (\n              index == 0 && (\n                <tr>\n                <td className=\"tbval\">{index + 1}</td>\n                <td className=\"tbval\">{item.id}</td>\n                <td className=\"tbval\">\n                <a target=\"_blank\" href={`https://tronscan.org/#/address/${item.address}`}>{item.address}</a>\n                </td>\n                <td className=\"tbval\">{item.currentLevel}</td>\n              </tr>\n              )\n             \n            ))}\n          </table>\n\n          : (\n        <Spinner\n          variant=\"primary\"\n          size=\"100px\"\n          animation=\"border\"\n          role=\"status\"\n        >\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Uplines.css\";\r\nimport Table from \"./Table\";\r\nimport Tree from \"../Tree/Tree\";\r\nimport Utils from \"../../Utils/index\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\nimport { Hex_to_base58 } from \"../../Utils/Converter\";\r\nimport TronWeb from \"tronweb\";\r\nimport { getPreviewModeId } from \"../Redux/Reducer/PreviewMode\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst FOUNDATION_ADDRESS = \"TG31Eya5GywMYV2rwq3rwGbep4eoykWREP\";\r\n\r\nfunction Uplines() {\r\n  const { height, width } = useWindowDimensions();\r\n  const previewId = useSelector(getPreviewModeId);\r\n  let walletId = previewId || window.tronLink.tronWeb.defaultAddress.base58;\r\n\r\n  const [LoadingTable, setLoadingTable] = useState(true);\r\n\r\n  const [tronWeb, settronWeb] = useState({ installed: false, loggedIn: false });\r\n  const [data, setdata] = useState([]);\r\n\r\n  useEffect(() => {\r\n    CONNECT_WALLET();\r\n  }, []);\r\n\r\n  const FetchData = async (address) => {\r\n    let temp_address = address;\r\n    let TempArray = [];\r\n\r\n    for await (const i of Array.from({ length: 5 }, (_, i) => i + 1)) {\r\n      const id_to_num = await Utils.contract.users(temp_address).call();\r\n\r\n      if (!id_to_num) {\r\n        setLoadingTable(false);\r\n        break;\r\n      }\r\n      const data = await Promise.resolve(id_to_num);\r\n      const refId = data?.referrerID?.toNumber();\r\n      const refererAddressPromise = await Utils.contract.userList(refId).call();\r\n      const refererAddress = await Hex_to_base58(refererAddressPromise);\r\n\r\n      await currentLevel(refererAddress).then((res) => {\r\n        setdata((e) => [\r\n          ...e,\r\n          {\r\n            id: refId,\r\n            address: refererAddress,\r\n            currentLevel: res,\r\n          },\r\n        ]);\r\n      });\r\n      temp_address = refererAddress;\r\n\r\n      if (LoadingTable) {\r\n        setLoadingTable(false);\r\n      }\r\n      if (refId == 0) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (TempArray.length > 1) {\r\n      TempArray = TempArray.filter((e) => e.id != 0);\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  const currentLevel = async (address) => {\r\n    const checkLevelData = await Utils.contract\r\n      .getUserCurrentLevel(address)\r\n      .call();\r\n    const checkLevel = await Promise.resolve(checkLevelData);\r\n    return checkLevel?.toNumber();\r\n  };\r\n\r\n  // const ProccessTreeData = async (data, id, temp) => {\r\n  // const id_to_num = await Utils.contract.users(id).call();\r\n  // const resId = await Promise.resolve(id_to_num[1].toNumber());\r\n  //   temp = {\r\n  //     name: resId,\r\n  //   };\r\n  //   if (id in data) {\r\n  //     const fetch = data[id].map(async (i) => {\r\n  //       return ProccessTreeData(data, i, temp);\r\n  //     });\r\n  //     const response = await Promise.all(fetch);\r\n  //     temp[\"children\"] = response;\r\n  //   } else {\r\n  //     temp[\"name\"] = resId;\r\n  //   }\r\n\r\n  //   console.log(temp);\r\n\r\n  //   return temp;\r\n  // };\r\n\r\n  const CONNECT_WALLET = async () => {\r\n    try {\r\n      new Promise((resolve) => {\r\n        const tronWebState = {\r\n          installed: !!window.tronWeb,\r\n          loggedIn: window.tronWeb && window.tronWeb.ready,\r\n        };\r\n\r\n        if (tronWebState.installed) {\r\n          settronWeb(tronWebState);\r\n\r\n          return resolve();\r\n        }\r\n\r\n        let tries = 0;\r\n\r\n        const timer = setInterval(() => {\r\n          if (tries >= 10) {\r\n            const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n            window.tronWeb = new TronWeb(\r\n              TRONGRID_API,\r\n              TRONGRID_API,\r\n              TRONGRID_API\r\n            );\r\n\r\n            settronWeb({\r\n              installed: false,\r\n              loggedIn: false,\r\n            });\r\n\r\n            clearInterval(timer);\r\n            return resolve();\r\n          }\r\n\r\n          tronWebState.installed = !!window.tronWeb;\r\n          tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n          if (!tronWebState.installed) return tries++;\r\n\r\n          settronWeb(tronWebState);\r\n\r\n          resolve();\r\n        }, 100);\r\n      });\r\n\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb?.address?.toHex(walletId),\r\n        base58: walletId,\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChanged\", (e) => {\r\n        if (tronWeb.loggedIn) return;\r\n\r\n        settronWeb({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true,\r\n          },\r\n        });\r\n      });\r\n\r\n      await Utils.setTronWeb(window.tronWeb).then(async () => {\r\n        await FetchData(walletId, {}).then(async (e) => {});\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Uplines\">\r\n      <div className=\"headerWrapper\">\r\n        <p className=\"header\">Uplines</p>\r\n      </div>\r\n\r\n      <Table LoadingTable={LoadingTable} data={data} />\r\n    </div>\r\n  );\r\n}\r\nexport default Uplines;\r\n\r\n// import React from \"react\";\r\n// import \"./Uplines.css\";\r\n// import { AiFillBell } from \"react-icons/ai\";\r\n// import { FaSearch } from \"react-icons/fa\";\r\n// import Table from \"./Table\";\r\n// import Tree from \"../Tree/Tree\";\r\n// function Uplines() {\r\n\r\n//   return (\r\n// <div className=\"Uplines\">\r\n//   <div>\r\n//     <p className=\"header\">Uplines</p>\r\n//   </div>\r\n\r\n//   <Table />\r\n// </div>\r\n//   );\r\n// }\r\n// export default Uplines;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Table = ({ data, coinprice,LoadingTable }) => {\n  const [tableData, settableData] = useState(data);\n  const [coinPrice, setcoinPrice] = useState(coinprice);\n\n  useEffect(() => {\n    settableData(data);\n    setcoinPrice(coinprice);\n  }, [data, coinPrice]);\n\n  return (\n    <div className=\"TableDivWrap\">\n      <div className=\"rec\">\n        <div className=\"search\">\n          <div className=\"inp\">\n            <input className=\"searchinp\" placeholder=\"Search\" />\n            <button className=\"copybtn\">Search</button>\n          </div>\n        </div>\n        <div className=\"recdiv\">\n          {!LoadingTable ?\n          <table>\n            <tr>\n              <th style={{minWidth:\"50px\"}}>Date</th>\n              <th style={{minWidth:\"380px\"}}>Recieved From ID</th>\n              <th style={{minWidth:\"220px\"}}>The amount of TRX</th>\n              <th style={{minWidth:\"50px\"}}>USD</th>\n            </tr>\n\n            {tableData.map((item, index) => (\n              <tr>\n                <td className=\"tbval\">{index + 1}</td>\n                <td className=\"tbval\">{item.id}</td>\n                <td className=\"tbval\">{item.coins}</td>\n                <td className=\"tbval\">{item.coins * coinPrice.toFixed(4)}</td>\n              </tr>\n            ))}\n          </table>\n          :\n        <Spinner variant=\"primary\" size=\"100px\" animation=\"border\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </Spinner>\n      }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Lostprofits.css\";\r\nimport Table from \"./Table\";\r\nimport { AiFillBell } from \"react-icons/ai\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport Utils from \"../../Utils/index\";\r\nimport useWindowDimensions from \"../../Tools/WindowDimensions\";\r\nimport { Hex_to_base58 } from \"../../Utils/Converter\";\r\nimport { getPartnersLevelJson } from \"../Redux/Reducer/PartnersLevelJson\";\r\n\r\nimport TronWeb from \"tronweb\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getPreviewModeId } from \"../Redux/Reducer/PreviewMode\";\r\n\r\nconst FOUNDATION_ADDRESS = \"TG31Eya5GywMYV2rwq3rwGbep4eoykWREP\";\r\n\r\nfunction Lostprofits() {\r\n  const { height, width } = useWindowDimensions();\r\n  const previewId = useSelector(getPreviewModeId);\r\n  let walletId = previewId || window.tronLink.tronWeb.defaultAddress.base58;\r\n\r\n  const [LoadingTable, setLoadingTable] = useState(true);\r\n  const [coinPrice, setcoinPrice] = useState(0);\r\n\r\n  const [tronWeb, settronWeb] = useState({ installed: false, loggedIn: false });\r\n  const [treeData, settreeData] = useState([]);\r\n  const [TableData, setTableData] = useState([]);\r\n\r\n  // const levelJson = useSelector(getPartnersLevelJson);\r\n\r\n  useEffect(() => {\r\n    CONNECT_WALLET();\r\n    FetchCoinCurrecy();\r\n  }, []);\r\n\r\n  const FetchCoinCurrecy = async () => {\r\n    fetch(\r\n      `https://api.coingecko.com/api/v3/simple/price?ids=tron&vs_currencies=usd&include_market_cap=true`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setcoinPrice(data.tron.usd);\r\n      });\r\n  };\r\n\r\n  let TotalPartnersCount = 0;\r\n\r\n  const FetchTree = async (id, TREEDATA) => {\r\n    console.log(id, \"HI\");\r\n    await Utils.contract\r\n      .viewUserReferral(id)\r\n      .call()\r\n      .then(async (items) => {\r\n        TotalPartnersCount += items.length;\r\n\r\n        var item = {};\r\n\r\n        if (items.length > 0) {\r\n          var temp = [];\r\n          for await (const item of items) {\r\n            let e = await Hex_to_base58(item);\r\n            temp.push(e);\r\n          }\r\n\r\n          item = {\r\n            name: id,\r\n            children: temp,\r\n          };\r\n          TREEDATA[`${id}`] = temp;\r\n        } else {\r\n          return;\r\n        }\r\n\r\n        for await (const item of items) {\r\n          let e = await Hex_to_base58(item);\r\n          if (e == undefined || !e) return;\r\n          await FetchTree(e, TREEDATA);\r\n        }\r\n      });\r\n\r\n    return TREEDATA;\r\n  };\r\n\r\n  const ProccessTreeData = async (data, id, temp) => {\r\n    const id_to_num = await Utils.contract.users(id).call();\r\n    const resId = await Promise.resolve(id_to_num.id.toNumber());\r\n    temp = {\r\n      name: resId,\r\n    };\r\n    if (id in data) {\r\n      const fetch = data[id].map(async (i) => {\r\n        return ProccessTreeData(data, i, temp);\r\n      });\r\n      const response = await Promise.all(fetch);\r\n      temp[\"children\"] = response;\r\n    } else {\r\n      temp[\"name\"] = resId;\r\n    }\r\n\r\n    console.log(temp);\r\n\r\n    return temp;\r\n  };\r\n\r\n  let PartnersArray = [];\r\n  let LevelJSON = {};\r\n\r\n  var LEVEL = 0;\r\n\r\n  const ConverttoHexArray = async (items) => {\r\n    let temp = [];\r\n    for await (const i of items) {\r\n      let t = await Hex_to_base58(i);\r\n      temp.push(t);\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  const FetchPayments = async (id) => {\r\n    let ans = [];\r\n    await Utils.contract\r\n      .paymentsLength(id)\r\n      .call()\r\n      .then(async (length) => {\r\n        setLoadingTable(false);\r\n\r\n        for (let index = 0; index < length.toNumber(); index++) {\r\n          let payment = await Utils.contract.lostProfit(id, index).call();\r\n          let obj = {};\r\n          obj.address = await Hex_to_base58(payment.payerAddress);\r\n          obj.id = payment.referralId.toNumber();\r\n          obj.coins = payment.loss.toNumber() / 1000000;\r\n          ans.push(obj);\r\n          setTableData((e) => [...e, obj]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const CONNECT_WALLET = async () => {\r\n    try {\r\n      new Promise((resolve) => {\r\n        const tronWebState = {\r\n          installed: !!window.tronWeb,\r\n          loggedIn: window.tronWeb && window.tronWeb.ready,\r\n        };\r\n\r\n        if (tronWebState.installed) {\r\n          settronWeb(tronWebState);\r\n\r\n          return resolve();\r\n        }\r\n\r\n        let tries = 0;\r\n\r\n        const timer = setInterval(() => {\r\n          if (tries >= 10) {\r\n            const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n            window.tronWeb = new TronWeb(\r\n              TRONGRID_API,\r\n              TRONGRID_API,\r\n              TRONGRID_API\r\n            );\r\n\r\n            settronWeb({\r\n              installed: false,\r\n              loggedIn: false,\r\n            });\r\n\r\n            clearInterval(timer);\r\n            return resolve();\r\n          }\r\n\r\n          tronWebState.installed = !!window.tronWeb;\r\n          tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n          if (!tronWebState.installed) return tries++;\r\n\r\n          settronWeb(tronWebState);\r\n\r\n          resolve();\r\n        }, 100);\r\n      });\r\n\r\n      if (!tronWeb.loggedIn) {\r\n        // Set default address (foundation address) used for contract calls\r\n        // Directly overwrites the address object as TronLink disabled the\r\n        // function call\r\n        window.tronWeb.defaultAddress = {\r\n          hex: window.tronWeb?.address?.toHex(walletId),\r\n          base58: walletId,\r\n        };\r\n\r\n        window.tronWeb.on(\"addressChanged\", (e) => {\r\n          if (tronWeb.loggedIn) return;\r\n\r\n          settronWeb({\r\n            tronWeb: {\r\n              installed: true,\r\n              loggedIn: true,\r\n            },\r\n          });\r\n        });\r\n      }\r\n\r\n      await FetchPayments(walletId);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Lostprofits\">\r\n      <div className=\"headerWrapper\">\r\n        <p className=\"header\">Lostprofits</p>\r\n      </div>\r\n\r\n      <Table\r\n        LoadingTable={LoadingTable}\r\n        data={TableData}\r\n        coinprice={coinPrice}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default Lostprofits;\r\n","import React, { useState } from \"react\";\nimport \"./Sidenavbar.css\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { AiFillMessage } from \"react-icons/ai\";\nimport { FaNetworkWired } from \"react-icons/fa\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { FaSearchDollar } from \"react-icons/fa\";\nimport { IoIosSend } from \"react-icons/io\";\nimport { BsBoxArrowRight } from \"react-icons/bs\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Offcanvas } from \"react-bootstrap\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toogleMenu, getTooglemenu } from \"../Redux/Reducer/MenuReducer\";\nimport { toogleAuth } from \"../Redux/Reducer/AuthReducer\";\n\nimport { ReactComponent as Logo } from \"../../Assets/logo.svg\";\nimport WalletIcon from \"../../Assets/wallet.svg\";\nimport WalletIconDark from \"../../Assets/wallet-dark.svg\";\nimport TreeIcon from \"../../Assets/tree.svg\";\nimport TreeIconDark from \"../../Assets/tree-dark.svg\";\nimport UplineIcon from \"../../Assets/upline.svg\";\nimport UplineIconDark from \"../../Assets/upline-dark.svg\";\nimport BurnIcon from \"../../Assets/burn.svg\";\nimport BurnIconDark from \"../../Assets/burn-dark.svg\";\n\nfunction Sidenavbarmobile() {\n  const [openMenu, setopenMenu] = useState(false);\n\n  const menu = useSelector(getTooglemenu);\n  const dispatch = useDispatch();\n\n  const location = useLocation();\n\n  const PATHNAME = () => location?.pathname?.toLowerCase();\n\n  const VALIDROUTE = (path) => (PATHNAME(path) == path ? true : false);\n\n  const Logout = () => {\n    window.tronLink.tronWeb = false;\n    dispatch(toogleAuth(\"LOGGEDOUT\"));\n  };\n\n  return (\n    <Offcanvas show={menu} onHide={() => dispatch(toogleMenu(!menu))}>\n      <Offcanvas.Header closeButton>\n        <Logo className=\"logoimg\" />\n      </Offcanvas.Header>\n      <Offcanvas.Body>\n        <div style={{ width: \"100%\" }} className=\"sidenav\">\n          <div className=\"sidebarcontainer\">\n            <div className=\"menu\">\n              <ul className=\"sidebarlist\">\n                <Link\n                  className={VALIDROUTE(\"/\") ? \"Link-Active\" : \"Link\"}\n                  onClick={() => dispatch(toogleMenu(!menu))}\n                  to=\"/\"\n                  style={{\n                    width: \"240px !important\",\n                    textDecoration: \"none\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <li\n                    style={{ color: VALIDROUTE(\"/\") ? \"white\" : null }}\n                    className=\"sidebaritems\"\n                  >\n                    <span className=\"icon\">\n                      {!VALIDROUTE(\"/\") ? (\n                        <img\n                          src={WalletIconDark}\n                          width=\"32\"\n                          alt=\"\"\n                          class=\"sidemenu_button_icon\"\n                        />\n                      ) : (\n                        <img\n                          src={WalletIcon}\n                          width=\"32\"\n                          alt=\"\"\n                          class=\"sidemenu_button_icon\"\n                        />\n                      )}\n                    </span>\n                    Dashboard\n                  </li>\n                </Link>\n\n                <Link\n                  className={VALIDROUTE(\"/partners\") ? \"Link-Active\" : \"Link\"}\n                  onClick={() => dispatch(toogleMenu(!menu))}\n                  to=\"/Partners\"\n                  style={{\n                    width: \"240px !important\",\n                    textDecoration: \"none\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <li\n                    style={{ color: VALIDROUTE(\"/partners\") ? \"white\" : null }}\n                    className=\"sidebaritems\"\n                  >\n                    <span className=\"icon\">\n                      {!VALIDROUTE(\"/partners\") ? (\n                        <img src={TreeIconDark} width=\"32\" />\n                      ) : (\n                        <img src={TreeIcon} width=\"32\" />\n                      )}\n                    </span>\n                    Partners\n                  </li>\n                </Link>\n                <Link\n                  className={VALIDROUTE(\"/uplines\") ? \"Link-Active\" : \"Link\"}\n                  onClick={() => dispatch(toogleMenu(!menu))}\n                  to=\"/Uplines\"\n                  style={{\n                    width: \"240px !important\",\n                    textDecoration: \"none\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <li\n                    style={{ color: VALIDROUTE(\"/uplines\") ? \"white\" : null }}\n                    className=\"sidebaritems\"\n                  >\n                    <span className=\"icon\">\n                      {!VALIDROUTE(\"/uplines\") ? (\n                        <img src={UplineIconDark} width=\"32\" />\n                      ) : (\n                        <img src={UplineIcon} width=\"32\" />\n                      )}\n                    </span>\n                    Uplines\n                  </li>\n                </Link>\n                <Link\n                  className={\n                    VALIDROUTE(\"/lostprofits\") ? \"Link-Active\" : \"Link\"\n                  }\n                  onClick={() => dispatch(toogleMenu(!menu))}\n                  to=\"/Lostprofits\"\n                  style={{\n                    width: \"240px !important\",\n                    textDecoration: \"none\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <li\n                    style={{\n                      color: VALIDROUTE(\"/lostprofits\") ? \"white\" : null,\n                    }}\n                    className=\"sidebaritems\"\n                  >\n                    <span className=\"icon\">\n                      {!VALIDROUTE(\"/lostprofits\") ? (\n                        <img\n                          style={{ marginLeft: \"3px\" }}\n                          width=\"22\"\n                          src={BurnIconDark}\n                        />\n                      ) : (\n                        <img\n                          style={{ marginLeft: \"3px\" }}\n                          width=\"22\"\n                          src={BurnIcon}\n                        />\n                      )}\n                    </span>\n                    Lost profits\n                  </li>\n                </Link>\n                {/* <li\n              style={{ color: VALIDROUTE(\"/promo\") ? \"white\" : null }}\n              className=\"sidebaritems\"\n            >\n              <span className=\"icon\">\n                <IoIosSend size={24} />\n              </span>\n              promo\n            </li> */}\n              </ul>\n            </div>\n          </div>\n          <Link\n            className={\"Link\"}\n            onClick={() => {Logout();dispatch(toogleMenu(!menu))}}\n            to=\"/\"\n            style={{\n              width: \"240px !important\",\n              textDecoration: \"none\",\n              color: \"black\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <li className=\"sidebaritems logoutItem\">Logout</li>\n          </Link>\n        </div>\n      </Offcanvas.Body>\n    </Offcanvas>\n  );\n}\nexport default Sidenavbarmobile;\n","import React, { useEffect, useState } from \"react\";\nimport Topbar from \"../Components/topbar/Topbar\";\nimport Sidenavbar from \"../Components/Sidenavbar/Sidenavbar\";\nimport \"../App.css\";\nimport Controlpanel from \"../Components/Control_Panel/Controlpanel\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Message from \"../Components/Message/Message\";\nimport Partners from \"../Components/Partners/Partners\";\nimport Uplines from \"../Components/Uplines/Uplines\";\nimport Lostprofits from \"../Components/Lostprofits/Lostprofits\";\nimport Login from \"../Components/Login/Login\";\nimport ScrollMemory$1 from \"react-router-scroll-memory\";\nimport useWindowDimensions from \"../Tools/WindowDimensions\";\nimport Sidenavbarmobile from \"../Components/Sidenavbar/Sidenavbarmobile\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toogleAuth } from \"../Components/Redux/Reducer/AuthReducer\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { getPreviewModeId } from \"../Components/Redux/Reducer/PreviewMode\";\n\nfunction Console() {\n  const { height, width } = useWindowDimensions();\n  const dispatch = useDispatch();\n  const previewId = useSelector(getPreviewModeId);\n\n  useEffect(() => {\n    document.title = \"Console\";\n  \n\n    if (previewId) {\n      return;\n    }\n\n    const DISCONNECT_EMIT = setInterval(() => {\n      // console.log(window.tronLnk?.tronWeb);\n      if (window.tronLink?.tronWeb == false) {\n        dispatch(toogleAuth(\"LOGGEDOUT\"));\n\n        // dispatch(toogleAuth(\"LOGGEDOUT\"))\n        // window.location.reload();\n      }\n      if (window?.tronLink?.tronWeb) {\n        dispatch(toogleAuth(\"LOGGEDIN\"));\n        // alert(\"YES\")\n      }\n    }, 1000);\n\n    return () => clearInterval(DISCONNECT_EMIT);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <ScrollMemory$1 />\n\n      {width >= 860 ? <Sidenavbar /> : <Sidenavbarmobile />}\n\n      <div\n        className={width >= 850 ? \"ControlPanel\" : \"ControlPanel-SmallScreen \"}\n      >\n        <Topbar />\n\n        <div className=\"MainDiv\">\n          <Route component={Controlpanel} exact path=\"/\" />\n          <Route component={Message} path=\"/Message\" />\n          <Route component={Partners} path=\"/Partners\" />\n          <Route component={Uplines} path=\"/Uplines\" />\n          <Route component={Lostprofits} path=\"/Lostprofits\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Console;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Auth from \"./Routes/Auth\";\nimport Console from \"./Routes/Console\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport toast, { Toaster  } from \"react-hot-toast\";\n\nimport { getAuth, toogleAuth } from \"./Components/Redux/Reducer/AuthReducer\";\n\nconst App = () => {\n  const authStatus = useSelector(getAuth);\n\n  // useEffect(() => {\n  //   if (authStatus == \"LOGGEDOUT\") {\n  //     if (window.location.pathname != \"/\") {\n  //       window.location.href = \"/\";\n  //     }\n  //   }\n  // }, [authStatus]);\n\n  if (window?.tronWeb) {\n    window?.tronWeb.on(\"addressChanged\", (e) => {\n      // window.location.reload();\n    });\n  }\n\n  return (\n      <BrowserRouter basename={process.env.PUBLIC_URL} >\n      {/* <Toaster/> */}\n        {/* {access ? <Redirect to={\"/\"} /> : <Redirect to={\"/login\"} />} */}\n        <Route\n          to={\"/\"}\n          // render={() => (authStatus == \"LOGGEDIN\" ? <Console /> : <Console />)}\n\n          render={() => (authStatus == \"LOGGEDIN\" ? <Console /> : <Auth />)}\n        />\n\n      </BrowserRouter>\n  );\n};\n\nexport default App;\n\n// <div className=\"container1\">\n// <Switch>\n//   <Route exact path=\"/\">\n//     <div className=\"con2\">\n//       {/* <Topbar /> */}\n//       <div className=\"con3\">\n//         <Sidenavbar />\n//         <Controlpanel />\n//       </div>\n//     </div>\n//   </Route>\n//   <Route path=\"/Message\">\n//     <div className=\"con2\">\n//       <Topbar />\n//       <div className=\"con3\">\n//         <Sidenavbar />\n//         <Message />\n//       </div>\n//     </div>\n//   </Route>\n//   <Route path=\"/Partners\">\n//     <div className=\"con2\">\n//       <Topbar />\n//       <div className=\"con3\">\n//         <Sidenavbar />\n//         <Partners />\n//       </div>\n//     </div>\n//   </Route>\n//   <Route path=\"/Uplines\">\n//     <div className=\"con2\">\n//       <Topbar />\n//       <div className=\"con3\">\n//         <Sidenavbar />\n//         <Uplines />\n//       </div>\n//     </div>\n//   </Route>\n//   <Route path=\"/Lostprofits\">\n//     <div className=\"con2\">\n//       <Topbar />\n//       <div className=\"con3\">\n//         <Sidenavbar />\n//         <Lostprofits />\n//       </div>\n//     </div>\n//   </Route>\n\n//   <Route path=\"/auth\">\n//     <Login />\n//   </Route>\n// </Switch>\n// </div>\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport MenuReducer from './Reducer/MenuReducer';\nimport AuthReducer from './Reducer/AuthReducer';\nimport PartnersLevelJson from './Reducer/PartnersLevelJson';\nimport PreviewMode from './Reducer/PreviewMode';\nimport UserId from './Reducer/UserId';\n\n\nexport default configureStore({\n  reducer: {\n    menu: MenuReducer,\n    auth:AuthReducer,\n    partnersLevelJson:PartnersLevelJson,\n    previewModeId:PreviewMode,\n    userId:UserId\n\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ScrollToTop from \"./Tools/ScrollToTop\";\nimport ScrollMemory$1 from \"react-router-scroll-memory\";\nimport { Provider } from \"react-redux\";\n\nimport Store from \"./Components/Redux/Store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}